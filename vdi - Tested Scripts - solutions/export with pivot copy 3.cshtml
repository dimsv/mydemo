


@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <title>Export Data to Excel with Pivot Table and Chart</title>
</head>
<body>
    <h2>Export Data to Excel with Pivot Table and Chart Example</h2>
    <form method="post" action="ExportTxtToExcelTestVDI.cshtml">
        <button type="submit" name="export">Export to Excel</button>
    </form>
</body>
</html>

@{
    if (IsPost && Request["export"] != null)
    {
        ExportDataToExcelWithPivotAndChart();
    }
}

@functions {
    public void ExportDataToExcelWithPivotAndChart()
    {
        // Sample data to write to TXT file
        string[] data = new string[]
        {
            "Name,Age,Country",
            "John Doe,30,USA",
            "Joe Biden,81,USA",
            "Donald Trump,78,USA",
            "Jane Smith,25,UK",
            "James Bond, 45, UK",
            "Sam Brown,22,Canada",
            "John Doe,31,USA",
            "Jane Smith,26,UK",
            "Sam Brown,23,Canada"
            };

        // Path to save the TXT file
        string txtFilePath = Server.MapPath("~/App_Data/data.txt");

        // Write sample data to TXT file
        System.IO.File.WriteAllLines(txtFilePath, data);

        // Create a new Excel package
        using (OfficeOpenXml.ExcelPackage package = new OfficeOpenXml.ExcelPackage())
        {
            // Add a worksheet for the data
            OfficeOpenXml.ExcelWorksheet dataWorksheet = package.Workbook.Worksheets.Add("Data");

            // Read the TXT file data
            string[] txtLines = System.IO.File.ReadAllLines(txtFilePath);
            for (int i = 0; i < txtLines.Length; i++)
            {
                string[] columns = txtLines[i].Split(',');
                for (int j = 0; j < columns.Length; j++)
                {
                    if (i > 0 && j == 1)
                    {
                        // Convert Age to number
                        dataWorksheet.Cells[i + 1, j + 1].Value = int.Parse(columns[j].Trim());
                    }
                    else
                    {
                        dataWorksheet.Cells[i + 1, j + 1].Value = columns[j].Trim();
                    }
                }
            }

            // Add a worksheet for the pivot table
            OfficeOpenXml.ExcelWorksheet pivotWorksheet = package.Workbook.Worksheets.Add("Pivot");

            // Define the data range for the pivot table
            var dataRange = dataWorksheet.Cells[dataWorksheet.Dimension.Address];

            // Create a pivot table
            var pivotTable = pivotWorksheet.PivotTables.Add(pivotWorksheet.Cells["A3"], dataRange, "PivotTable");

            // Set the fields for the pivot table
            pivotTable.RowFields.Add(pivotTable.Fields["Country"]);
            pivotTable.DataFields.Add(pivotTable.Fields["Age"]).Function = OfficeOpenXml.Table.PivotTable.DataFieldFunctions.Sum;
            pivotTable.DataOnRows = false;

            // Add a worksheet for the chart
            OfficeOpenXml.ExcelWorksheet chartWorksheet = package.Workbook.Worksheets.Add("Chart");

            // Create a chart
            var chart = chartWorksheet.Drawings.AddChart("AgeChart", OfficeOpenXml.Drawing.Chart.eChartType.ColumnClustered);
            chart.Title.Text = "Sum of Ages by Country";
            chart.SetPosition(0, 0, 0, 0);
            chart.SetSize(800, 600);

            // Define the data for the chart
            var series = chart.Series.Add(pivotWorksheet.Cells["B4:B8"], pivotWorksheet.Cells["A4:A8"]);
            series.Header = "Sum of Ages";

            // Generate the Excel file content
            byte[] excelData = package.GetAsByteArray();

            // Set the response headers and content type
            Response.Clear();
            Response.ContentType = "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet";
            Response.AddHeader("content-disposition", "attachment; filename=DataWithPivotAndChart.xlsx");
            Response.BinaryWrite(excelData);
            Response.End();
        }
    }
}

