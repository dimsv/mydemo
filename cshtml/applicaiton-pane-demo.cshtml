@using RestSharp;
@using System.Globalization;
@using Newtonsoft.Json
@using System.Dynamic;
@using System;
@using System.Diagnostics;
@using System.Threading;

@{
  //Stopwatch stopwatch = new Stopwatch();
  //stopwatch.Start();
  //Stopwatch stopwatch1 = new Stopwatch();

  //stopwatch1.Start();
  var loginGuid = Request["loginGuid"];
  var applicationId = Request["appId"].AsInt(0);
  var language = Request["lang"];

  dynamic currentLogin = null;
  Database db = null;

  #region security
  if (string.IsNullOrEmpty(loginGuid) || !WebSecurity.IsAuthenticated)
  {
    Response.Write("<script>top.location='.'</script>");
    Response.End();
    //SmartCV.ReturnUnauthenticated(Response);
  }
  db = Database.Open("smartcv");
  currentLogin = db.QuerySingle("SELECT * FROM logins WITH (NOLOCK) JOIN roles ON (lRoleId=rlId) WHERE lGuid=@0", loginGuid);
  if (currentLogin == null) { SmartCV.ReturnUnauthenticated(Response); }
  #endregion security

  var resp = Utils.Elastic("applications/_doc/" + applicationId.ToString(), "", Method.GET, "");
  var result = Json.Decode(resp);
  var aCandidateIdRecord = db.QuerySingle(@"SELECT aCandidateId FROM applications a WITH (NOLOCK)
JOIN jobs j ON a.aJobId = j.jId
JOIN organizations o ON o.oId = j.jOrganizationId
JOIN customers c ON  o.oCustomerId = c.cId
WHERE aId=@0 AND cId=@1", applicationId, currentLogin.lCustomerId);

  if (result == null || result._source == null || aCandidateIdRecord == null) { return; }
  var aCandidateId = aCandidateIdRecord.aCandidateId;

  #region customer cross-check
  if (currentLogin.lCustomerId != result._source.customerId) { SmartCV.ReturnUnauthenticated(Response); }
  #endregion customer cross-check

  var uiTerms = Utils.GetTerms(language);
  var userFollowing = db.QuerySingle("SELECT * FROM candidate_followers  WITH (NOLOCK) JOIN logins ON (cfLoginId=lId) WHERE lGuid=@0 AND cfCandidateId=@1", loginGuid, aCandidateId);
  var followersCount = db.QueryValue("SELECT COUNT(*) FROM candidate_followers  WITH (NOLOCK) WHERE cfCandidateId=@0", aCandidateId);
  //var answers = db.Query("SELECT * FROM application_answers WITH (NOLOCK)  JOIN questions on (aaQuestionId=qstId) WHERE aaCandidateId=@0", result._source.candidateId);
  var answers = db.Query(@"SELECT a.aCreatedDateTime, j.jTitle,jId, aa.*, qst.*
FROM application_answers aa WITH (NOLOCK)
JOIN questions qst ON (aa.aaQuestionId=qst.qstId)
JOIN applications a ON a.aId = aa.aaApplicationId
JOIN jobs j ON j.jId = a.aJobId
WHERE aaCandidateId = @0
ORDER BY a.aCreatedDateTime desc, qstId ", aCandidateId);
  var videoInterviews = db.Query("SELECT * FROM application_video_interviews WITH (NOLOCK) JOIN video_interviews ON (aviInterviewId=viId)  WHERE aviCandidateId=@0 AND aviStatus=3 ORDER BY aviAnsweredDateTime DESC", aCandidateId);

  #region evaluation forms/interview kit
  var evaluationFormsCount = db.QueryValue(@"SELECT COUNT(*) FROM evaluation_forms ef WITH (NOLOCK) " +
                                          " WHERE ef.efCustomerId = @0", currentLogin.lCustomerId);

  var evaluationForms = db.QuerySingle(@"SELECT ef.efId, ef.efName FROM evaluation_forms ef WITH (NOLOCK) " +
                  " JOIN jobs j ON j.jEvaluationFormId = ef.efId " +
                  " WHERE ef.efCustomerId = @0 AND j.jId = @1", currentLogin.lCustomerId, result._source.jobId);

  IEnumerable<dynamic> evaluationFormCriteria = null;
  dynamic applicationEvaluationForm = null;
  IEnumerable<dynamic> applicationEvaluationAnswers = null;
  IEnumerable<dynamic> applicationEvaluationAnswersComments = null;
  IEnumerable<dynamic> applicationEvaluationAnswersAllUsers = null;
  var applicationFormId = 0;
  if (evaluationFormsCount > 0 && evaluationForms != null)
  {
    evaluationFormCriteria = db.Query(@"SELECT * FROM evaluation_criteria ef WITH (NOLOCK) " +
                                        " WHERE ecEvaluationFormId = @0 ORDER BY ecRank", evaluationForms.efId);

    if (evaluationFormCriteria != null)
    {
      #region CURRENT USER
      applicationEvaluationForm = db.QuerySingle(@"SELECT * FROM application_evaluation_forms aef WITH (NOLOCK) " +
                      " JOIN evaluation_forms ef ON aef.aefEvaluationFormId = ef.efId " +
                      " WHERE ef.efCustomerId = @0 AND aef.aefApplicationId = @1 AND aef.aefCandidateId = @2 AND aef.aefLoginId = @3",
                      currentLogin.lCustomerId, applicationId, aCandidateId, currentLogin.lId);

      if (applicationEvaluationForm != null)
      {
        applicationFormId = applicationEvaluationForm.aefId;
        applicationEvaluationAnswers = db.Query(@"SELECT * FROM application_evaluation_answers aea WITH (NOLOCK) " +
                                        " WHERE aea.aeaApplicationFormId = @0", applicationFormId);

        //var fileNames = applicationEvaluationAnswers.AsEnumerable().Select(x => (string)(x.aeaGuid.ToString() + ".json")).ToArray();
        //applicationEvaluationAnswersComments = Azure.DownloadString("evaluation-answers-details",
        //   (((IEnumerable<string>)fileNames).ToArray()));
        var answersJson = Azure.DownloadString("evaluation-answers-details", applicationEvaluationForm["aefGuid"].ToString() + ".json");
        applicationEvaluationAnswersComments = JsonConvert.DeserializeObject(answersJson);

      }
      #endregion CURRENT USER

      #region ALL USERS
      applicationEvaluationAnswersAllUsers = db.Query(@"SELECT ec.*,aea.*, aef.aefAverageRating, aef.aefGUID, l.lFirstName, l.lLastName,
l.lId FROM application_evaluation_answers aea
LEFT JOIN application_evaluation_forms aef ON aef.aefId = aea.aeaApplicationFormId
LEFT JOIN evaluation_forms ef ON ef.efId = aef.aefEvaluationFormId
LEFT JOIN evaluation_criteria ec ON ec.ecEvaluationFormId = ef.efId AND aea.aeaCriterionId = ec.ecId
LEFT JOIN logins l ON l.lId = aef.aefLoginId
WHERE aef.aefApplicationId = @0
AND l.lCustomerId = @1
AND aef.aefCandidateId = @2
ORDER BY l.lId, ecRank"
                                                      , applicationId, currentLogin.lCustomerId, aCandidateId);
      //applicationEvaluationFormAllUsers = db.Query(@"SELECT * FROM application_evaluation_forms aef WITH (NOLOCK) " +
      //                " JOIN evaluation_forms ef ON aef.aefEvaluationFormId = ef.efId " +
      //                " WHERE ef.efCustomerId = @0 AND aef.aefApplicationId = @1 AND aef.aefCandidateId = @2",
      //                currentLogin.lCustomerId, applicationId, result._source.candidateId);
      #endregion ALL USERS

    }
  }

  dynamic otherEvaluations_latestItem = db.QuerySingle(@"SELECT top 1 aefApplicationId as applicationid, lid, lfirstname, llastname, jtitle, jid, MAX(aeaCreatedDateTime) as createddatetime
FROM application_evaluation_answers aea
LEFT JOIN application_evaluation_forms aef ON aef.aefId = aea.aeaApplicationFormId
LEFT JOIN evaluation_forms ef ON ef.efId = aef.aefEvaluationFormId
LEFT JOIN evaluation_criteria ec ON ec.ecEvaluationFormId = ef.efId AND aea.aeaCriterionId = ec.ecId
LEFT JOIN logins l ON l.lId = aef.aefLoginId
LEFT JOIN events e ON e.eApplicationId = aef.aefApplicationId
LEFT JOIN jobs j ON(e.eJobId = j.jId AND(e.eType = @3 OR e.eJobId > 0))
WHERE aef.aefApplicationId <> @0 AND jId is not null AND l.lCustomerId=@1
AND aef.aefCandidateId = @2
GROUP BY aefApplicationId, lId, lFirstName, lLastName, jId, jTitle
ORDER BY MAX(aeaCreatedDateTime) DESC;",
                applicationId, currentLogin.lCustomerId, aCandidateId, SmartCV.eventTypeId_eventMoveApplicationToJob);
  #endregion evaluation forms/interview kit

  #region application file attachments
  //var applicationFileAttachments = db.Query(@"SELECT DISTINCT f.fId, * FROM application_file_attachments afa WITH (NOLOCK) JOIN files f ON f.fId = afa.afaFileId " +
  //                                           " WHERE afa.afaCandidateId = @0 AND afa.afaApplicationId = @1 ORDER BY afa.afaCreatedDateTime DESC;",
  //                                           result._source.candidateId, applicationId);

  var applicationFileAttachments = db.Query(@"SELECT f.fId, afa.afaFilename, f.fFileSize, f.fGuid, l.lFirstName, l.lLastName FROM files f " +
                                          " LEFT OUTER JOIN application_file_attachments afa ON f.fId = afa.afaFileId " +
                                          " LEFT OUTER JOIN logins l ON l.lId = afa.afaLoginId " +
                                          " WHERE afa.afaCandidateId = @0 " +
                                          " AND afa.afaApplicationId = @1 " +
                                          " GROUP BY afa.afaFileId, f.fId, f.fFileSize, f.fGuid, afa.afaFilename, l.lFirstName, l.lLastName " +
                                          " ORDER BY afa.afaFilename;", aCandidateId, applicationId);

  #endregion application file attachemnts

  //#region candidate applications
  var candidateApplicationsInfo = db.Query(@"SELECT aCreatedDateTime, j.jTitle,j.jId, j.jJobCode, j.jIsGeneralAdmission, o.oVirtualDir, j.jHashId,
j.jIsPublished, a.aId, 
ins.isName, a.aExternalSource, ps.psName, ps.psId
FROM applications a  WITH (NOLOCK)
JOIN jobs j ON j.jId = a.aJobId
JOIN organizations o ON o.oId = j.jOrganizationId
LEFT JOIN internal_sources ins ON ins.isId = a.aInternalSourceId
LEFT JOIn pipeline_stages ps ON ps.psId = a.aPipelineStageId
WHERE aCandidateId = @0 AND aId <> @1 ORDER BY aCreatedDateTime DESC",
                   aCandidateId, applicationId);
  //#endregion candidate applications

  var templates = db.Query("SELECT * FROM templates WITH (NOLOCK) WHERE tmpCustomerId=@0 AND tmpType=2", currentLogin.lCustomerId);

  var rights = WebCache.Get("user_rights_" + currentLogin.lId.ToString());
  if (rights == null)
  {
    rights = db.Query("SELECT * FROM role_details WHERE rdRoleId=@0", currentLogin.lRoleId);
    WebCache.Set("user_rights_" + currentLogin.lId.ToString(), rights, 15);
  }

  var canDownloadResume = false;
  var userRights = "";
  foreach (var right in rights)
  {
    userRights += right.rdRightId + " ";
    if (right.rdRightId.ToString() == "DOWNLOAD_RESUME") { canDownloadResume = true; }
  }

  var isExpired = false;
  if (DateTime.Now > Convert.ToDateTime(result._source.expiryDate) & Convert.ToDateTime(result._source.expiryDate).Year > 1900)
  {
    isExpired = true;
  }

  var isWithdrawn = false;
  if (result._source.isWithdrawn == 1)
  {
    isWithdrawn = true;
  }

  int timelineRoleId = 0;
  if (!userRights.Contains("VIEW_ALL_ROLES_TIMELINE"))
  {
    timelineRoleId = currentLogin.lRoleId;
  }

  var customerPrefs = SmartCV.GetCustomerPrefs(currentLogin.lCustomerId);
  var userPrefs = SmartCV.GetUserPrefs(currentLogin.lId);
  var showHistoryJobPositionDescription = userPrefs.showHistoryJobPositionDescription;
  var simplifiedResumeView = userPrefs.simplifiedResumeView;
  var currentCustomerId = currentLogin.lCustomerId;
  var customerLogins = db.Query("SELECT * FROM logins WHERE lCustomerId=@0 AND lStatusId=1 AND lId<>@1", currentCustomerId, currentLogin.lId);
  // List<dynamic> records = new List<dynamic>();
  var records = "";
  var c = 1;

  foreach (var customerLogin in customerLogins)
  {
    records += "{key: '" + customerLogin.lFullName + "', value: '" + customerLogin.lHandleId + "'}";
    if (c < customerLogins.Count)
    {
      records += ",";
    }
    c++;

  }

  var query = "SELECT jId, jTitle, jCreatedDateTime FROM jobs j WITH (NOLOCK) JOIN organizations ON (jOrganizationId=oId) JOIN customers ON (oCustomerId=cId) JOIN geo_areas ON (jAreaId=gaId) ";
  //query += " JOIN jobs_assignments ON (jId=jaJobId) WHERE cId=@0 ";
  //query += " AND jaAssignedTo=" + WebSecurity.CurrentUserId.ToString() + " ";
  //query += " AND jId<>@1";
  query += " WHERE cId=@0 AND jId<>@1";
  query += " ORDER BY jTitle ASC";
  var jobsAssignedToMe = db.Query(query, currentCustomerId, result._source.jobId);

  var dialCodes = WebCache.Get("dial_codes");
  if (dialCodes == null)
  {
    dialCodes = db.Query("SELECT DISTINCT gcDialCode FROM geo_countries ORDER BY gcDialCode");
    WebCache.Set("dial_codes", dialCodes, 1);
  }

  var isAccessAllowed = false;

  if (userRights.Contains("VIEW_UNASSIGNED_CANDIDATES"))
  {
    isAccessAllowed = true;
  }
  else
  {
    var usersAssignedToThisJob = db.Query("SELECT * FROM jobs_assignments WITH (NOLOCK) WHERE jaJobId=@0", result._source.jobId);
    foreach (var userAssignedToThisJob in usersAssignedToThisJob)
    {
      if (userAssignedToThisJob.jaAssignedTo == currentLogin.lId)
      {
        isAccessAllowed = true;
      }
    }
  }


  //stopwatch1.Stop();
  //Stopwatch stopwatch2 = new Stopwatch();

  //stopwatch2.Start();
  var blindHiringRoles = new List<int>();
  foreach (var blindHiringRole in customerPrefs.blindHiringRoles)
  {
    blindHiringRoles.Add(blindHiringRole);
  }

  bool isBlindHiringEnabled = false;
  if (blindHiringRoles.Contains(currentLogin.lRoleId))
  {
    isBlindHiringEnabled = true;
  }

  #region consents
  var topGuid = db.QueryValue(@"SELECT top 1 acnsBatchGuid FROM application_consents where acnsApplicationId=@0 ORDER by acnsCreatedDateTime DESC", applicationId);
  var consents = topGuid != null ? db.Query(@"SELECT distinct c.cnsId, c.cnsText, c.cnsIsActive, cnsRank, oName, cnsInternalName, cnsCreatedDateTime, ac.acnsIsAccepted, ac.acnsCreatedDateTime
FROM consents c JOIN organizations o ON c.cnsOrganizationId = oId
RIGHT JOIN application_consents ac ON ac.acnsConsentId=c.cnsId
WHERE oCustomerId=@0 AND ac.acnsApplicationId=@1 AND acnsBatchGuid=@2
ORDER BY cnsRank asc, oName asc, cnsIsActive asc, cnsInternalName asc, cnsCreatedDateTime DESC",
                          currentCustomerId, applicationId, topGuid) : null;
  #endregion consents

  #region assessments
  var bryqActivated = !(customerPrefs.integrationsBryqActivated == 0 || string.IsNullOrEmpty(customerPrefs.integrationsBryqAPIKey));
  dynamic assessments = new List<dynamic>();
  //if (bryqActivated)
  //{
  //We dont load assessments only if Bryq is activated because we need them also for preview only purposes.
  assessments = db.Query(@"SELECT DISTINCT apasAssessmentId, apasAssessmentName,
apasLastUpdatedDateTime, apasInterviewId, apasUrl, apasEmbedUrl
FROM application_assessments apas
WHERE apasCandidateId = @0  AND apasStatus = 3
ORDER BY apasLastUpdatedDateTime DESC", aCandidateId);
  //apasApplicationId = @1 //applicationId

  //stopwatch2.Stop();
  @*}*@
  #endregion assessments
  //Stopwatch stopwatch3 = new Stopwatch();

  //stopwatch3.Start();
  //Stopwatch stopwatch31 = new Stopwatch();

  //stopwatch31.Start();

  #region projects
  var projects = db.Query(@"SELECT DISTINCT prj.* FROM projects prj
                              JOIN customers c ON c.cId = prj.prjCustomerId
                              WHERE prjCustomerId=@0 AND prjIsActive=1
                              ORDER BY prjName",// prjRank",
        currentCustomerId);
  var projectsEnabled = projects != null && projects.Count > 0;
  #endregion projects
}
 
<script>
  var validationElements = ["sms_form", "comment_form", "evaluation_form", "changename_form"];
  function hideExcept(elementId) {
    var elements = ["email_form_area", "sms_form_area", "vinterview_form_area",
      "comment_form_area", "evaluation_form_area", "changename_form_area",
      "application_evaluations_forms_area", "application_attachments", "assessments_area"];
    elements.forEach(function(element, index, array) {
      var $el = $(document.getElementById(element));
      if (element == elementId) {

        var formElement = element.replace("_area", "");
        var $form = $(document.getElementById(formElement));
        if (!$el.is(":visible") && validationElements.indexOf(formElement) > -1) {
          $form.validate().resetForm();
          $form.validate({});
        }
        if (element == "assessments_area") {
          if ($("#assessments_area").is(":visible")) {
            $el.toggle(false);
          } else {
            GetAssessments(function(e) { e.toggle(true); }($el));
          }
        } else {
          $el.toggle();
        }

        if (element == "changename_form_area") {
          $(function() {
            $('#dialCode').select2({
              minimumResultsForSearch: -1 //hide search
            });
            $('#dialCode').val('30');
            $('#dialCode').trigger('change');
          });
          //console.log('phone: ' + '@(result._source.phone)')
          $.getJSON("/data/parse-phone-number?phoneNumberRaw=@Server.UrlEncode(result._source.phone)",
            function(data) {
              if (data.parsedDialCode != null && data.parsedDialCode != "") $("#dialCode").val(data.parsedDialCode);
              $('#dialCode').trigger('change');
              $("#phone").val(data.parsedPhoneNumber);
              //alert(data.parsedDialCode + data.parsedPhoneNumber)
            });

        }

        if (element == "application_evaluations_forms_area" && $("#application_evaluations_forms_area").is(":visible")) {
          HeartbeatInterval = setInterval(Heartbeat, 300000);
          //console.log("HeartbeatInterval " + HeartbeatInterval);
        }

      } else {
        if ((element == "application_evaluations_forms_area" || !$("#application_evaluations_forms_area").is(":visible")) && HeartbeatInterval > -1) {
          //console.log("clearInterval " + HeartbeatInterval);
          clearInterval(HeartbeatInterval);
        }
        $el.hide();
      }
    });
  }
</script>

<!-- Numbers -->
<div class="card-body border-0 pb-0">

  <div id="action_buttons_area" class="text-right mb-3" style="min-height:60px;">
    @if (!isExpired && !isWithdrawn && isAccessAllowed)
    {
      <div id="candidate_url" style="position: absolute;left: -999em" class="font-weight-semibold">candindate url</div>
      <div id="candidate_url_anon" style="position: absolute;left: -999em" class="font-weight-semibold">candindate url</div>

      if (followersCount > 0)
      {
        <span class="d-none">
          <span id="followers_count">
            @followersCount
          </span>
          @uiTerms["lblFollowers"]
        </span>
      }
      <button href="" class="btn btn-light mr-2 float-left" onclick="hideExcept('comment_form_area')" data-toggle="tooltip"
              data-placement="top" title="@uiTerms["lblAddComment"]">
        <i class="icon-comment"></i>
      </button>
      <button href="" class="btn btn-light mr-2 float-left" onclick="hideExcept('evaluation_form_area')" data-toggle="tooltip"
              data-placement="top" title="@uiTerms["lblAddEvaluation"]">
        <i class="icon-star-full2"></i>
      </button>

      <button class="btn btn-light mr-2 float-left" onclick="hideExcept('email_form_area')" data-toggle="tooltip" data-placement="top" title="@uiTerms["lblEmailCandidate"].Replace("{0}", uiTerms[Utils.GetGenderedTerm("lblCandidateLiteralAccusative", result._source.gender)])"><i class="icon-mail5"></i></button>
      <button href="" class="btn btn-light mr-2 float-left" onclick="hideExcept('changename_form_area')" data-toggle="tooltip" data-placement="top" title="@uiTerms["lblChangeBasicInfo"]"><i class="fas fa-user-edit"></i></button>
      var canCopyApplications = true;
      dynamic notCopyableApplications = null;
      if (jobsAssignedToMe != null && jobsAssignedToMe.Count > 0)
      {
        notCopyableApplications = db.Query(@"SELECT distinct a.aJobId FROM
        applications a WITH (NOLOCK)
      WHERE a.aJobId IN (" +
           ((IEnumerable<dynamic>)jobsAssignedToMe).Select(x => x.jId).Aggregate<dynamic>((cur, n) => cur + "," + n).ToString() +
           //string.Join(",", ((IEnumerable<dynamic>)jobsAssignedToMe).Select(x => x.jId.ToString()).ToList()) +
           ") AND a.aEmail = @0 GROUP BY a.aJobId",
            result._source.email);
        canCopyApplications = notCopyableApplications.Count < jobsAssignedToMe.Count;
      }
      if (canCopyApplications)
      {
        <a href="#modal_copymovecandidatetojob" data-toggle="modal" data-uid="@result._source.applicationGuid" data-fullName="@result._source.fullName" data-jobTitle="@result._source.jobTitle" class="btn btn-light mr-2 float-left" data-placement="bottom" title="@uiTerms["lblCopyCandidateToJob"].Replace("{0}", uiTerms[Utils.GetGenderedTerm("lblCandidateLiteralPossessive", result._source.gender)])">
          <i class="fas fa-copy"></i>
        </a>
        <!--#region copymovetostage-->
        <div id="modal_copymovecandidatetojob" class="modal fade">
          <div class="modal-dialog modal-lg">
            <div class="modal-content actions_pane">
              <div class="modal-header bg-teal-400">
                <h5 class="modal-title">@uiTerms["lblCopyMoveCandidateToJob"]</h5>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
              </div>
              <div class="modal-body">
                <div class="col-lg-12">
                  <div class="border-0 pb-0">
                    <div class="row">
                      <div class="col-xl-12" id="copymovecandidatetojob">
                        <div id="copymovecandidatetojob_container">
                          <div id="copymovecandidatetojob_form_area" class="mt-2">
                            <form id="copymovecandidatetojob_form" action="" method="post" enctype="multipart/form-data">
                              @*<input type="hidden" name="applicationId" value="" />
                              <input type="hidden" name="loginGuid" value="@currentLogin.lGuid" />*@
                              <div class="row">
                                <div class="col-xl-12">
                                  <div class="form-group row mt-2">
                                    <div class="col-lg-3">
                                      <label class="col-form-label col-lg-12 font-weight-semibold text-grey-800">@uiTerms["lblDestinationJob"]:</label>
                                    </div>
                                    <div class="col-lg-9">
                                      <select id="destinationJob" name="destinationJob" class="form-control select" style="width: 100% !important;">
                                        @foreach (var assignedJob in ((IEnumerable<dynamic>)jobsAssignedToMe))
                                        {
                                          @*var applicationAlreadyExists = db.QuerySingle(@"SELECT aId FROM applications WHERE aJobId=@0 AND aEmail=@1",
                                              assignedJob.jId, result._source.email) != null;
                                          if (applicationAlreadyExists)
                                          {
                                            <div title="@assignedJob.jTitle (@Utils.LocalDateTime(assignedJob.jCreatedDateTime, userPrefs.timeZoneId, language).asMidDate)" class="dropdown-item disabled min-width-ellipsis">@assignedJob.jTitle <span class="pl-1 d-inline-block">(@Utils.LocalDateTime(assignedJob.jCreatedDateTime, userPrefs.timeZoneId, language).asMidDate)</span></div>
                                          }
                                          else
                                          {*@
                                          if (!((IEnumerable<dynamic>)notCopyableApplications).Any(x => x.aJobId == assignedJob.jId))
                                          {
                                            <option value="@assignedJob.jId" title="@assignedJob.jTitle (@(((DateTime)assignedJob.jCreatedDateTime).ToString("dd/MM/yyyy")))">@assignedJob.jTitle <span class="pl-1 d-inline-block">(@(((DateTime)assignedJob.jCreatedDateTime).ToString("dd/MM/yyyy")))</span></option>

                                            @*<option value="@assignedJob.jId" title="@assignedJob.jTitle (@(((DateTime)assignedJob.jCreatedDateTime).ToString("dd/MM/yyyy")))">@assignedJob.jTitle (@(((DateTime)assignedJob.jCreatedDateTime).ToString("dd/MM/yyyy")))</option>*@
                                            @*<option value="@assignedJob.jId" title="@assignedJob.jTitle (@Utils.LocalDateTime(assignedJob.jCreatedDateTime, userPrefs.timeZoneId, language).asMidDate)">@assignedJob.jTitle <span class="pl-1 d-inline-block">(@Utils.LocalDateTime(assignedJob.jCreatedDateTime, userPrefs.timeZoneId, language).asMidDate)</span></option>*@
                                          }
                                          //}
                                        }
                                      </select>
                                    </div>
                                  </div>
                                  <div class="form-group row mt-2">
                                    <div class="col-lg-3">
                                      <label class="col-form-label col-lg-12 font-weight-semibold text-grey-800">@uiTerms["lblStage"]:</label>
                                    </div>
                                    <div class="col-lg-9">
                                      <select id="destinationStage" name="destinationStage" class="form-control select" style="width: 100% !important;">
                                      </select>
                                    </div>
                                  </div>
                                  <div class="form-group row mt-2">
                                    <div class="col-lg-3">
                                      <label class="col-form-label col-lg-12 font-weight-semibold text-grey-800">@uiTerms["lblAction"]:</label>
                                    </div>
                                    @{
                                      var candidateToJobAction = 1;
                                    }
                                    <div class="col-lg-9">
                                      <div class="form-check text-left">
                                        <label class="form-check-label">
                                          <input type="radio" class="form-input-styled" name="candidateToJobAction" value="1" @(candidateToJobAction == 1 ? " checked " : "") data-fouc>
                                          @uiTerms["lblCopyCandidateToJobAction"]
                                        </label>
                                      </div>
                                      <div class="form-check text-left">
                                        <label class="form-check-label">
                                          <input type="radio" class="form-input-styled" name="candidateToJobAction" value="2" @(candidateToJobAction == 2 ? " checked " : "") data-fouc>
                                          @uiTerms["lblMoveCandidateToJobAction"]
                                        </label>
                                      </div>
                                    </div>
                                  </div>
                                </div>
                              </div>
                            </form>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>

              <div class="modal-footer">
                <div id="copymovecandidatetojob_actions">
                  <button onclick="return true" type="button" class="btn btn-light border-0" data-dismiss="modal">@uiTerms["btnCancel"]</button>
                  <button onclick="copymovecandidatetojob();" type="button" id="copymovecandidatetojob_form_submit" data-dismiss="modal" class="btn bg-teal-400 font-weight-semibold submit ml-1" data-style="expand-left" data-spinner-color="#333" data-spinner-size="20">@uiTerms["lblCopy"]</button>
                </div>
              </div>
            </div>
          </div>
        </div>

        @*#region copymovecandidatetojob script*@
        <script>

    var Select2Cascade = (function (window, $) {

      function Select2Cascade(parent, child, url, select2Options) {
        var afterActions = [];
        var options = select2Options || {};

        // Register functions to be called after cascading data loading done
        this.then = function (callback) {
          afterActions.push(callback);
          return this;
        };

        parent.select2(select2Options).on("change", function (e) {

          child.prop("disabled", true);

          var _this = this;
          $.getJSON(url.replace(':parentId:', $(this).val()), function (items) {
            var newOptions = '<option value="0">@uiTerms["lblNone"]</option>';
            for (var id in items) {
              newOptions += '<option value="' + id + '">' + items[id] + '</option>';
            }
            child.select2('destroy').html(newOptions).prop("disabled", false).select2(options);

            afterActions.forEach(function (callback) {
              callback(parent, child, items);
            });
          });
        });
      }

      return Select2Cascade;

    })(window, $);

    $('#modal_copymovecandidatetojob').on('show.bs.modal', function (e) {

      $(function () {
        $("[name='candidateToJobAction']").off("change").on("change", function (e) {
          $copymovecandidatetojob_form_submit=$("#copymovecandidatetojob_form_submit");
          switch ($(this).val()) {
            case "1":
              $copymovecandidatetojob_form_submit.text('@uiTerms["lblCopy"]');
              break;
            case "2":
              $copymovecandidatetojob_form_submit.text('@uiTerms["lblMove"]');
              break;
          }

        });
      });

      var select2Options = {
        dropdownParent: $("#modal_copymovecandidatetojob"),
        dropdownCssClass: 'bigdrop'//,
        /* minimumResultsForSearch: -1*/
      };

    $("input[name='candidateToJobAction']").uniform({});
    $("#destinationJob").select2(select2Options);
    $("#destinationStage").select2({ minimumResultsForSearch: Infinity });
    //$assessments.off("select2:selecting").on("select2:selecting", function (e) {
    //  if (e.params != null && e.params.args != null) {
    //    var data = e.params.args.data;
    //    //console.log(data);
    //    ShowAssessmentResults(data.id);
    //  }
    //});
    $(function () {
      var cascadLoading = new Select2Cascade($("#destinationJob"), $("#destinationStage"),
        "/data/job-stages-json?jobId=:parentId:&idname=true", select2Options);
      $("#destinationJob").select2().val($("#destinationJob option:first").val()).trigger("change");

      cascadLoading.then(function (parent, child, items) {
        // Dump response data
        //console.log(items);
      });
    });
    });

    //$(function () {
    //  $("#candidateToJobAction").on("change", function (e) {
    //    console.log(e);

    //  });
    //});

    function copymovecandidatetojob() {
        var jobId = $("#destinationJob").select2("val");
        var stageId = $("#destinationStage").select2("val");
        var action = $("[name='candidateToJobAction']:checked").val();
        $.post('/data/move-application-to-job-stage?action=' + action + '&stageId=' + stageId +
          '&applicationUid=' + '@result._source.applicationGuid' + '&jobId=' +
            jobId + '&loginId=@WebSecurity.CurrentUserId', function (data) {

          PNotify.removeAll();
          if (data.result == "Success") {

             @{ var msg = uiTerms["msgApplicationCopied"].Replace("{lblCandidateLiteral}",
Utils.Capitalize1stLetter(uiTerms[Utils.GetGenderedTerm("lblCandidateLiteral",
result._source.gender)])).Replace("{aFullName}", result._source.fullName);
              }
                var $n = new PNotify({
                  title: '@msg'.replace('{0}',data.jobTitle),
                  icon: 'icon-checkmark3',
                  type: 'success',
                  after_open: function (PNotify) {
                    if (action == 1) { showApplication(@applicationId); }
                    else {
                      window.setTimeout(function () {location.reload()} , 800);}
                  }
                });


              }
              else {
                var error = data.error == "" ? "ERROR!" : data.error;
                new PNotify({
                  title: error,
                  //icon: 'icon-checkmark3',
                  type: 'error'
                });
              }

            });

          new PNotify({
            title: '@uiTerms["msgUpdating"]',

            icon: 'icon-info',
            type: 'info'

          });
        }
        </script>
        @*#endregion copymovecandidatetojob script*@
        <!--#endregion copymovetostage-->
      }


      @*<button class="btn btn-light mr-2 d-none" onclick="hideExcept('sms_form_area')" data-toggle="tooltip" data-placement="top" title="@uiTerms["lblTextCandidate"].Replace("{0}", uiTerms[Utils.GetGenderedTerm("lblCandidateLiteralAccusative", result._source.gender)])"><i class="icon-mobile"></i></button>*@



      @*
        <!--#region legacy CopyCandidateToJob-->
      if (jobsAssignedToMe.Count > 0)
      {
        <div class="btn-group mr-2" data-toggle="tooltip" data-placement="top" title="@uiTerms["lblCopyCandidateToJob"].Replace("{0}",uiTerms[Utils.GetGenderedTerm("lblCandidateLiteralPossessive",result._source.gender)])">
          <button type="button" class="btn btn-light btn-icon dropdown-toggle" data-toggle="dropdown">
            <i class="icon-copy3"></i>
          </button>

          <div class="dropdown-menu dropdown-menu-right" style="z-index:1120;height:auto;max-height:400px;overflow-x:hidden">
            <div class="dropdown-header font-weight-semibold py-0 text-default text-uppercase font-size-xs line-height-xs mt-1">@Utils.GreekUpper(uiTerms["lblCopyTo"])</div>
            <div class="dropdown-divider opacity-75"></div>
            <style>
              .min-width-ellipsis {
                white-space: nowrap;
                overflow: hidden !important;
                text-overflow: ellipsis !important;
                max-width: 450px;
                min-width: 0 !important;
                display: block !important;
              }
            </style>
            @foreach (var assignedJob in jobsAssignedToMe)
            {
              var applicationAlreadyExists = db.QuerySingle("SELECT aId FROM applications WHERE aJobId=@0 AND aEmail=@1",
                  assignedJob.jId, result._source.email) != null;
              if (applicationAlreadyExists)
              {
                <div title="@assignedJob.jTitle (@Utils.LocalDateTime(assignedJob.jCreatedDateTime, userPrefs.timeZoneId, language).asMidDate)" class="dropdown-item disabled min-width-ellipsis">@assignedJob.jTitle <span class="pl-1 d-inline-block">(@Utils.LocalDateTime(assignedJob.jCreatedDateTime, userPrefs.timeZoneId, language).asMidDate)</span></div>
              }
              else
              {
                <a title="@assignedJob.jTitle (@Utils.LocalDateTime(assignedJob.jCreatedDateTime, userPrefs.timeZoneId, language).asMidDate)" href="javascript:moveToJob('@result._source.applicationGuid','@assignedJob.jGuid')" class="dropdown-item min-width-ellipsis">@assignedJob.jTitle <span class="pl-1 d-inline-block">(@Utils.LocalDateTime(assignedJob.jCreatedDateTime, userPrefs.timeZoneId, language).asMidDate)</span></a>
              }
            }
          </div>
        </div>
      }
        <!--#endregion legacy CopyCandidateToJob-->
      *@

      <div class="btn-group d-none">
        <a class="btn btn-light"><i class="icon-link  font-size-base" onclick="CopyToClipboard('candidate_url','@uiTerms["msgCandidateUrlCopied"]')"></i></a>
        <button type="button" class="btn btn btn-light dropdown-toggle mr-2" data-toggle="dropdown"></button>
        <div class="dropdown-menu dropdown-menu-right">
          <div class="dropdown-item"><a class="dropdown-item" href="javascript:CopyToClipboard('candidate_url_anon','@uiTerms["msgCandidateUrlCopied"]')">@uiTerms["lblCopyCandidateUrlAnonymous"]</a></div>
        </div>
      </div>
      @*<div>
        <div class="btn-group mr-2 float-left">
          <button type="button" class="btn btn-light dropdown-toggle" data-toggle="dropdown" aria-expanded="false">Dropdown</button>
          <div class="dropdown-menu" style="">
            <a href="#" class="dropdown-item">Action</a>
            <a href="#" class="dropdown-item">Another action</a>
            <a href="#" class="dropdown-item">One more action</a>
            <div class="dropdown-divider"></div>
            <a href="#" class="dropdown-item">Separated line</a>
          </div>
        </div>
      </div>*@
      <div class="btn-group mr-2 float-left">
        <button type="button" class="btn btn-light dropdown-toggle" data-toggle="dropdown" aria-expanded="false"><strong>@uiTerms["lblMore"].ToLower()</strong></button>
        @*<button id="create-btn" type="button" class="btn btn-light"><strong>@uiTerms["lblMore"].ToLower()</strong></button>*@
        @*<button type="button" class="btn btn btn-light" data-toggle="dropdown">...</button>*@
        <div class="dropdown-menu dropdown-menu-right" style="z-index:1120">
          <div>
            <a id="follow_button" href="javascript:void(0)" class="dropdown-item">
              <i class="icon-feed3"></i>
              @Html.Raw(userFollowing == null ? "" : @" <i class=""icon-check""></i> ")
              <span class="badge bg-grey @(followersCount > 0 ? " d-inline mr-2" : " d-none ")">
                @followersCount
              </span>
              @(userFollowing == null ? uiTerms["lblFollowCandidate"].Replace("{0}", uiTerms[Utils.GetGenderedTerm("lblCandidateLiteralAccusative", result._source.gender)]) : uiTerms["lblUnFollowCandidate"].Replace("{0}", uiTerms[Utils.GetGenderedTerm("lblCandidateLiteralPossessive", result._source.gender)]))
            </a>
            @*<button class="btn btn-light mr-2" id="follow_button" data-toggle="tooltip" data-placement="top" title="@(userFollowing == null ? uiTerms["lblFollowCandidate"].Replace("{0}", uiTerms[Utils.GetGenderedTerm("lblCandidateLiteralAccusative", result._source.gender)]) : uiTerms["lblUnFollowCandidate"].Replace("{0}", uiTerms[Utils.GetGenderedTerm("lblCandidateLiteralPossessive", result._source.gender)]))">
          <i class="icon-feed3"></i>
          @Html.Raw(userFollowing == null ? "" : @" <i class=""icon-check""></i> ")
          <span class="badge bg-grey @(followersCount > 0 ? " d-inline " : " d-none ")">
            @followersCount
          </span>
        </button>*@
          </div>

          <div>
            @if (userRights.Contains("MANAGE_VIDEO_INTERVIEWS"))
            {
              @*<a id="follow_button" href="javascript:void(0)" class="dropdown-item">
          @(userFollowing == null ? uiTerms["lblFollowCandidate"].Replace("{0}", uiTerms[Utils.GetGenderedTerm("lblCandidateLiteralAccusative", result._source.gender)]) : uiTerms["lblUnFollowCandidate"].Replace("{0}", uiTerms[Utils.GetGenderedTerm("lblCandidateLiteralPossessive", result._source.gender)]))</a>*@

              @*<button class="btn btn-light mr-2" onclick="hideExcept('vinterview_form_area')" data-toggle="tooltip"
          data-placement="top" title="@uiTerms["lblSendVideoInterviewInvitation"].Replace("{0}", uiTerms[Utils.GetGenderedTerm("lblCandidateLiteralAccusative", result._source.gender)])"><i class="note-icon-video"></i></button>*@
              <a onclick="hideExcept('vinterview_form_area')" id="vinterview_button" href="javascript:void(0)" class="dropdown-item">
                <i class="note-icon-video"></i>
                @uiTerms["lblSendVideoInterviewInvitation"].Replace("{0}", uiTerms[Utils.GetGenderedTerm("lblCandidateLiteralAccusative", result._source.gender)])
              </a>

            }
          </div>
          <div>
            @*<button class="btn btn-light mr-2" onclick="hideExcept('application_attachments')" data-toggle="tooltip"
                data-placement="top" title='@uiTerms["lblApplicationAttachments"]'>
          <i class="icon-attachment"></i>
        </button>*@
            <a onclick="hideExcept('application_attachments')" id="application_attachments_button" href="javascript:void(0)" class="dropdown-item">
              <i class="icon-attachment"></i>
              @uiTerms["lblApplicationAttachments"]
            </a>
          </div>
          <div>
            <a onclick="hideExcept('application_evaluations_forms_area')" id="application_attachments_button" href="javascript:void(0)" class="dropdown-item">
              <i class="icon-stars"></i>
              @uiTerms["lblEvaluationForm"]
            </a>
          </div>
          @*hide 20230320
      <button class="btn btn-light mr-2" onclick="hideExcept('application_evaluations_forms_area')" data-toggle="tooltip"
               data-placement="top" title='@uiTerms["lblEvaluationForm"]'>
         <i class="icon-stars"></i>
       </button>
       if (bryqActivated)
       {
         <button class="btn btn-light mr-2" onclick="hideExcept('assessments_area')" data-toggle="tooltip"
                 data-placement="top" title="@uiTerms["lblSendBryqAssessment"]">
           <i class="icon-clipboard2"></i>
         </button>
       }
          *@
          @if (bryqActivated)
          {
            <div>
              <a onclick="hideExcept('assessments_area')" id="assessments_button" href="javascript:void(0)" class="dropdown-item">
                <i class="icon-clipboard2"></i>
                @uiTerms["lblSendBryqAssessment"]
              </a>
            </div>
          }
          @if (userRights.Contains("DELETE_APPLICATION"))
          {
            <div>
              <a href="#deleteApplicationModal" data-toggle="modal" data-uid="@result._source.applicationGuid" data-fullName="@result._source.fullName" data-jobTitle="@result._source.jobTitle" class="dropdown-item" data-placement="bottom" title="@uiTerms["lblDeleteApplication"]">
                <i class="icon-bin"></i>
                @uiTerms["lblDeleteApplication"]
              </a>
            </div>
          }

          @* 20230321 hide
      if (userRights.Contains("DELETE_APPLICATION"))
      {
        <a href="#deleteApplicationModal" data-toggle="modal" data-uid="@result._source.applicationGuid" data-fullName="@result._source.fullName" data-jobTitle="@result._source.jobTitle" class="btn btn-light mr-2" data-placement="bottom" title="@uiTerms["lblDeleteApplication"]"><i class="fas fa-trash-alt"></i></a>
      }
          *@


          @*@{var addToProjectEnabled = ((IEnumerable<dynamic>)projects).Where(x => x.prjId != (result._source.projectId == null ? 0 : result._source.projectId)).Count() > 0; }
      @if (addToProjectEnabled)
      {
        <div class="dropdown-header">@uiTerms["mnoAddTo"]:</div>
        <div class="dropdown-divider"></div>

        foreach (var project in projects)
        {
          <div><a href="javascript:addToProject(@result._id,@project.prjId)" class="dropdown-item">@project.prjName</a></div>
        }
      }
      @if (result._source.projectId > 0)
      {
        if (addToProjectEnabled)
        {<div class="dropdown-divider"></div>}
        <div><a href="javascript:addToProject(@result._id,0)" class="dropdown-item">@uiTerms["mnoRemoveApplicationFromProject"]</a></div>
      }*@


        </div>
      </div>

      <div class="float-right">
        @if (projectsEnabled)
        {
          <!--#region projects-->
          <div class="btn-group mr-2" data-toggle="tooltip" data-placement="top" title="@uiTerms["lblAddApplicationToProject"]">
            <button id="create-btn" type="button" class="btn btn-light ">@uiTerms["lblProject"]: <strong>@(result._source.projectId == null || result._source.projectId == 0 ? uiTerms["lblNone"] : result._source.projectName)</strong></button>
            <button type="button" class="btn btn btn-light dropdown-toggle " data-toggle="dropdown"></button>
            <div class="dropdown-menu dropdown-menu-right" style="z-index:1120">
              @{var addToProjectEnabled = ((IEnumerable<dynamic>)projects).Where(x => x.prjId != (result._source.projectId == null ? 0 : result._source.projectId)).Count() > 0; }
              @if (addToProjectEnabled)
              {
                <div class="dropdown-header">@uiTerms["mnoAddTo"]:</div>
                <div class="dropdown-divider"></div>

                foreach (var project in projects)
                {
                  if (result._source.projectId != project.prjId)
                  {
                  <div><a href="javascript:addToProject(@result._id,@project.prjId)" class="dropdown-item">@project.prjName</a></div>
                  }
                }
              }
              @if (result._source.projectId > 0)
              {
                if (addToProjectEnabled)
                {<div class="dropdown-divider"></div>}
                <div><a href="javascript:addToProject(@result._id,0)" class="dropdown-item">@uiTerms["mnoRemoveApplicationFromProject"]</a></div>
              }


            </div>
          </div>
          <script>
          function addToProject(applicationId, project) {
            $.post('/data/add-application-to-project-json?applicationId=' + applicationId + '&projectId=' + project + '&loginId=@WebSecurity.CurrentUserId',
              function (response) {

                updateApplication(applicationId);
                initProjects(function () {
                           new PNotify({
                      title: project > 0 ? '@uiTerms["msgApplicationAddedToProject"]' : '@uiTerms["msgApplicationRemovedFromProject"]',
                    icon: 'icon-checkmark3',
                    type: 'success'
                           });

                  if (project <= 0) { window.location.reload(false); }


                });
                   //GetJobProjects(true, function () {

                   //});


              @*if (project > 0) {
                new PNotify({
                  title: '@uiTerms["msgApplicationAddedToProject"]',
                  icon: 'icon-checkmark3',
                  type: 'success'
                });
              }
              else {

                GetJobProjects(true, function () {
                    new PNotify({
                    title: '@uiTerms["msgApplicationRemovedFromProject"]',
                    icon: 'icon-checkmark3',
                    type: 'success'
                  });
                });
              }*@

            });
          }
          </script>
          <!--#endregion projects-->
        }

        <div class="btn-group" data-toggle="tooltip" data-placement="top" title="@uiTerms["lblMoveCandidateToStage"].Replace("{0}", uiTerms[Utils.GetGenderedTerm("lblCandidateLiteralPossessive", result._source.gender)])">
          <button id="create-btn" type="button" class="btn btn-light ">@uiTerms["lblStage"]: <strong>@(result._source.pipelineStageId == 0 ? uiTerms["lblNone"] : result._source.pipelineStageName)</strong></button>
          <button type="button" class="btn btn btn-light dropdown-toggle " data-toggle="dropdown"></button>
          <div class="dropdown-menu dropdown-menu-right" style="z-index:1120">
            <div class="dropdown-header">@uiTerms["mnoMoveTo"]:</div>
            <div class="dropdown-divider"></div>
            @{
              var rolePipelineStages = db.Query("SELECT * FROM workflows WHERE wfRoleId=@0", currentLogin.lRoleId);
              var roleStages = new List<int>();

              foreach (var rolePipelineStage in rolePipelineStages)
              {
                roleStages.Add(rolePipelineStage.wfPipelineStageId);
              }

              var pipelineStages = db.Query(@"SELECT DISTINCT ps.* FROM pipeline_stages ps
                                                                                                                   LEFT JOIN jobs j ON j.jPipelineStagesSetId=ps.psSetId
                                                                                                                   WHERE psCustomerid=@0 AND psId<>@1 AND psIsActive=1 AND j.jId=@2
                                                                                                                   ORDER BY psRank",
                                             result._source.customerId, result._source.pipelineStageId, result._source.jobId);

              foreach (var pipelineStage in pipelineStages)
              {
                if ((customerPrefs.isStrictWorkflowEnabled == 0) | (currentLogin.rlIsAdmin == 1) | (customerPrefs.isStrictWorkflowEnabled == 1 & roleStages.Contains(pipelineStage.psId)))
                {
                  <div><a href="javascript:moveToStage(@result._id,@pipelineStage.psId)" class="dropdown-item">@pipelineStage.psName</a></div>
                }
              }

              if ((result._source.pipelineStageId > 0) & ((customerPrefs.isStrictWorkflowEnabled == 0) | (currentLogin.rlIsAdmin == 1) | (customerPrefs.isStrictWorkflowEnabled == 1 & roleStages.Count > 0)))
              {
                <div class="dropdown-divider"></div>
                <div><a href="javascript:moveToStage(@result._id,0)" class="dropdown-item">@uiTerms["mnoRemovePipelineStage"]</a></div>
              }

            }
          </div>
        </div>

      </div>
    }
    else if ((isExpired || isWithdrawn) && isAccessAllowed && userRights.Contains("DELETE_APPLICATION"))
    {
      <a href="#deleteApplicationModal" data-toggle="modal" data-uid="@result._source.applicationGuid" data-fullName="@result._source.fullName" data-jobTitle="@result._source.jobTitle" class="btn btn-light mr-2" data-placement="bottom" title="@uiTerms["lblDeleteApplication"]"><i class="fas fa-trash-alt"></i></a>
    }
  </div>
  @*@if (isExpired | isWithdrawn | isAccessAllowed == false)
    {
        <script>
            $("#action_buttons_area").hide();
        </script>
    }*@

  <script>
    $(document).ready(function () {
      $('[data-toggle="tooltip"]').tooltip();
    });
  </script>

  <script>
    var currentFollowCaption = $("#follow_button").html();
    $("#follow_button").click(function () {
      //if ($("#follow_button").html() == "@uiTerms["lblFollow"]") {
      if ($("#follow_button").html().indexOf('<i class="icon-check"></i>') ==-1) {
        $.getJSON('/data/follow-candidate-json?candidateId=@aCandidateId&loginGuid=@loginGuid&applicationId=@applicationId', function (response) {
          updateApplication(@applicationId);
          new PNotify({
            title: '@uiTerms["msgCandidateFollowed"].Replace("{lblCandidateLiteral}", uiTerms[Utils.GetGenderedTerm("lblCandidateLiteral", result._source.gender)]).Replace("{fullName}", result._source.fullName)',
            icon: 'icon-checkmark3',
            type: 'success'
            // addclass: 'alert alert-styled-left alert-styled-custom alert-arrow-left alpha-teal text-teal-800 border-teal'
          });
          $("#follow_button").html('<i class="icon-check"></i>');
          currentFollowCaption = '<i class="icon-check"></i>"';

          $("#follow_button").addClass("active");

        });

      }
      else {
        $.getJSON('/data/unfollow-candidate-json?candidateId=@aCandidateId&loginGuid=@loginGuid&applicationId=@applicationId', function (response) {
          updateApplication(@applicationId);
          new PNotify({
            title: '@uiTerms["msgCandidateUnfollowed"].Replace("{lblCandidateLiteral}", uiTerms[Utils.GetGenderedTerm("lblCandidateLiteral", result._source.gender)]).Replace("{fullName}", result._source.fullName)',
            icon: 'icon-checkmark3',
            type: 'success'
            // addclass: 'alert alert-styled-left alert-styled-custom alert-arrow-left alpha-teal text-teal-800 border-teal'
          });
          $("#follow_button").html("");
          currentFollowCaption = "";
          $("#follow_button").removeClass("active");

        });

      }

    });

    $("#follow_button").mouseover(function () {
      if ($(this).html() == "@uiTerms["lblFollowing"]") {
        $(this).html("@uiTerms["lblUnfollow"]");
        $(this).addClass("danger");
      }

    });

    $("#follow_button").mouseout(function () {
      $(this).html(currentFollowCaption);
      $(this).removeClass("danger");
    });
  </script>

  <div id="email_form_area" class="mt-2">
    <form id="email_form" action="/email-candidate" method="post" enctype="multipart/form-data">
      <input type="hidden" name="applicationId" value="@applicationId" />
      <input type="hidden" name="candidateId" value="@aCandidateId" />
      <input type="hidden" name="loginGuid" value="@loginGuid" />

      <div class="row mb-2">
        <h3 class="col-12 border-bottom-0 border-bottom-grey-600">@uiTerms["lblEmailCandidate"].Replace("{0}", uiTerms[Utils.GetGenderedTerm("lblCandidateLiteralAccusative", result._source.gender)])</h3>
      </div>

      <div class="form-group row mb-0">
        <label class="col-form-label col-2 font-weight-semibold text-grey-800">@uiTerms["lblFrom"]</label>
        <div class="col-8 font-weight-semibold align-self-center">
          @(string.IsNullOrEmpty(userPrefs.emailSender) ? currentLogin.lFullName : userPrefs.emailSender) <span class="text-muted">@currentLogin.lInternalEmailAlias@@@App["usersEmailDomain"]</span>
        </div>
      </div>
      <div class="form-group row mb-2">
        <label class="col-form-label col-2 font-weight-semibold text-grey-800">@uiTerms["lblTo"]</label>
        <div class="col-6 font-weight-semibold align-self-center">
          @result._source.fullName <span class="text-muted">@("<" + result._source.email + ">")</span>
        </div>
      </div>
      <div class="form-group row">
        <label class="col-form-label col-2 font-weight-semibold text-grey-800">@uiTerms["lblSubject"]</label>
        <div class="col-6">
          @Html.TextBox("emailSubject", result._source.jobTitle + " - " + result._source.organizationName, new { id = "emailSubject", @class = "form-control" })
          @Html.ValidationMessage("emailSubject", new { id = "emailSubject_error", @class = "validation-invalid-label" })
        </div>
      </div>

      <div class="row @(templates.Count == 0 ? " d-none " : "")">
        <div class="col-md-3">
          <div class="form-group">
            <label>&nbsp;</label>
            <select id="template" onchange="insertTemplate($('#template').val());" class="form-control select-remote-data">
              <option>@uiTerms["lblSelectTemplate"]...</option>
              @foreach (var template in templates)
              {
                <option value="@template.tmpId">@template.tmpTitle</option>
              }
            </select>
          </div>
        </div>
      </div>

      <script>
        function insertTemplate(templateId) {
          $.getJSON('/data/template-data?id=' + templateId + '&applicationGuid=@result._source.applicationGuid', '', function (data) {
            //$("#title").val(data.title);
            CKEDITOR.instances.emailBody.setData(data.description);
            $("#template").val($("#template option:first").val());
          });
        }
      </script>

      <div class="form-group row">
        <div class="col-12">
          <textarea id="emailBody" name="emailBody" class="col-12"></textarea>
        </div>
      </div>
      <div class="form-group row">
        <label class="col-form-label col-2 font-weight-semibold text-grey-800">@uiTerms["lblAttachFile"]</label>
        <input class="mt-1" type="file" name="fileToUpload" id="fileToUpload" multiple>
        @*<input class="mt-1" type="file" name="fileToUpload" id="fileToUpload">*@
      </div>
      <div class="form-group row">
        <div class="col-12">
          <input name="bccMyself" type="checkbox" value="1" class="checkbox mr-2">@uiTerms["lblBccMyself"]
        </div>
      </div>

      <div class="row">
        <div class="col-12 text-right mb-2">
          <button type="button" class="btn btn-light border-0" onclick="$('#email_form_area').hide();" data-dismiss="modal">@uiTerms["btnCancel"]</button>
          <button type="submit" id="email_form_submit" class="btn bg-teal-400 font-weight-semibold submit ml-1" data-style="expand-left" data-spinner-color="#333" data-spinner-size="20">@uiTerms["lblSend"]</button>
        </div>
      </div>
    </form>
  </div>

  <script>

    $("#email_form_area").hide();

    // CKEDITOR.replace("emailBody");
    $('#emailBody').ckeditor();

    var options = {
      target: null,
      success: function (result) {
        showApplication(@applicationId);
        if (result.status == "OK") {

              new PNotify({
                    title: '@uiTerms["msgEmailSent"]',
                    icon: 'icon-checkmark3',
                    type: 'success'
                // addclass: 'alert alert-styled-left alert-styled-custom alert-arrow-left alpha-teal text-teal-800 border-teal'
              });
        } else {
            new PNotify({
              title: result.error,
              type: 'error'
            });
        }

      },
      beforeSubmit: function (arr, $form, options) {
        // The array of form data takes the following form:
        // [ { name: 'username', value: 'jresig' }, { name: 'password', value: 'secret' } ]

        // return false to cancel submit

        if ($("#emailSubject").val().trim() == "") {
          $("#emailSubject_error").html("@uiTerms["msgMandatoryField"]");
          return false;
        }

        $("#email_form_submit").prop('disabled', true);
        $('#email_form_submit').html("<i class='fa fa-spinner fa-spin'></i>  @uiTerms["lblProcessing"]");

      }
    };

    $("#email_form").ajaxForm(options);
  </script>

  <div id="vinterview_form_area" class="mt-2">
    <form id="vinterview_form" action="/data/email-video-interview" method="post">
      <input type="hidden" name="applicationId" value="@applicationId" />
      <input type="hidden" name="candidateId" value="@aCandidateId" />
      <input type="hidden" name="loginGuid" value="@loginGuid" />

      <div class="row mb-2">
        <h3 class="col-12 border-bottom-0 border-bottom-grey-600">@uiTerms["lblSendVideoInterviewInvitation"]</h3>
      </div>

      <div class="form-group row d-none mb-0">
        <label class="col-form-label col-2 font-weight-semibold text-grey-800">@uiTerms["lblFrom"]</label>
        <div class="col-8 font-weight-semibold align-self-center">
          @(string.IsNullOrEmpty(userPrefs.emailSender) ? currentLogin.lFullName : userPrefs.emailSender) <span class="text-muted">@currentLogin.lInternalEmailAlias@@@App["usersEmailDomain"]</span>
        </div>
      </div>

      <div class="form-group row mb-2">
        <label class="col-form-label col-2 font-weight-semibold text-grey-800">@uiTerms["lblTo"]</label>
        <div class="col-6">
          @Html.TextBox("emailInterviewTo", result._source.email.Contains("candidates.smartcv.co") ? "" : result._source.email, new { id = "emailInterviewTo", @class = "form-control" })
          @Html.ValidationMessage("emailInterviewTo", new { id = "emailInterviewTo_error", @class = "validation-invalid-label" })
        </div>
      </div>

      @{
        var allVideoInterviews = db.Query("SELECT viId, viName, COUNT(*) AS c FROM video_interviews JOIN video_questions ON (viId=vqInterviewId) WHERE viCustomerId=@0 GROUP BY viId, viName ORDER BY viName", currentCustomerId);
      }
      <div class="form-group row mb-2">
        <label class="col-form-label col-2 font-weight-semibold text-grey-800">@uiTerms["lblVideoInterview"]</label>
        <div class="col-6">
          <select name="videoInterviewId" id="videoInterviewId" onchange="insertVideoInterviewDetails($('#videoInterviewId').val());" class="form-control">
            @foreach (var videoInterview in allVideoInterviews)
            {
              <option value="@videoInterview.viId">@videoInterview.viName</option>
            }
          </select>
        </div>
      </div>

      <script>
        function insertVideoInterviewDetails(videoInterviewId) {
          $.getJSON('/data/video-interview-data?id=' + videoInterviewId, '', function (data) {
            //$("#title").val(data.title);
            $("#videoInterviewSubject").val(data.title);
            CKEDITOR.instances.videoInterviewEmailBody.setData(data.introText);
            //$("#videoInterviewId").val($("#videoInterviewId option:first").val());
            $("#videoInterviewSubjectRow").show();
            $("#videoInterviewEmailBodyRow").show();

          });
        }
      </script>

      <div class="form-group row mb-2">
        <label class="col-form-label col-2 font-weight-semibold text-grey-800">@uiTerms["lblLanguage"]</label>
        <div class="col-3">
          <select name="lang" id="language" class="form-control">
            <option value="en" @(result._source.parsedCvLanguage == "en" ? " selected " : "")>@uiTerms["en"]</option>
            <option value="el" @(result._source.parsedCvLanguage == "el" ? " selected " : "")>@uiTerms["el"]</option>
          </select>
        </div>
      </div>

      <div class="form-group row mb-2">
        <label class="col-form-label col-2 font-weight-semibold text-grey-800">@uiTerms["lblAnswerDeadline"]</label>
        <div class="col-3">
          @Html.TextBox("interviewExpiryDate", DateTime.Now.AddDays(7).ToString("dd/MM/yyyy"), new { id = "interviewExpiryDate", @class = "form-control" })
          @Html.ValidationMessage("interviewExpiryDate", new { id = "interviewExpiryDate_error", @class = "validation-invalid-label" })
        </div>
      </div>

      <div class="form-group row mb-0">
        <label class="col-2">&nbsp;</label>
        <div class="col-6">
          <input name="bccMyself" type="checkbox" value="1" class="checkbox mr-2">@uiTerms["lblBccMyself"]
        </div>
      </div>

      <div class="form-group row">
        <label class="col-2">&nbsp;</label>
        <div class="col-10">
          <input name="notify" type="checkbox" value="1" class="checkbox mr-2">@uiTerms["lblNotifyOnVideoInterviewCompletion"].Replace("{0}", currentLogin.lEmail)
        </div>
      </div>

      @if (videoInterviews.Count == 0 & 1 != 1)
      {
        <div class="alert alert-info alert-warning border-0 alert-dismissible">
          <span class="font-weight-semibold">@uiTerms["msgNoAvailableInterviews"]</span>

          <a href="~/purchase" class="text-warning-700 font-weight-semibold">@uiTerms["lblBuyInterviews"]</a>
        </div>
      }

      <div class="row">
        <div class="col-12 text-right">
          <button type="button" class="btn btn-light border-0" onclick="$('#vinterview_form_area').hide();" data-dismiss="modal">@uiTerms["btnCancel"]</button>
          <button type="submit" id="vinterview_form_submit" class="btn bg-teal-400 font-weight-semibold submit ml-1" data-style="expand-left" data-spinner-color="#333" data-spinner-size="20">@uiTerms["lblSend"]</button>
        </div>
      </div>
    </form>
  </div>

  <script>

    $("#vinterview_form_area").hide();

    // CKEDITOR.replace("emailBody");
    $('#videoInterviewEmailBody').ckeditor();

    var options = {
      target: null,
      dataType: "json",
      success: function () {
        showApplication(@applicationId);
        new PNotify({
          title: '@uiTerms["msgVideoInterviewSent"]',
          icon: 'icon-checkmark3',
          type: 'success'
          // addclass: 'alert alert-styled-left alert-styled-custom alert-arrow-left alpha-teal text-teal-800 border-teal'
        });
      },
      beforeSubmit: function (arr, $form, options) {
        // The array of form data takes the following form:
        // [ { name: 'username', value: 'jresig' }, { name: 'password', value: 'secret' } ]

        // return false to cancel submit

        if ($("#emailSubject").val().trim() == "") {
          $("#emailSubject_error").html("@uiTerms["msgMandatoryField"]");
          return false;
        }

        $("#vinterview_form_submit").prop('disabled', true);
        $('#vinterview_form_submit').html("<i class='fa fa-spinner fa-spin'></i>  @uiTerms["lblProcessing"]");

      },
      success: function (data) {
        // alert(data.errorText);
        showApplication(@applicationId);

        if (data.result == "Error") {
          new PNotify({
            title: data.errorText,
            icon: 'icon-alert',
            type: 'error'
          });
        }
        else {
          new PNotify({
            title: '@uiTerms["msgInvitationSuccessfullySent"]',
            icon: 'icon-checkmark3',
            type: 'success'
            // addclass: 'alert alert-styled-left alert-styled-custom alert-arrow-left alpha-teal text-teal-800 border-teal'
          });
        }

      }
    };

    $("#vinterview_form").ajaxForm(options);

    $(function () {
      $('#interviewExpiryDate').daterangepicker({
        "locale": {
          "format": "DD/MM/YYYY",
          "separator": " - ",
          "applyLabel": "@uiTerms["lblApply"]",
          "cancelLabel": "@uiTerms["lblCancel"]",
          "fromLabel": "@uiTerms["lblFrom"]",
          "toLabel": "@uiTerms["lblToRange"]",
          "customRangeLabel": "@uiTerms["lblCustomRangeLabel"]",
          "weekLabel": "@uiTerms["lblWeekLabelOneLetter"]",
          "daysOfWeek": [
            "@uiTerms["lblSu"]",
            "@uiTerms["lblMo"]",
            "@uiTerms["lblTu"]",
            "@uiTerms["lblWe"]",
            "@uiTerms["lblTh"]",
            "@uiTerms["lblFr"]",
            "@uiTerms["lblSa"]"
          ],
          "monthNames": [
            "@uiTerms["lblJanuary"]",
            "@uiTerms["lblFebruary"]",
            "@uiTerms["lblMarch"]",
            "@uiTerms["lblApril"]",
            "@uiTerms["lblMay"]",
            "@uiTerms["lblJune"]",
            "@uiTerms["lblJuly"]",
            "@uiTerms["lblAugust"]",
            "@uiTerms["lblSeptember"]",
            "@uiTerms["lblOctober"]",
            "@uiTerms["lblNovember"]",
            "@uiTerms["lblDecember"]"
          ],
          "firstDay": 1
        },
        "singleDatePicker": true,
        "showDropdowns": true,
        "minYear": 1901,
        "maxYear": parseInt(moment().format('YYYY'), 10)
      }, function (start, end, label) {
        //console.log('New date range selected: ' + start.format('YYYY-MM-DD') + ' to ' + end.format('YYYY-MM-DD') + ' (predefined range: ' + label + ')');
      });
    });
  </script>

  <script>
    var tribute = new Tribute({
      values: [
        @Html.Raw(records)
      ]
    });
  </script>

  <div id="evaluation_form_area" class="mt-2">

    <form spellcheck="false" id="evaluation_form" action="~/create-evaluation.cshtml" method="post" class="form-horizontal">
      <input type="hidden" name="applicationId" value="@applicationId" />
      <input type="hidden" name="candidateId" value="@aCandidateId" />

      <div class="row mb-2">
        <h3 class="col-12 border-bottom-0 border-bottom-grey-600">@uiTerms["lblAddEvaluation"]</h3>
      </div>

      <div class="form-group row">
        <label class="col-form-label col-2 text-grey-800 font-weight-semibold">@uiTerms["lblEvaluationText"]</label>
        <div class="col-10">
          <textarea id="evaluation_comment" name="evaluation_comment" class="form-control" placeholder="@uiTerms["lblCommentPlaceholder"]" minlength="10" rows="4" maxlength="10000"></textarea>
        </div>
      </div>

      <div class="form-group row">
        <label class="col-form-label col-2 text-grey-800 font-weight-semibold">@uiTerms["lblEvaluation"]</label>
        <div class="col-10">
          <div class="rating"></div>
        </div>
      </div>

      <script>
        $(".rating").starRating({
          initialRating: 0.5,
          minRating: 0.5,
          disableAfterRate: false,
          starSize: 25,
          callback: function (currentRating, $el) {
            // make a server call here
          }
        });

        tribute.attach(document.getElementById('evaluation_comment'));
      </script>

      <div class="form-group row">
        <div class="col-12 text-right">
          <button type="button" onclick="$('#evaluation_form_area').hide();" class="btn btn-light border-0">@uiTerms["btnCancel"]</button>
          <button id="evaluation_form_submit" type="submit" class="btn ml-1 bg-teal-400 font-weight-semibold">@uiTerms["lblCreateEvaluation"]</button>
        </div>
      </div>
    </form>

    <script>
      $('#evaluation_form_area').hide();
      //$("#evaluation_form_area").validate({});
      var options = {
        target: null,
        beforeSubmit: function (formData, jqForm, options) {
          formData.push({ name: 'ratingValue', value: $('.rating').starRating("getRating") });
          $("#evaluation_form_submit").prop('disabled', true);
          $('#evaluation_form_submit').html("<i class='fa fa-spinner fa-spin'></i>  @uiTerms["lblProcessing"]");
          return true;
        },
        success: function () {
          updateApplication(@applicationId);
          new PNotify({
            title: '@uiTerms["msgEvaluationCreated"]',
            icon: 'icon-checkmark3',
            type: 'success'
            // addclass: 'alert alert-styled-left alert-styled-custom alert-arrow-left alpha-teal text-teal-800 border-teal'
          });
        }
      };
      $("#evaluation_form").ajaxForm(options);
    </script>
  </div>

  @if (bryqActivated)
  {
    <!-- #region assessments -->

    <div id="assessments_area" class="mt-2 mb-2">

      <div class="row mb-2">
        <h3 class="col-12 border-bottom-0 border-bottom-grey-600">
          @uiTerms["lblSendBryqAssessment"]
        </h3>
      </div>

      <form id="assessments_form" action="~/integrations/bryq/send" method="post">
        <input type="hidden" name="applicationId" value="@applicationId" />
        <input type="hidden" name="candidateId" value="@aCandidateId" />
        <input type="hidden" name="loginGuid" value="@loginGuid" />
        <input type="hidden" name="assessmentName" value="" />

        <div class="form-group">
          <div class="row mb-2">
            <div class="col-sm-6">
              <label class="text-grey-800 font-weight-semibold">@uiTerms["lblFirstName"]</label>
              <input type="text" id="firstName" name="firstName" value="@result._source.firstName" maxlength="30" class="form-control">
              <div id="firstName_error" class="validation-invalid-label"></div>
            </div>

            <div class="col-sm-6">
              <label class="text-grey-800 font-weight-semibold">@uiTerms["lblLastName"]</label>
              <input type="text" id="lastName" name="lastName" value="@result._source.lastName" maxlength="30" class="form-control">
              <div id="lastName_error" class="validation-invalid-label"></div>
            </div>
          </div>

          <div class="row">
            <div class="col-sm-6">
              <label class="text-grey-800 font-weight-semibold">@uiTerms["lblEmail"]</label>
              <input type="text" required email="true" id="email" name="email" value="@result._source.email" class="form-control" maxlength="100">
              @Html.ValidationMessage("email", new { id = "email_error", @class = "validation-invalid-label" })
            </div>
            <div class="col-sm-6">

              <label class="text-grey-800 font-weight-semibold">@uiTerms["lblSelectBryqAssessment"]</label>
              <div class="row">
                <div class="col-12">
                  <select id="bryqAssessmentId" name="bryqAssessmentId" class="form-control select" style="width: 100% !important;">
                    @*@{
                        var assessments = Integrations.BryqApiHelper.GetAssessments(currentCustomerId, Request);

                        foreach (var assessment in assessments)
                        {
                          <option value="@assessment.id">@assessment.name</option>
                        }
                      }*@
                  </select>
                  <div id="bryqAssessmentId_error" class="validation-invalid-label"></div>
                </div>
              </div>
            </div>
          </div>
        </div>
        <div class="row">
          <div class="col-12 text-right">
            <button type="button" class="btn btn-light border-0" onclick="$('#assessments_area').hide();" data-dismiss="modal">@uiTerms["btnCancel"]</button>
            <button type="submit" id="assessments_submit" class="btn bg-teal-400 font-weight-semibold submit ml-1" data-style="expand-left" data-spinner-color="#333" data-spinner-size="20">@uiTerms["lblSend"]</button>
          </div>
        </div>
      </form>
    </div>

    <script>

      (function () {
        $("#assessments_area").hide();
        var options = {
          target: null,
          dataType: "json",
          @*success: function () {
            showApplication(@applicationId);
            new PNotify({
              title: '@uiTerms["msgVideoInterviewSent"]',
              icon: 'icon-checkmark3',
              type: 'success'
              // addclass: 'alert alert-styled-left alert-styled-custom alert-arrow-left alpha-teal text-teal-800 border-teal'
            });
          },*@
          beforeSubmit: function (arr, $form, options) {
            var title = $("#bryqAssessmentId").select2("data")[0].text;
            if (title == "") {
              $("#bryqAssessmentId_error").html("@uiTerms["msgMandatoryField"]");
              return false;
            }

            //alert($("input[name='assessmentName']").val())
            var $assessments_submit = $("#assessments_submit");
            $assessments_submit.prop('disabled', true);
            $assessments_submit.html("<i class='fa fa-spinner fa-spin'></i>  @uiTerms["lblProcessing"]");

          },
          success: function (data) {
            // alert(data.errorText);
            showApplication(@applicationId);
            //console.log(data)
            if (data.status == "error") {
              new PNotify({
                title: data.error,
                icon: 'icon-alert',
                type: 'error'
              });
            }
            else {
              new PNotify({
                title: '@uiTerms["msgInvitationSuccessfullySent"]' + "  " + data.error,
                icon: 'icon-checkmark3',
                type: 'success'
                // addclass: 'alert alert-styled-left alert-styled-custom alert-arrow-left alpha-teal text-teal-800 border-teal'
              });
            }

          }
        };
        $("#assessments_form").ajaxForm(options);
      }());

      var assessmentEmbedUrls = {};

      function GetAssessments(callback, $el, ids, getEmbedUrl) {
        var url = "/integrations/bryq/assessments";
        if (getEmbedUrl) {
          url += "?getEmbedUrl=1&aId=@applicationId";
        }
        $.getJSON(url, function(r) {
          if (typeof $el == 'undefined') { $el = $("#bryqAssessmentId"); }

          if (typeof ids != 'undefined' ) {
            r.data = $.grep(r.data, function(value) {
              return ids.indexOf(value.id) > -1;
            });

          };

          assessmentEmbedUrls = {};
          $el.select2({
            data: $.map(r.data,
              function(e) {
                var obj = {};
                obj.text = e.name; // replace name with the property used for the text
                obj.id = e.id;
                if (typeof e.embedUrl != 'undefined') {

                  obj.embedUrl = e.embedUrl;
                  assessmentEmbedUrls[obj.id] = { id: obj.id, embedUrl: obj.embedUrl};
                }

                return obj;
              }),
            placeholder: "",
            allowClear: false,
            minimumResultsForSearch: Infinity
          }).off("select2:selecting").on("select2:selecting", function (e) {
            if (typeof e != 'undefined' && e.params != null && e.params.args != null) {
              if (e.params != null && e.params.args != null) {
                var data = e.params.args.data;
                $("input[name='assessmentName']").val(data.text);
              }
            }

          });

        }).always(function() {
          if (typeof $el == 'undefined') {
            $el = $("#bryqAssessmentId");
          }
          $el.trigger("select2:selecting");
          $("input[name='assessmentName']").val($el.select2("data")[0].text);

          window.setTimeout(function(c) { if (typeof c != 'undefined') c(); }(callback),100);
        });
      }
    </script>
    <!-- #endregion assessments -->

  }

  <!-- #region structured evaluations manage -->

  <div id="application_evaluations_forms_area" class="mt-2">

    <div class="row mb-2">
      <h3 class="col-12 border-bottom-0 border-bottom-grey-600">
        @{var evaluationFormsName = evaluationForms != null ? ": " + Html.Encode(evaluationForms.efName) : string.Empty; }
        @(uiTerms["lblEvaluationForm"] + evaluationFormsName)
      </h3>
    </div>

    @if (evaluationFormsCount == 0)
    {
      <div class="row mb-2">
        <div class="alert alert-info border-0" style="width:100%;">
          <span class="font-weight-semibold">@uiTerms["msgΝoInterviewKits"]</span>
        </div>
        @*<h4 class="col-12 border-bottom-0 border-bottom-grey-600">@uiTerms["msgΝoInterviewKits"]</h4>*@
      </div>
      <div class="form-group row">
        <div class="col-12 text-left">
          <a href="~/create-evaluation-form" class="btn bg-teal mb-3 font-weight-semibold">@uiTerms["lblCreateEvaluationForm"]</a>
        </div>
      </div>
    }
    else if (evaluationFormsCount > 0 && evaluationForms == null)
    {
      <div class="row mb-2">
        <div class="alert alert-info border-0" style="width:100%;">
          <span class="font-weight-semibold">@uiTerms["msgΝoInterviewKitsLinkedToJob"]</span>
        </div>
        @*<h4 class="col-12 border-bottom-0 border-bottom-grey-600">@uiTerms["msgΝoInterviewKitsLinkedToJob"]</h4>*@
      </div>
      <div class="form-group row">
        <div class="col-12 text-left">
          <a href="~/edit-job?jobid=@result._source.jobId#interviewKit" class="btn bg-teal mb-3 font-weight-semibold">@uiTerms["mnoEditJob"]</a>
        </div>
      </div>
    }
    else if (evaluationFormsCount > 0 && evaluationForms != null && (evaluationFormCriteria != null && evaluationFormCriteria.Count() == 0))
    {
      <div class="row mb-2">
        <div class="alert alert-info border-0" style="width:100%;">
          <span class="font-weight-semibold">@uiTerms["msgNoEvaluationCriteriaYet"]</span>
        </div>
        @*<h4 class="col-12 border-bottom-0 border-bottom-grey-600">@uiTerms["msgNoEvaluationCriteriaYet"]</h4>*@
      </div>
      <div class="form-group row">
        <div class="col-12 text-left">
          <a href="/create-evaluation-criterion?evaluationFormId=@evaluationForms.efId" class="btn bg-teal mb-3 font-weight-semibold">@uiTerms["lblCreateEvaluationCriterion"]</a>
        </div>
      </div>
    }
    else
    {
      <form spellcheck="false" id="application_evaluations_forms_area_form"
            action="~/manage-application-evaluation-form.cshtml" method="post" class="form-horizontal">
        <input type="hidden" name="applicationId" value="@applicationId" />
        <input type="hidden" name="candidateId" value="@aCandidateId" />
        <input type="hidden" name="evaluationFormId" value="@evaluationForms.efId" />
        <input type="hidden" name="applicationFormId" value="@applicationFormId" />

        <div class="form-group row">
          <label class="col-form-label col-lg-5 text-grey-800 font-weight-semibold">&nbsp;&nbsp;&nbsp;@uiTerms["lblEvaluationCriterion"]</label>
          <label class="col-form-label col-lg-2 text-grey-800 font-weight-semibold">@uiTerms["lblGrading"]</label>
          <label class="col-form-label col-lg-5 text-grey-800 font-weight-semibold">@uiTerms["lblCommentText"]</label>
        </div>
        <div class="rating-body">
          @foreach (var criterion in evaluationFormCriteria.Select((value, i) => new { i, value }))
          {
            var comment = string.Empty;
            var rating = string.Empty;
            var aeaId = string.Empty;
            if (applicationEvaluationAnswers != null && applicationEvaluationAnswersComments != null)
            {
              if (applicationEvaluationAnswersComments.ElementAtOrDefault(criterion.i) != null)
              {
                comment = (applicationEvaluationAnswersComments.ElementAt(criterion.i)).comment;

                //rating = (((decimal)applicationEvaluationAnswers.ElementAt(criterion.i).aeaRating) * 2).ToString(new CultureInfo("en-US"));
                rating = (((decimal)applicationEvaluationAnswers.ElementAt(criterion.i).aeaRating)).ToString(new CultureInfo("en-US"));
              }
              if (applicationEvaluationAnswers.ElementAtOrDefault(criterion.i) != null)
              {
                aeaId = (applicationEvaluationAnswers.ElementAt(criterion.i).aeaId).ToString();
              }
            }
            <div data-id="@aeaId" data-criterionid="@criterion.value.ecId" class="form-group row application-evaluation-answers"
                 id="application_evaluations_forms_area_row_@(criterion.value.ecId)">
              <label class="col-form-label col-lg-5 text-grey-800">
                @(criterion.i + 1).  @criterion.value.ecCaption@{ if (criterion.value.ecIsMandatory == 1)
                  {<span class="text-danger">&nbsp;*</span>} }
              </label>
              <div class="col-lg-2">
                <select data-val="@rating" @{if (criterion.value.ecIsMandatory == 1) { @Html.Raw("required")  }}
                        name="aea-rating@(criterion.value.ecId)"
                        id="aea-rating@(criterion.value.ecId)"
                        class="form-control aea-rating" style="width:100%">
                  <option></option>
                  <option value="0.5">0.5</option>
                  <option value="1">1</option>
                  <option value="1.5">1.5</option>
                  <option value="2">2</option>
                  <option value="2.5">2.5</option>
                  <option value="3">3</option>
                  <option value="3.5">3.5</option>
                  <option value="4">4</option>
                  <option value="4.5">4.5</option>
                  <option value="5">5</option>
                </select>
              </div>
              <div class="col-lg-5">
                <textarea id="evaluation_comment@(criterion.value.ecId)"
                          name="evaluation_comment@(criterion.value.ecId)"
                          class="form-control evaluation-comment"
                          placeholder="" rows="3">@comment</textarea>
              </div>
            </div>
                  }
        </div>
        <hr />
        <script>
          $('.aea-rating').select2({
            placeholder: '',
            allowClear: true,
            minimumResultsForSearch: Infinity
          }).each(function (i, e) {
            var dataValue = $(e).attr("data-val").replace(".0", "").replace(",0", "");;
            if (typeof dataValue !== typeof undefined && dataValue !== false) {
              $(e).val(dataValue).trigger("change");
            }
          });
        </script>
        <div class="form-group row">
          <div class="col-12 text-right">
            <button type="button" onclick="$('#application_evaluations_forms_area').hide();" class="btn btn-light border-0">@uiTerms["btnCancel"]</button>
            <button id="application_evaluations_forms_submit" type="submit" class="btn ml-1 bg-teal-400 font-weight-semibold">@uiTerms["lblSubmitEvaluationForm"]</button>
          </div>
        </div>
      </form>
                  }
    <script>
      $('#application_evaluations_forms_area').hide();
      $("#application_evaluations_forms_area_form").validate({
        errorPlacement: function (error, element) {
          error.insertAfter(element.parent().find(".select2"));
        }
      });
      var options = {
        target: null,
        beforeSubmit: function (formData, jqForm, options) {

          var applicationEvaluationAnswers = [];
          $(".application-evaluation-answers").each(function (i, e) {
            applicationEvaluationAnswers.push({
              id: $(e).attr("data-id"), criterionId: $(e).attr("data-criterionid"),
              rating: $(e).find(".aea-rating").select2("val"),
              comment: $(e).find(".evaluation-comment").val() }); });

          formData.push({ name: 'applicationEvaluationAnswers', value: JSON.stringify(applicationEvaluationAnswers) });
          $("#application_evaluations_forms_submit").prop('disabled', true);
          $('#application_evaluations_forms_submit').html("<i class='fa fa-spinner fa-spin'></i>  @uiTerms["lblProcessing"]");
          return true;
        },
        success: function () {
          updateApplication(@applicationId);
          new PNotify({
            title: '@uiTerms["msgEvaluationFormSubmitted"]',
            icon: 'icon-checkmark3',
            type: 'success'
            // addclass: 'alert alert-styled-left alert-styled-custom alert-arrow-left alpha-teal text-teal-800 border-teal'
          });
        }
      };
      $("#application_evaluations_forms_area").ajaxForm(options);
    </script>
  </div>

  <!-- #endregion structured evaluations manage -->
  <!--#region manage application attachments-->
  <div id="application_attachments" class="mt-2 mb-3" data-candidateid="@aCandidateId" data-applicationid="@applicationId">

    <div class="row mb-2">
      <h3 class="col-12 border-bottom-0 border-bottom-grey-600">
        @uiTerms["lblApplicationAttachments"] (<span data-id="upload_files_view_count">@applicationFileAttachments.Count</span>)
      </h3>
    </div>
    @*@if (applicationFileAttachments != null && applicationFileAttachments.Count >= SmartCV.ApplicationFileAttachmentsMaxCount)
      {*@
    <div class="row mb-2 d-none" id="application_attachments_max_msg">
      <div class="alert alert-info border-0" style="width:100%;">
        <span class="font-weight-semibold">
          @uiTerms["msgMaxApplicationFileAttachmentCountReached"].Replace("{maxFiles}", SmartCV.ApplicationFileAttachmentsMaxCount.ToString())
        </span>
      </div>
    </div>
    @*}*@
    @{
      var hasAttachments = applicationFileAttachments != null && applicationFileAttachments.Count > 0;

    }

    <div class="row">
      <div id="upload_files" class="pl-0 pr-0 pt-2 @(hasAttachments ? "col-lg-4" : "d-none")">
        <div id="application_attachments_container">
          <div class="table-responsive table-scrollable">
            <table class="table table-striped table-hover">
              <tbody>
                @foreach (var attachment in applicationFileAttachments)
                {
                  @PageHelpers.ApplicationFileAttachmentRow(attachment, aCandidateId.ToString(), applicationId.ToString(), @uiTerms["lblDeleteApplicationAttachment"])
                }
              </tbody>
            </table>
          </div>
        </div>
      </div>
      <div id="upload_container" class="@(hasAttachments ? "col-lg-8" : "col-lg-12")">
        <div class="application-uploader-events-container">
          <p class="font-weight-semibold"></p>
          <div class="uploader-events mb-3"><span>Your browser doesn't support native upload.</span></div>
          <div class="row ml-1 mr-4">
            <span class="font-weight-semibold mr-1">
              @uiTerms["lblAllowedFileTypes"]:
            </span>
            <span class="mr-4">
              @String.Join(" ", SmartCV.ApplicationFileAttachmentsExtensions)
            </span>
            <span class="font-weight-semibold ml-2 mr-1">
              @uiTerms["lblMaximumFileSize"]
            </span>
            @(SmartCV.ApplicationFileAttachmentsMaxSize / 1024)MB
          </div>
          <p class="font-weight-semibold"></p>
          @*<div class="card card-body pre-scrollable" id="log" style="display:none"></div>*@
          @*<div id="parsing_issues" class="alert alert-warning" style="display:none">
            </div>*@
          @*<a style="display:none" nohref id="proceed-btn" class="btn bg-teal btn-lg font-weight-semibold disabled">Παρακαλώ περιμένετε</a>*@
        </div>
      </div>
    </div>
    <hr />
    <!--#region application attachments script-->
    <script>
      $('#application_attachments').hide();
      var plFiles = {};
      var afaUploader;
      var Plupload = function () {
        var _componentPlupload = function () {
          if (!$().pluploadQueue) { console.warn('Warning - Plupload files are not loaded.'); return;}

          var $application_attachments = $("#application_attachments");
          var applicationId = $application_attachments.data("applicationid");
          var candidateId = $application_attachments.data("candidateid");
          // max files allowed to be uploaded
          var maxFiles = @SmartCV.ApplicationFileAttachmentsMaxCount;
          $(".uploader-events").pluploadQueue({// pluploadQueue
            // var afaUploader = new plupload.Uploader({
            // container: ".uploader-events",
            runtimes: 'html5,html4',
            url: '/upload-handler-application-attachments?language=@language&jobid=@result._source.jobId&candidateId=' + candidateId + '&applicationId=' + applicationId,
            chunk_size: "@((SmartCV.ApplicationFileAttachmentsMaxSize + 1000).ToString())Kb",//'22480Kb',
            unique_names: true,
            filters: {
              max_file_size: "@(SmartCV.ApplicationFileAttachmentsMaxSize.ToString())Kb",//'20480Kb',
              mime_types: [{
                title: '@uiTerms["lblApplicationAttachments"]',
                extensions: "@(String.Join(",", SmartCV.ApplicationFileAttachmentsExtensions))",
                prevent_duplicates: true
              }]
            },
            flash_swf_url: '../../../../global_assets/js/plugins/uploaders/plupload/files/Moxie.swf',
            silverlight_xap_url: '/plupload/js/Moxie.xap',
            preinit: {
              Init: function (up, info) {
                plFiles = {};
                log('[Init]', 'Info:', info, 'Features:', up.features);
                afaUploader = up;

                window.setTimeout(function () {
                  var bDisableBrowse = $("#application_attachments_container tbody tr").length >= @(SmartCV.ApplicationFileAttachmentsMaxCount) ? 1 : 0;
                  afaUploader.disableBrowse(bDisableBrowse);
                  bDisableBrowse ? $("#application_attachments_max_msg").removeClass("d-none") :  $("#application_attachments_max_msg").addClass("d-none");
                  bDisableBrowse ? $(".plupload_buttons a").addClass("plupload_disabled") : $(".plupload_buttons a").removeClass("plupload_disabled");
                }, 100);

              },
              UploadFile: function (up, file) { log('[UploadFile]', file);}
            },
            init: {
              Browse: function (up) {
                log('[Browse]'); // Called when file picker is clicked
              },
              Refresh: function (up) {
                log('[Refresh]'); // Called when the position or dimensions of the picker change
              },
              StateChanged: function (up) {
                log('[StateChanged]', up.state == plupload.STARTED ? 'STARTED' : 'STOPPED'); // Called when the state of the queue is changed
              },
              QueueChanged: function (up) {
                log('[QueueChanged]'); // Called when queue is changed by adding or removing files
              },
              OptionChanged: function (up, name, value, oldValue) {
                log('[OptionChanged]', 'Option Name: ', name, 'Value: ', value, 'Old Value: ', oldValue); // Called when one of the configuration options is changed
              },
              BeforeUpload: function (up, file) {
                log('[BeforeUpload]', 'File: ', file); // Called right before the upload for a given file starts, can be used to cancel it if required
                // $('.uploader-events').plupload.settings.url+= '&tags=' + encodeURI($('#tags_input').val());
                //if (up.settings.url.indexOf("&tags")==-1) {
                //    up.settings.url += '&tags=' + encodeURI($('#tags_input').val());
                //}
              },
              UploadProgress: function (up, file) {
                log('[UploadProgress]', 'File:', file, 'Total:', up.total); // Called while file is being uploaded
                @*$("#proceed-btn").html("<i class='fa fa-spinner fa-spin'></i> @uiTerms["msgPleaseWait"]");
                                $("#proceed-btn").show();*@
              },
              FileFiltered: function (up, file) {

                log('[FileFiltered]', 'File:', file); // Called when file successfully files all the filters
              },
              FilesAdded: function (up, files) {
                log('[FilesAdded]'); // Called when files are added to queue
                var filesRemoved = false;
                var count = 1;
                $.getJSON("/upload-handler-application-attachments?language=@language&applicationId=" + applicationId + "&candidateId=" + candidateId,
                  function (r) {

                    //// get amount of files already added to the queue
                    //// + ignoring the inital text, saying to drop files there which is a li also
                    // previous and currently added files sum up to files_total
                    plupload.each(files, function (file) {
                      log('  File:', file);

                      var filesTotal = r.fileCount + count;
                      if (filesTotal > maxFiles) {
                        //alert('You are allowed to add only ' + maxFiles + ' files.');
                        filesRemoved = true;
                        up.removeFile(file);
                        //up.splice(); // reset the queue to zero);
                      }
                      count++;
                    });
                    //console.log(r)
                    //console.log(up)
                  }).done(function () {

                  if (filesRemoved) {
                    PNotify.removeAll();
                    new PNotify({
                      title: 'Warning! \n Maximum number of attachments is: ' + maxFiles + ".",
                      icon: 'icon-exclamation',
                      type: 'notice'
                    });
                  }

                });

              },
              FilesRemoved: function (up, files) {
                log('[FilesRemoved]'); // Called when files are removed from queue
                plupload.each(files, function (file) {
                  log('  File:', file);
                });
              },
              FileUploaded: function (up, file, info) {
                if (typeof info.response != undefined) {
                  try {
                    var response = JSON.parse(info.response);
                    var applicationFileId = parseInt(response.applicationFileId, 10);
                    //if (applicationFileId > 0) {
                    plFiles[file.id] = applicationFileId;
                    //}
                    if (response.newfile) {
                      $.get("/data/applications-file-attachment-row-html?attachment=" +
                        JSON.stringify(response.attachment) + "&applicationId=" + applicationId + "&candidateId=" + candidateId + "&language=@language&" +
                        + "&titleDelete=@HttpUtility.UrlEncode(uiTerms["lblDeleteApplicationAttachment"])",
                        function (data) {
                          $("#application_attachments_container tbody").append(data);

                        }).done(function () {
                        $("[data-id='upload_files_view_count']").text($("#application_attachments_container tbody tr").length);

                        if ($("#application_attachments_container tbody tr").length === 1) {
                          $("#upload_files").addClass("col-lg-4").removeClass("d-none");
                          $("#upload_container").addClass("col-lg-8").removeClass("col-lg-12");
                        }
                      });

                      $.get("/data/applications-file-attachment-row-html?mode=view&attachment=" +
                        JSON.stringify(response.attachment) + "&applicationId=" + applicationId + "&candidateId=" + candidateId + "&language=@language",
                        function (data) {

                          $("#application_file_attachments_view ul").append(data);
                        }).done(function () {

                        $("[data-id='upload_files_view_count']").text($("#application_attachments_container tbody tr").length);

                        if ($("#application_file_attachments_view ul li").length === 1) {
                          $("#application_file_attachments_view").removeClass("d-none");
                        }

                      });

                    } else {

                      if (response.status == "error" && response.errText != "") {
                        new PNotify({
                          title: 'Warning! \n ' + response.errText,
                          icon: 'icon-exclamation',
                          type: 'notice'
                        });
                      }

                    }

                  } catch (e) {
                    console.log(e);
                  }
                }
                log('[FileUploaded] File:', file, 'Info:', info); // Called when file has finished uploading
              },
              ChunkUploaded: function (up, file, info) {
                log('[ChunkUploaded] File:', file, 'Info:', info); // Called when file chunk has finished uploading
              },
              UploadComplete: function (up, files) {
                //console.log(JSON.stringify(up,null,4));
                //console.log(JSON.stringify(files, null, 4));
                log('[UploadComplete]'); // Called when all files are either uploaded or failed
                var showMessage = 0;
                if (up.files != null) {
                  for (var f in up.files) {
                    if (typeof plFiles[up.files[f].id] != undefined) {
                      up.files[f].applicationFileId = plFiles[up.files[f].id];
                      if (up.files[f].applicationFileId > 0 || showMessage > 0) showMessage++;
                    }
                  }
                }
                up.smartcv = {jobid: @result._source.jobId, candidateId: candidateId, applicationId:  applicationId};
                $.post('/upload-handler-application-attachments?language=@language', {"uploaded": JSON.stringify(up)}, function (response) {
                  //console.log(response);
                  //afaUploader.destroy();
                  //up.destroy();
                  if (up.files != null && up.files.length > 0 && showMessage > 0){
                    new PNotify({
                      title: up.files.length > 1 ? '@uiTerms["msgFilesUploaded"]' : '@uiTerms["msgFileUploaded"]',
                      icon: 'icon-checkmark3',
                      type: 'success'
                    });
                  }

                  Plupload.init();
                }, 'json');

                @*$.getJSON("/data/upload-results?batchId=@batchId&lang=@userPrefs.uiLanguage", function (result) {
                                    if (result.errorCount > 0) {
                                        $("#parsing_issues").append("<span class='font-weight-bold'>@uiTerms["msgFilesWithParsingIssues"]</span>")
                                        $.each(result.errors, function (i, error) {
                                            lineItem = "<div>· " + error.filename + ": <span class='font-weight-semibold'>" + error.description + "</span></div>"
                                            $("#parsing_issues").append(lineItem)
                                        });
                                        $("#parsing_issues").show();
                                    }
                                });*@
                @*$("#proceed-btn").removeClass("disabled");
                                $("#proceed-btn").html("@uiTerms["lblProceedToJob"]");*@
              },
              Destroy: function (up) {
                log('[Destroy] '); // Called when uploader is destroyed
              },
              Error: function (up, args) {
                log('[Error] ', args); // Called when error occurs
              }
            }
          });

          // Write log
          function log(str) {
            //var str = '';
            plupload.each(arguments, function (arg) {
              var row = '';
              if (typeof (arg) != 'string') {
                plupload.each(arg, function (value, key) {
                  // Convert items in File objects to human readable form
                  if (arg instanceof plupload.File) {
                    // Convert status to human readable
                    switch (value) {
                    case plupload.QUEUED:
                      value = 'QUEUED';
                      break;
                    case plupload.UPLOADING:
                      value = 'UPLOADING';
                      break;
                    case plupload.FAILED:
                      value = 'FAILED';
                      break;
                    case plupload.DONE:
                      value = 'DONE';
                      break;
                    }
                  }
                  if (typeof (value) != 'function') {
                    row += (row ? ', ' : '') + key + '=' + value;
                  }
                });
                str += row + ' ';
              }
              else {
                str += arg + ' ';
              }
            });
            ///var log = $('#log');
            //console.log(str);
            //log.append(str + '<br>');
            //log.scrollTop(log[0].scrollHeight);
          }
        };
        // Return objects assigned to module
        return {
          init: function () {
            _componentPlupload();
            $(".plupload_add").addClass("font-weight-bold");
          }
        }
      }();
    </script>
    <!--#endregion application attachments script-->
    <!-- #region modal delete application attachment -->
    <div class="modal fade" id="deleteApplicationAttachmentModal" tabindex="-1" role="dialog" aria-labelledby="deleteApplicationAttachmentModalLabel" aria-hidden="true">
      <div class="modal-dialog" role="document">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="deleteApplicationAttachmentModalLabel">@uiTerms["lblDeleteApplicationAttachment"]</h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
              <span aria-hidden="true">&times;</span>
            </button>
          </div>
          <div class="modal-body">
            @uiTerms["msgConfirmDeleteApplicationAttachment"]
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-light border-0 font-weight-semibold" data-dismiss="modal">@uiTerms["btnCancel"]</button>
            <button id="btnDeleteApplicationAttachment" type="button" class="btn btn-danger font-weight-semibold">@uiTerms["lblDelete"]</button>
          </div>
        </div>
      </div>
    </div>

    <script>
      var deleteApplicationAttachmentObj = {};
      $("#deleteApplicationAttachmentModal").on('hidden.bs.modal', function (e) { deleteApplicationAttachmentObj = {}; });
      $("#deleteApplicationAttachmentModal").on('show.bs.modal', function (e) {
        deleteApplicationAttachmentObj = {}
        var applicationid = $(e.relatedTarget).data('applicationid');
        var candidateid = $(e.relatedTarget).data('candidateid');
        var title = $(e.relatedTarget).siblings("a").attr("title");
        var fid = $(e.relatedTarget).data('fid');
        $('#deleteApplicationAttachmentModal .modal-body').html('@uiTerms["msgConfirmDeleteApplicationAttachment"]');
        $('#deleteApplicationAttachmentModal .modal-body')
          .html($('#deleteApplicationAttachmentModal .modal-body')
            .html().replace('{0}', '<strong>'+title+'</strong>')
            .replace('{1}', '<strong>@result._source.fullName</strong>')
            .replace('{2}', '<strong>@result._source.jobTitle</strong>'));
        deleteApplicationAttachmentObj = { applicationid: applicationid, candidateid: candidateid, fid: fid, title: escape(title)};
      });

      $('#deleteApplicationAttachmentModal .btn-danger').on("click", function (e) {

        @*$.post("/data/delete-application-attachment?uid=@result._source.applicationGuid&lang=@userPrefs.uiLanguage", function (data) {

                });*@
        $.post('/data/delete-application-attachment', deleteApplicationAttachmentObj, function (data) {
          PNotify.removeAll();
          var result = data.result;
          if (result == "Success") {
            @*$('#deleteApplicationAttachmentModal').modal('hide');
                         updateApplication(@applicationId);*@
            //window.location = "/applications?jobId=@result._source.jobId&pipelineStageId=@result._source.pipelineStageId";
            var $td = $("a[data-fid=\"" + deleteApplicationAttachmentObj.fid + "\"]");
            $td.each(function (i, e) {

              $(e).parents("tr,li").fadeOut("slow", function (ee) {
                $(e).parents("tr,li").remove();
                if ($("#upload_files tr").length == 0) {
                  $("#upload_files").removeClass("col-lg-4").addClass("d-none");
                  $("#upload_container").removeClass("col-lg-8").addClass("col-lg-12");
                  //upload_files_view
                }
                window.setTimeout(function () {
                  var count = $("#upload_files_view li").length;
                  $("[data-id='upload_files_view_count']").text(count);
                  if (count == 0) {
                    $("#application_file_attachments_view").addClass("d-none");
                  }
                  var bDisableBrowse = data.fileCount >= @(SmartCV.ApplicationFileAttachmentsMaxCount) ? 1 : 0;
                  afaUploader.disableBrowse(bDisableBrowse);
                  bDisableBrowse ? $("#application_attachments_max_msg").removeClass("d-none") : $("#application_attachments_max_msg").addClass("d-none");
                  bDisableBrowse ? $(".plupload_buttons a").addClass("plupload_disabled") : $(".plupload_buttons a").removeClass("plupload_disabled");

                }, 100);
              });
            });
            new PNotify({
              title: '@uiTerms["msgApplicationAttachmentDeleted"]',
              icon: 'icon-checkmark3',
              type: 'success'
            });
          }
          else {
            new PNotify({
              title: data.errorText,
              type: 'error'
            });
          }
        }, 'json').always(function () {
          $('#deleteApplicationAttachmentModal').modal('hide');
          @*updateApplication(@applicationId);*@
        });

        new PNotify({
          title: '@uiTerms["msgUpdating"]',
          icon: 'icon-info',
          type: 'info'

        });
      });
    </script>
    <!-- #endregion modal delete application attachment -->
  </div>
  <!--#endregion manage application attachments-->

  <div id="comment_form_area" class="mt-2">

    <form spellcheck="false" id="comment_form" action="~/create-comment.cshtml" method="post" class="form-horizontal">
      <input type="hidden" name="applicationId" value="@applicationId" />
      <input type="hidden" name="candidateId" value="@aCandidateId" />

      <div class="row mb-2">
        <h3 class="col-12 border-bottom-0 border-bottom-grey-600">@uiTerms["lblAddComment"]</h3>
      </div>

      <div class="form-group row">
        <label class="col-form-label col-2 text-grey-800 font-weight-semibold">@uiTerms["lblCommentText"]</label>
        <div class="col-10">

          <textarea id="comment" name="comment" class="form-control" placeholder="@uiTerms["lblCommentPlaceholder"]" minlength="10" rows="4" maxlength="10000"></textarea>
          <div id="comment_error" class="validation-invalid-label"></div>
        </div>
      </div>

      <script>
        tribute.attach(document.getElementById('comment'));
      </script>

      <div class="form-group row">
        <div class="col-12 text-right">
          <button type="button" onclick="$('#comment_form_area').hide();" class="btn btn-light border-0">@uiTerms["btnCancel"]</button>
          <button id="comment_form_submit" type="submit" class="btn bg-teal-400 ml-1 font-weight-semibold">@uiTerms["lblSubmitComment"]</button>
        </div>
      </div>
    </form>

    <script>
      $('#comment_form_area').hide();
      //$("#comment_form_area").validate({});
      var options = {
        target: null,
        beforeSubmit: function (formData, jqForm, options) {
          formData.push({ name: 'ratingValue', value: '0' });
          if ($("#comment").val().trim() == "") {
            $("#comment_error").html("@uiTerms["msgBlankCommentError"]");
            return false;
          }

          $("#comment_form_submit").prop('disabled', true);
          $('#comment_form_submit').html("<i class='fa fa-spinner fa-spin'></i>  @uiTerms["lblProcessing"]");
          return true;
        },
        success: function (data) {

          //msgCommentCreationError

          ////////////////
          PNotify.removeAll();
          var result = data.result;
          if (result == "Success") {
            showApplication(@applicationId);
            new PNotify({
              title: '@uiTerms["msgCommentPosted"]',
              icon: 'icon-checkmark3',
              type: 'success'
              // addclass: 'alert alert-styled-left alert-styled-custom alert-arrow-left alpha-teal text-teal-800 border-teal'
            });
          } else {
            @*$("#edit_comment_form_submit").prop('disabled', false);
            $('#edit_comment_form_submit').html('@uiTerms["btnSave"]');*@
            if (data.errorText == '') { data.errorText='@uiTerms["msgCommentCreationError"]' }
            new PNotify({
              title: data.errorText,
              type: 'error'
            });
          }
          ///////////////

        },
        error: function () {
          new PNotify({
            title: '@uiTerms["msgCommentCreationError"]',
            type: 'error'
          });
        }
      };
      $("#comment_form").ajaxForm(options);
    </script>
  </div>

  @*
    <div id="sms_form_area" class="mt-2">

      <form spellcheck="false" id="sms_form" action="~/data/sms-candidate" method="post" class="form-horizontal">
        <input type="hidden" name="applicationId" value="@applicationId" />
        <input type="hidden" name="candidateId" value="@result._source.candidateId" />
        <input type="hidden" name="lang" value="@language" />

        <div class="row mb-2">
          <h3 class="col-12 border-bottom-0 border-bottom-grey-600">@uiTerms["lblTextCandidate"].Replace("{0}", uiTerms[Utils.GetGenderedTerm("lblCandidateLiteralAccusative", result._source.gender)])</h3>
        </div>

        <div class="form-group row mb-2">
          <label class="col-form-label col-2 font-weight-semibold text-grey-800">@uiTerms["lblMobileNumber"]</label>
          <div class="col-2">
            <select id="dialCode" name="dialCode" class="form-control">
              @foreach (var dialCode in dialCodes)
              {
                <option value="@dialCode.gcDialCode">+@dialCode.gcDialCode</option>
              }
            </select>
            <div id="dialCode_error" class="validation-invalid-label"></div>
          </div>

          <div class="col-3">

            <input type="text" id="phone" name="phone" maxlength="12" class="form-control" placeholder="@uiTerms["lblPhonePlaceholder"]" value="">
            @Html.ValidationMessage("phone", new { id = "phone_error", @class = "validation-invalid-label" })
          </div>
        </div>

        <div class="form-group row">
          <label class="col-form-label col-2 text-grey-800 font-weight-semibold">@uiTerms["lblMessageText"]</label>
          <div class="col-10">

            <textarea id="textMessage" name="textMessage" class="form-control" minlength="10" rows="2" maxlength="160"></textarea>
            <div id="textMessage_error" class="validation-invalid-label"></div>
          </div>
        </div>

        <div class="form-group row">
          <div class="col-12 text-right">
            <button type="button" onclick="$('#sms_form_area').hide();" class="btn btn-light border-0">@uiTerms["btnCancel"]</button>
            <button id="sms_submit" type="submit" class="btn bg-teal-400 ml-1 font-weight-semibold">@uiTerms["lblSend"]</button>
          </div>
        </div>
      </form>

      <script>
              $.getJSON("/data/parse-phone-number?phoneNumberRaw=@Server.UrlEncode(result._source.phone)", function (data) {
                  $("#dialCode").val(data.parsedDialCode);
                  $("#phone").val(data.parsedPhoneNumber);
              });

              $('#sms_form_area').hide();

              var options = {
                      target: null,
                      dataType: "json",
                      beforeSubmit: function (formData, jqForm, options) {

                          var failed = false;
                          if ($("#dialCode").find(":selected").text().trim() == "") {
                              $("#dialCode_error").html("@uiTerms["msgMandatoryField"]");
                              failed = true;
                          }

                          if ($("#phone").val().trim() == "" || $("#phone").val().trim().length<10) {
                              $("#phone_error").html("@uiTerms["msgInvalidPhoneNumber"]");
                              failed = true;
                          }

                          if ($("#textMessage").val().trim() == "") {
                              $("#textMessage_error").html("@uiTerms["msgMandatoryField"]");
                              failed = true;
                          }

                          if (failed) {
                              return false;
                          }

                          $("#sms_submit").prop('disabled', true);
                          $('#sms_submit').html("<i class='fa fa-spinner fa-spin'></i>  @uiTerms["lblProcessing"]");
                          return true;
                      },
                      success: function (data) {
                          // alert(data.errorText);
                          showApplication(@applicationId);

                          if (data.result == "Error") {
                              new PNotify({
                                  title: data.errorText,
                                  icon: 'icon-alert',
                                  type: 'error'
                              });
                          }
                          else {
                              new PNotify({
                              title: '@uiTerms["msgSmsSuccessfullySent"]',
                              icon: 'icon-checkmark3',
                              type: 'success'
                              // addclass: 'alert alert-styled-left alert-styled-custom alert-arrow-left alpha-teal text-teal-800 border-teal'
                          });
                          }

                      }
                  };
              $("#sms_form").ajaxForm(options);
      </script>
    </div>
  *@
  <div id="changename_form_area" class="mt-2">

    <form spellcheck="false" id="changename_form" action="~/change-name.cshtml" method="post" class="form-horizontal">
      <input type="hidden" name="applicationId" value="@applicationId" />
      <input type="hidden" name="candidateId" value="@aCandidateId" />
      <input type="hidden" name="cvGuid" value="@result._source.parsedCvGuid" />

      <div class="form-group">

        <div class="row mb-2">
          <h3 class="col-12 border-bottom-0 border-bottom-grey-600">@uiTerms["lblChangeBasicInfo"]</h3>
        </div>

        <div class="row mb-2">
          <div class="col-sm-6">
            <label class="text-grey-800 font-weight-semibold">@uiTerms["lblFirstName"]</label>
            <input type="text" id="firstName" name="firstName" value="@result._source.firstName" maxlength="30" class="form-control">
            <div id="firstName_error" class="validation-invalid-label"></div>
          </div>

          <div class="col-sm-6">
            <label class="text-grey-800 font-weight-semibold">@uiTerms["lblLastName"]</label>
            <input type="text" id="lastName" name="lastName" value="@result._source.lastName" maxlength="30" class="form-control">
            <div id="lastName_error" class="validation-invalid-label"></div>
          </div>
        </div>

        <div class="row">
          <div class="col-sm-6">

            <label class="text-grey-800 font-weight-semibold">@uiTerms["lblMobileNumber"]</label>
            <div class="row">
              <div class="col-4">
                <select id="dialCode" name="dialCode" class="form-control select" style="width: 100% !important;">
                  @foreach (var dialCode in dialCodes)
                  {
                    <option value="@dialCode.gcDialCode">+@dialCode.gcDialCode</option>
                  }
                </select>
                <div id="dialCode_error" class="validation-invalid-label"></div>
              </div>

              <div class="col-8">
                <input type="text" onkeypress="return isNumber(event)" id="phone" name="phone" minlength="8" maxlength="25" class="form-control" placeholder="@uiTerms["lblPhonePlaceholder"]">
                @Html.ValidationMessage("phone", new { id = "phone_error", @class = "validation-invalid-label" })
              </div>
            </div>
          </div>

          <div class="col-sm-6">
            <label class="text-grey-800 font-weight-semibold">@uiTerms["lblEmail"]</label>
            <input type="text" required email="true" id="email" name="email" value="@result._source.email" class="form-control" maxlength="100">
            @Html.ValidationMessage("email", new { id = "email_error", @class = "validation-invalid-label" })
          </div>
        </div>
      </div>

      <div class="form-group row">
        <div class="col-12 text-right">
          <button type="button" onclick="$('#changename_form_area').hide();" class="btn btn-light border-0">@uiTerms["btnCancel"]</button>
          <button id="changename_form_submit" type="submit" class="btn bg-teal-400 ml-1 font-weight-semibold">@uiTerms["btnSaveChanges"]</button>
        </div>
      </div>
    </form>

    <script>
      $('#changename_form_area').hide();

      var options = {
        target: null,
        beforeSubmit: function (formData, jqForm, options) {

          if (!$("#changename_form").valid()){return false;}
          if ($("#changename_form_area #firstName").val().trim() == "") {
            $("#changename_form_area #firstName_error").html("@uiTerms["msgMandatoryFirstName"]");
            return false;
          }

          if ($("#changename_form_area #lastName").val().trim() == "") {
            $("#changename_form_area #lastName_error").html("@uiTerms["msgMandatoryLastName"]");
            return false;
          }

          $("#changename_form_submit").prop('disabled', true);
          $('#changename_form_submit').html("<i class='fa fa-spinner fa-spin'></i>  @uiTerms["lblProcessing"]");
          return true;
        },
        success: function (data) {

          if (data.result == "Error") {
            new PNotify({
              title: data.errorText,
              icon: 'icon-alert',
              type: 'error'
            });

            $("#changename_form_submit").prop('disabled', false);
            $('#changename_form_submit').html("@uiTerms["btnSaveChanges"]");
          }
          else {

            window.setTimeout(function(){showApplication(@applicationId);}, 10);
            new PNotify({
              title: '@uiTerms["msgCandidateBasicInfoEdited"]',
              icon: 'icon-checkmark3',
              type: 'success'
              // addclass: 'alert alert-styled-left alert-styled-custom alert-arrow-left alpha-teal text-teal-800 border-teal'
            });
            $("#application_item_" + @applicationId + " [data-name] span").text($("#firstName").val() + " " + $("#lastName").val());
          }

        }
      };
      $("#changename_form").ajaxForm(options);
    </script>
  </div>

  @if (result._source.isDummy == 1)
  {
    <div class="alert alert-info">
      @uiTerms["msgDummyApplication"]
    </div>
  }

  @if (isExpired)
  {
    <div class="alert alert-danger border-0 alert-dismissible font-weight-semibold">
      @uiTerms["msgCandidateExpired"].Replace("{0}", Convert.ToDateTime(result._source.expiryDate).ToString("dd/MM/yyyy"))
    </div>
  }

  @if (isWithdrawn)
  {
    <div class="alert alert-danger border-0 alert-dismissible font-weight-semibold">
      @uiTerms["msgApplicationWihdrawn"].Replace("{0}", Utils.LocalDateTime(Convert.ToDateTime(result._source.withdrawnDateTime), userPrefs.timeZoneId, language).asMidDateShortTime24)
    </div>
  }

  @if (isAccessAllowed == false)
  {
    <div class="alert alert-danger border-0 alert-dismissible font-weight-semibold">
      @uiTerms["msgAccessToCandidateNotAllowed"]
    </div>
  }

  @if (result._source.hasParsingIssues == 1 & !isExpired & !isWithdrawn)
  {
    <div class="alert alert-warning">
      @foreach (var issue in result._source.parsingIssues)
      {
        <div>
          @uiTerms[issue]
        </div>
      }
      <div>
        @uiTerms["msgPleaseSeeResume"]
      </div>
    </div>
  }

  <div id="profile_tabs" style="z-index:1020" class="page-header container  bg-white col-12" data-sticky_column>
    <ul id="profile_nav" class="nav nav-tabs nav-tabs-bottom font-size-lg ">
      <li class="nav-item"><a href="javascript:movePage('#glance');" class="nav-link active font-weight-semibold" data-target="#glance">@Utils.GreekUpper(uiTerms["lblAtAGlance"])</a></li>
      <li class="nav-item"><a href="javascript:movePage('#timeline');" class="nav-link font-weight-semibold" data-target="#timeline">@Utils.GreekUpper(uiTerms["lblActivity"])</a></li>
      @if (!isExpired)
      {
        if (videoInterviews.Count > 0)
        {
          <li class="nav-item"><a href="javascript:movePage('#video_answers');" class="nav-link font-weight-semibold" data-target="#video_answers">@Utils.GreekUpper(uiTerms["lblVideoInterview"])</a></li>
        }

        if (answers.Count > 0)
        {
          <li class="nav-item"><a href="javascript:movePage('#answers');" class="nav-link font-weight-semibold" data-target="#answers">@Utils.GreekUpper(uiTerms["lblAnswers"])</a></li>
        }

        <li class="nav-item"><a href="javascript:movePage('#profile');" class="nav-link  font-weight-semibold" data-target="#profile">@Utils.GreekUpper(uiTerms["lblProfile"])</a></li>
        if (applicationFileAttachments != null && applicationFileAttachments.Count > 0)
        {
          <li class="nav-item">
            <a href="javascript:movePage('#application_file_attachments_view');" class="nav-link font-weight-semibold" data-target="#application_file_attachments_view">
              @Utils.GreekUpper(uiTerms["lblApplicationAttachments"])
            </a>
          </li>
        }
        <li class="nav-item"><a href="javascript:movePage('#resume');" class="nav-link font-weight-semibold" data-target="#resume">@Utils.GreekUpper(uiTerms["lblResume"])</a></li>
      }
    </ul>
  </div>

  <script>

    function movePage(divId) {
      if (!$(divId).length) return false;
      $([document.documentElement, document.body]).animate({
        scrollTop: $(divId).offset().top - 110
      }, 200);
    }
  </script>

  <script>
    $("#profile_tabs").pin({
      containerSelector: "#application_pane"
    })

    $('body').scrollspy({ target: '#profile_nav' });
  </script>

  <script>
    function moveToStage(applicationId, pipelineStage) {
      $.post('/data/move-application-json?applicationId=' + applicationId + '&pipelineStageId=' + pipelineStage + '&loginId=@WebSecurity.CurrentUserId', function (response) {

        // top.location.reload();
        // window.location = window.location.href.split("?")[0] + "/candidate-moved/" + "?" + window.location.href.split("?")[1];
        updateApplication(applicationId);

        $.getJSON('/data/job-stages-json?jobId=@result._source.jobId', function (data) {
          $.each(data, function (key, val) {
            //alert(key + " " + val);
            $('#pipelineStage_count_' + key).html(val);
          });
        });

        $.getJSON('/data/application-json?aGuid=@result._source.applicationGuid', function (data) {
          if (data.pipelineStageId == 0) {
            $('#pipeline_' + applicationId).html('');
            $('#pipeline_' + applicationId).removeClass('ml-1 badge badge-info');
          } else {
            $('#pipeline_' + applicationId).html(data.pipelineStageName);
            $('#pipeline_' + applicationId).addClass('ml-1 badge badge-info');
          }
        });

        if (pipelineStage > 0) {
          new PNotify({
            title: '@uiTerms["msgCandidateMovedToStage"]',
            icon: 'icon-checkmark3',
            type: 'success'
          });
        }
        else {
          new PNotify({
            title: '@uiTerms["msgCandidateRemovedFromStage"]',
            icon: 'icon-checkmark3',
            type: 'success'
          });
        }

      });
    }

    @*function moveToJob(applicationUid, jobUid) {
      $.post('/data/copy-application-to-job?applicationUid=' + applicationUid + '&jobUid=' +
        jobUid + '&loginId=@WebSecurity.CurrentUserId', function (data) {

          PNotify.removeAll();
          if (data.result == "Success") {
            new PNotify({
              title: '@uiTerms["msgApplicationCopied"].Replace("{lblCandidateLiteral}", uiTerms[Utils.GetGenderedTerm("lblCandidateLiteral", result._source.gender)]).Replace("{aFullName}",result._source.fullName)'.replace('{0}',data.jobTitle),
              icon: 'icon-checkmark3',
              type: 'success'
            });
          }
          else {
            new PNotify({
              title: 'ERROR!',
              //icon: 'icon-checkmark3',
              type: 'error'
            });
          }

        });

      new PNotify({
        title: '@uiTerms["msgUpdating"]',

        icon: 'icon-info',
        type: 'info'

      });
    }*@
  </script>
  @*PHONE: @Utils.GetPhoneDigits(result._source.phone) (@Utils.GetPhoneDigits(result._source.phone).ToString().Length)*@
  <div id="glance" class="row text-left" style="height:30px"></div>

  <div class="row text-left">

    <div class="col-3 ">
      <div class="text-center mr-5 position-relative">
        @if (result._source.hasPhoto == 1 & isExpired == false & isWithdrawn == false & isAccessAllowed == true & isBlindHiringEnabled == false)
        {
          <img src="@SmartCV.PhotoCVUrlMedium(Guid.Parse(result._source.parsedCvGuid))" class="rounded-circle img-fluid" width="120" height="120" alt="">
        }
        else
        {
          <a href="#" class="btn bg-teal-400 rounded-round btn-icon btn-lg text-center align-items-center" style="width:120px;height:120px"><span class="letter-icon text-center" style="position: absolute; top: 50%; left: 50%; transform: translate(-50%,-50%); font-size: 60px; line-height: 2em; width: 100%; height: 100%;"> @result._source.initials</span></a>
        }
        @if (result._source.matchScore > 0 && !isExpired && !isWithdrawn)
        {
          <span class="badge bg-info badge-pill badge-float border-2 border-white " style="font-size:20px">@result._source.matchScore%</span>
        }
      </div>
      <div class="text-center mr-5 position-relative mt-3">
        <div class="row">
          <div class="col-6">
            <a data-toggle="tooltip" data-placement="bottom" title="" data-original-title="@uiTerms["lblOpenInNewTab"]" target="_blank" href="@($"{Request.Url.GetLeftPart(UriPartial.Authority)}/application?id=" + applicationId)" class="text-grey-700 float-right"><i class="icon-link2 font-size-xl"></i></a>
          </div>
          <div class="col-6">
            <div id="applicationurl-@applicationId" style="position: absolute;left: -999em;" class="font-weight-semibold">@($"{Request.Url.GetLeftPart(UriPartial.Authority)}/application?id=" + applicationId)</div>
            <a data-toggle="tooltip" data-placement="bottom" title="" data-original-title="@uiTerms["lblCopyToClipboard"]" href="javascript:void(0)" class="text-grey-700 float-left"><i class="icon-copy font-size-xl" onclick="CopyToClipboard('applicationurl-@applicationId', '@uiTerms["msgApplicationUrlCopied"]')"></i></a>
          </div>
        </div>
      </div>
    </div>

    <div class="col-8">
      <div class="mb-3">
        <h1 class="mb-0 font-weight-semibold">
          @if (isBlindHiringEnabled == false && !isExpired && !isWithdrawn)
          {
            @Utils.CandidateDisplayName(result._source.fullName, uiTerms)
          }
          else
          {
            @Utils.FullNameInitials(result._source.firstName, result._source.lastName)
          }

          @if (result._source.averageRating > 0 && !isWithdrawn && !isExpired)
          {

            <span id="averageRating_click_area">
              <span id="averageRating"></span>
              <script>
                $("#averageRating").starRating({
                  starSize: 20,
                  initialRating: @string.Format(new System.Globalization.CultureInfo("en-GB"), "{0:0.##}", (double)result._source.averageRating),
                  readOnly: true,
                  useGradient: false,
                  activeColor: "#ffa534"
                });

                $("#averageRating_click_area").click(function () {
                  $("#evaluation_form_area").show();
                  $([document.documentElement, document.body]).animate({
                    scrollTop: $("#evaluation_form_area").offset().top - 115
                  }, 300);

                });
              </script>
            </span>

          }
        </h1>
        @if (!isExpired && !isWithdrawn)
        {
          <div class="text-lg font-size-lg">
            @if (result._source.isEmployed == 1)
            {
              <span>@Utils.Upper1stLetter(result._source.currentRole) <span class=""> @(!String.IsNullOrEmpty(result._source.currentRole) ? " at " : "") @result._source.currentEmployer</span></span>
            }
            else
            {
              <span>@Utils.Upper1stLetter(result._source.recentRole)</span>
            }
          </div>
        }
        <div class="mt-2 text-lg font-size-lg font-weight-semibold">

          @Utils.LocalDateTime(Convert.ToDateTime(result._source.createdDateTime), userPrefs.timeZoneId, language).asMidDateShortTime24
          @if (result._source.internalSourceName != String.Empty)
          {
            <span> · @result._source.internalSourceName</span>
          }

          @if (!String.IsNullOrEmpty(result._source.externalSource))
          {
            <span> · @result._source.externalSource</span>
          }
        </div>
        


        <div class="font-size-lg mb-3">
            @if (!isExpired & !isWithdrawn & isAccessAllowed)
            {
                if (!isBlindHiringEnabled)
                {
                    <span class="font-size-lg">
                        @result._source.phone  · @Html.Raw(SmartCV.CandidateEmail(result._source.email).displayLinkableProfileEmail)

                        @if (!String.IsNullOrEmpty(result._source.linkedInUrl)) 
                        { 
                            <span> · <a href="https://@result._source.linkedInUrl.Replace("https://","")" target="_blank">LinkedIn</a></span>
                        
                        }
                    </span>
                }

                <script>
                    $("#application_email").click(function () {
                        $("#email_form_area").show();
                        $([document.documentElement, document.body]).animate({
                            scrollTop: $("#email_form_area").offset().top - 115
                        }, 300);

                    });
                </script>
                if (result._source.administrativeArea != "")
                {
                    if ((!isBlindHiringEnabled) | (isBlindHiringEnabled & customerPrefs.blindHiringHideLocation == 0))
                    {
                        <span class="font-size-lg">
                            ·
                            <a class="text-grey-800 border-bottom-1 border-grey-300" href="/candidates?administrativeArea=@result._source.administrativeArea">@result._source.administrativeArea</a>, @result._source.countryCode

                            @if (result._source.geoDistance > 0)
                            {
                                <span class="font-weight-semibold">(@Math.Round(result._source.geoDistance) @uiTerms["lblKm"])</span>
                            }
                        </span>
                    }

                }

            }
        </div>

        
        @if (result._source != null && !isExpired && !isWithdrawn)
        {

          <div class="font-size-base" style="line-height:230%">
            @if (result._source.tags != null)
            {
              foreach (var tag in result._source.tags)
              {
                if (!string.IsNullOrEmpty(tag))
                {
                  <a href="~/candidates?tags=@tag"><span class="font-size-sm badge badge-primary bg-cerulean">@tag</span></a>
                }

              }
            }
            <a href="javascript:void(0);" class="font-size-sm @(result._source.tags != null && result._source.tags.Length > 0 && string.Join("", result._source.tags).Trim().Length > 0 ? " ml-1 " : " btn btn-light border-0 ") " onclick="$('#tags_form_area').toggle();">
              @(result._source.tags != null && result._source.tags.Length > 0 && string.Join("", result._source.tags).Trim().Length > 0 ? uiTerms["lblEditTags"] : uiTerms["lblAddTag"])
            </a>
          </div>

          <div id="tags_form_area">

            @{
              var tags = "";
              if (result._source.tags != null)
              {

                foreach (var tag in result._source.tags)
                {
                  if (!string.IsNullOrEmpty(tag)) { tags += tag + ","; }
                }
              }
            }

            <form id="tags_form" action="update-tags" method="post" class="form-horizontal">
              <input type="hidden" name="applicationId" value="@applicationId" />
              <input type="hidden" name="candidateId" value="@aCandidateId" />
              <input type="hidden" name="customerId" value="@result._source.customerId" />
              <div class="modal-body pl-0">
                <!-- Using typeahead -->
                <div class="form-group row">

                  <div class="col-12">
                    <input name="tags" value="@tags" id="tags_input" type="text" data-role="tagsinput" class="form-control">
                    <div class="mt-1 text-grey-700">@uiTerms["msgTagTip"]</div>
                  </div>

                </div>
                <!-- /using typeahead -->

                <div class="modal-footer pr-0 pl-0">
                  <button type="button" class="btn btn-light border-0" onclick="$('#tags_form_area').hide();" data-dismiss="modal">@uiTerms["btnCancel"]</button>
                  <button type="submit" id="tags_form_submit" class="btn bg-teal-300 font-weight-semibold">@uiTerms["btnSaveChanges"]</button>
                </div>
              </div>
            </form>

            <script>
              $("#tags_form_area").hide();

              var tagnames = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {

                  url: '/data/tags-json?customerId=@result._source.customerId&q=%QUERY',
                  wildcard: '%QUERY',
                  filter: function (list) {
                    return $.map(list, function (tagname) {
                      return { name: tagname };
                    });
                  }
                }
                //prefetch: {
                //    url: '/data/tags-json?customerId=@result._source.customerId&' + Math.random(),
                //    filter: function (list) {
                //        return $.map(list, function (tagname) {
                //            return { name: tagname };
                //        });
                //    }
                //}
              });
              tagnames.clearRemoteCache();
              tagnames.initialize();

              $('#tags_input').tagsinput({
                typeaheadjs: {
                  name: 'tagnames',
                  displayKey: 'name',
                  valueKey: 'name',
                  source: tagnames.ttAdapter()
                }
              });

              var options = {
                target: null,
                success: function () {
                  showApplication(@applicationId);
                  new PNotify({
                    title: '@uiTerms["msgTagsSaved"]',
                    icon: 'icon-checkmark3',
                    type: 'success'
                    // addclass: 'alert alert-styled-left alert-styled-custom alert-arrow-left alpha-teal text-teal-800 border-teal'
                  });
                },
                beforeSubmit: function (arr, $form, options) {
                  $("#tags_form_submit").prop('disabled', true);
                  $('#tags_form_submit').html('Please wait');

                }
              };

              $("#tags_form").ajaxForm(options);
            </script>
          </div>

        }
      </div>
    </div>
  </div>
</div>
<!-- /numbers -->
<!-- Numbers -->
@*@{ 
  stopwatch31.Stop();
  Stopwatch stopwatch32 = new Stopwatch();
  stopwatch32.Start();
}*@
<div class="card-body border-0 pt-0 pb-0 border-bottom-0 mt-2" style="border-width:0px">

  <div class="row text-center">
    @if (result._source.matchScore > 0 & !isExpired & !isWithdrawn & isAccessAllowed)
    {
      <div class="col-3">
        <div class="mb-3">
          <div id="aaa"></div>
          <h1 class="font-weight-bold mb-0">@result._source.matchScore%</h1>
          <span class="text-black font-size-lg">@uiTerms["lblMatchScore"]</span>
        </div>
      </div>
      if (result._source.unweightedCategoryScores != null)
      {
        foreach (var score in result._source.unweightedCategoryScores)
        {
          if (score.UnweightedScore > 0)
          {
            <div class="col-3">
              <div class="mb-3 bottom">
                <div id="@score.Category"></div>
                <h5 class="font-weight-bold font-size-base mb-0">@Math.Round(score.UnweightedScore)%</h5>
                <span class="text-black font-size-lg">@Utils.GetExtTerm(score.Category, uiTerms)</span>
                <div class="text-grey font-size-base">
                  @foreach (var term in score.TermsFound)
                  {
                    <div>
                      @Utils.GetExtTerm(term, uiTerms)
                    </div>

                  }
                </div>
              </div>
            </div>
          }

        }
      }
    }

    @if (!isExpired & !isWithdrawn & isAccessAllowed)
    {
      <div class="col-3">
        <div class="mb-3">
          <h5 class="font-weight-semibold mb-0">@Utils.DurationInt(result._source.monthsOfWorkExperience, language)</h5>
          <span class="text-black font-size-lg">@uiTerms["lblWorkExperience"]</span>
        </div>
      </div>

      <div class="col-3">
        <div class="mb-3">
          <h5 class="font-weight-semibold mb-0">@Utils.DurationInt(result._source.averageMonthsPerEmployer, language)</h5>
          <span class="text-black font-size-lg">@uiTerms["lblAvgDurationPerEmployer"]</span>
        </div>
      </div>

      <div class="col-3">
        <div class="mb-3">
          <h5 class="font-weight-semibold mb-0">@(result._source.isEmployed == 1 ? uiTerms["lblIsEmployed"] : uiTerms["lblIsNotEmployed"])</h5>
          <span class="text-black font-size-lg">@uiTerms["lblEmploymentStatus"]</span>
        </div>
      </div>

      if (result._source.age > 0 & !isBlindHiringEnabled)
      {
        <div class="col-3">
          <div class="mb-3">
            <h5 class="font-weight-semibold mb-0">@result._source.age @uiTerms["lblYearsOld"]</h5>
            <span class="text-black font-size-lg">@uiTerms["lblAge"]</span>
          </div>
        </div>
      }

      if (result._source.monthsOfManagementExperience > 0)
      {
        <div class="col-3">
          <div class="mb-3">
            <h5 class="font-weight-semibold mb-0">@Utils.DurationInt(result._source.monthsOfManagementExperience, language)</h5>
            <span class="text-black font-size-lg">@uiTerms["lblManagementExperience"]</span>
          </div>
        </div>
      }

      if (!String.IsNullOrEmpty(result._source.currentManagementLevel))
      {
        <div class="col-3">
          <div class="mb-3">
            <h5 class="font-weight-semibold mb-0">@Utils.GetExtTerm(result._source.currentManagementLevel, uiTerms)</h5>
            <span class="text-black font-size-lg">@uiTerms["lblManagementLevel"]</span>
          </div>
        </div>
      }

      if (result._source.executiveType != "none")
      {
        <div class="col-3">
          <div class="mb-3">
            <h5 class="font-weight-semibold mb-0">@Utils.GetExtTerm(result._source.executiveType, uiTerms)</h5>
            <span class="text-black font-size-lg">@uiTerms["lblExecutiveType"]</span>
          </div>
        </div>
      }
    }
  </div>

  <script>
      $('#aaa').circleProgress({
        value: @string.Format(new System.Globalization.CultureInfo("en-GB"), "{0:0.##}", (double)result._source.matchScore / 100),
        size: 65,
        thickness : 10,
        fill: "#ed990e",
        animation : false
      });
  </script>

  @if (result._source.matchScore > 0 && result._source.unweightedCategoryScores != null)
  {
    <script>
        @foreach (var score in result._source.unweightedCategoryScores)
        {
          if (score.UnweightedScore > 0)
          {
                <text>
                  $('#@score.Category').circleProgress({
                    value: @string.Format(new System.Globalization.CultureInfo("en-GB"), "{0:0.##}", score.UnweightedScore / 100),
                    size: 45,
                    thickness: 7,
                    fill: "#ed990e",
                    animation : false
                  });
                </text>
          }

        }
    </script>

  }
</div>

@if (result._source.matchScore == 0)
{
  <div class="alert-info p-2 m-2">
    @uiTerms["msgZeroMatchScore"]
  </div>
}
@*@{   stopwatch32.Stop();
  Stopwatch stopwatch33 = new Stopwatch();
  stopwatch33.Start();}*@

<!-- /numbers -->
<!--#region candidate applications info-->
@if (!isExpired && isAccessAllowed && candidateApplicationsInfo != null && candidateApplicationsInfo.Count > 0)
{
  <div class="card-header bg-white header-elements-inline p-1 pl-0 ml-2 mr-2 mt-2 mb-2">
    <h4 class="card-title font-weight-semibold">
      @uiTerms["lblAppearsAlso"]
    </h4>
    <div class="header-elements">
      <div class="list-icons">
      </div>
    </div>
  </div>
  <div class="card-body pt-0 border-0">
    <div class="table-responsive">
      <table class="table">
        <thead>
          <tr>
            <th>@uiTerms["lblApplicationDate"]</th>
            <th>@uiTerms["lblJob"]</th>
            @*<th>@uiTerms["lblCareerSite"]</th>*@
            <th>@uiTerms["lblStage"]</th>
            <th>@uiTerms["lblChannel"]</th>
            <th>@uiTerms["lblSource"]</th>
          </tr>
        </thead>
        <tbody>
          @foreach (var cai in candidateApplicationsInfo)
          {
            <tr>
              <td class="text-nowrap">@Utils.LocalDateTime(cai.aCreatedDateTime, userPrefs.timeZoneId, language).asMidDate</td>
              <td>
                <a target="_blank" class="font-weight-semibold font-size-lg"
                   href="~/application?id=@cai.aId">@cai.jTitle</a>
                  @*@(cai.jJobCode != "" ? " (" + cai.jJobCode + ")" : "")*@
                  @if (cai.jIsGeneralAdmission == 1)
                  {
                    <span title="" class="text-danger">*</span>
                  }
                  @if (cai.jIsPublished == 1)
                  {
                    <div class="dropdown ml-1 d-inline-block">
                      <div class="badge @(cai.jIsPublished == 1 ? " bg-caribbeangreen" : "  bg-cruise")">
                        @(cai.jIsPublished == 1 ? uiTerms["lblPublishedJob"] : uiTerms["lblNotPublishedJob"] )
                      </div>
                    </div>
                  }
                </td>
                @*<td style="white-space:nowrap">
                    <div id="joburl-@cai.jId" style="position: absolute;left: -999em" class="font-weight-semibold">
                      https://@App["careerSiteDomain"]/@cai.oVirtualDir/job/@cai.jHashId
                    </div>
                    <div class="dropdown">
                      <div class="font-size-sm badge @(cai.jIsPublished==1 ? " bg-caribbeangreen" : "  bg-cruise")">
                        @(cai.jIsPublished == 1 ? uiTerms["lblPublishedJob"] : uiTerms["lblNotPublishedJob"] )
                      </div>
                    </div>
                  </td>*@
                <td class="text-nowrap"><a href="~/applications?jobId=@cai.jId&pipelineStageId=@cai.psId" target="_blank"><span class="badge badge-light font-size-base">@cai.psName</span></a></td>
                <td class="text-nowrap"><a href="~/filtered-applications?jobId=@cai.jId&internalSourceName=@cai.isName"  target="_blank"><span class="badge badge-light font-size-base">@cai.isName</span></a></td>
                <td>
                  @cai.aExternalSource
                </td>
              </tr>
            }
        </tbody>
      </table>
    </div>
  </div>

}
<!--#endregion candidate applications info -->

@if (!isExpired & !isWithdrawn & isAccessAllowed & !isBlindHiringEnabled)
{

  <div class="card-header bg-white header-elements-inline p-1 pl-0 ml-2 mr-2 " id="timeline">
    <h4 class="card-title font-weight-semibold">
      @uiTerms["lblActivity"]
    </h4>
    <div class="header-elements">
      <div class="list-icons">
      </div>
    </div>
  </div>

  <div class="card-body pt-0 border-0">

    @{
      var timelineCount = db.QueryValue(@"SELECT COUNT(*) FROM events
JOIN event_types ON (eType=etId)
JOIN candidates ON (eCandidateId=cdId)
LEFT JOIN applications ON (eApplicationId=aId)
LEFT JOIN parsed_cvs ON (aParsedCvId=cvId)
LEFT JOIN jobs ON (aJobId=jId)
LEFT JOIN logins on (eCreatedBy=lId)
WHERE eCandidateId=@0", aCandidateId);

      var totalTimelinePages = (int)Math.Ceiling((double)timelineCount / 10);
    }
    <div class="list-feed list-feed-time mb-2 mt-2 font-size-lg" id="events_list">
      @if (!isBlindHiringEnabled)
      {
        @PageHelpers.CandidateEventItems(aCandidateId, 1, language, userPrefs.timeZoneId, timelineRoleId, currentLogin.lId)
      }
    </div>

    <button id="next_events_page" class="btn btn-sm btn-light border-0">@uiTerms["lblMore"]</button>
    <script>
        var eventsPage = 1;
        var totalEventPages = @totalTimelinePages;
        if (eventsPage >= totalEventPages) { $("#next_events_page").hide(); }
        updateEventsDetails();

        $("#next_events_page").click(function () {
          // $.get("/data/events-html?applicationId=@applicationId&page=" + (eventsPage+1) + "&language=@language", function (response) {
          $.get("/data/candidate-events-html?candidateId=@aCandidateId&page=" + (eventsPage + 1) + "&language=@language&timeZoneId=@Utils.UrlEncode(userPrefs.timeZoneId)&roleId=@timelineRoleId&currentLogin=@currentLogin.lId", function (response) {
            $("#events_list").append(response);
            updateEventsDetails();
            eventsPage++;
            if (eventsPage == totalEventPages) {
              $("#next_events_page").hide();
            }
            removeOldPipelineStagesHref();
          });

        });

        function updateEventsDetails() {
          $(".event_item").each(function () {
            var id = $(this).attr('id').split('_')[1];
            var type = $(this).attr('id').split('_')[2];
            var containerId = "#event_" + id + "_" + type;

            if ($("#event_" + id + "_" + type).html().trim().length == 0) {
              $.get('/data/event-details?guid=' + id + '&type=' + type + '&lang=@language', function (response) {
                var $el = $(document.getElementById("event_" + id + "_" + type));
                $el.html(response);
                //console.log(response);
                var attr = $el.attr('data-edit');
                if (typeof attr !== 'undefined' && attr !== false) {
                  $el.attr("style", "background-color:#f0f0f0!important;max-height:300px;overflow-y:auto;");
                  var uid = $el.data('uid');
                  var createdby = $el.data('createdby');
                  var candidateId = $el.data('candidateid');
                  var applicationId = $el.data('applicationid');

                  var listHtml = '<div class="list-icons float-right cursor-pointer">' +
                    ' <div class="dropdown">' +
                    '    <a href="#" class="list-icons-item dropdown-toggle caret-0 cursor-pointer" data-toggle="dropdown"><i class="icon-menu"></i></a>' +
                    '    <div class="dropdown-menu dropdown-menu-right">' +
                    function (t) {
                    if (t ==@SmartCV.eventTypeId_eventPostComment) {
                        return '<a id=\'' + "event_" + id + "_" + type + 'Caller\' nohref onclick="EditCommentInline(\'' + "event_" + id + "_" + type + '\')" class="dropdown-item" title="@uiTerms["lblEditComment"]">@uiTerms["lblEditComment"]</a>' +
                        '<a href="#deleteCommentModal" data-toggle="modal" data-uid="' + uid + '" data-createdby="' + createdby + '" ' +
                        '  class="dropdown-item" title="@uiTerms["lblDeleteComment"]">@uiTerms["lblDeleteComment"]</a>'
                    }
                    else if (t == @SmartCV.eventTypeId_eventPostRating) {
                      return '<a id=\'' + "event_" + id + "_" + type + 'Caller\' nohref onclick="EditEvaluationInline(\'' + "event_" + id + "_" + type + '\')" class="dropdown-item" title="@uiTerms["lblEditEvaluation"]">@uiTerms["lblEditEvaluation"]</a>' +
                        '<a href="#deleteEvaluationModal" data-toggle="modal"  data-applicationid="' + applicationId + '" data-candidateid="' + candidateId + '" data-uid="' + uid + '" data-createdby="' + createdby + '" ' +
                        '  class="dropdown-item" title="@uiTerms["lblDeleteEvaluation"]">@uiTerms["lblDeleteEvaluation"]</a>'
                    }
                    }(type) +
                    ' </div>' +
                    '</div>';

                  $el.before(listHtml);
                }

              });
            }

          });
          removeOldPipelineStagesHref();
        }

        function removeOldPipelineStagesHref() {

          var pipelineStages = $("li[pipelinestage]>a[data-id]").map(function(i, e) {
            if (typeof e != 'undefined') {
              return $(e).attr("data-id");
            }
          }).get();
          $("#events_list a[href*='pipelineStageId']").each(function(i,e){
            var url = new URL(location.origin + $(e).attr('href'));
            var pipelineStageId = url.searchParams.get("pipelineStageId");
            if (pipelineStages.indexOf(pipelineStageId) == -1) $(e).removeAttr("href"); $(e).attr("nohref");
          });

        }

        $("body").on("click", "[data-application-file-download]", function (ev) {
          var url = $(this).attr("data-href");
          ev.preventDefault();  //stop the browser from following
          $.getJSON(url + "&check=1", function (data) {
            if (data.count == 1) {
              window.location.href = url;
            } else {
              new PNotify({
                title: '@uiTerms["msgApplicationAttachmentDeleted"]',
                icon: 'icon-info',
                type: 'info'
              });
            }

          });
        });
    </script>
  </div>
}


@*@{  
  stopwatch33.Stop();
  stopwatch3.Stop();

  Stopwatch stopwatch4 = new Stopwatch();

  stopwatch4.Start();}*@
<!-- #region assessments -->
  @*Stopwatch stopwatch4 = new Stopwatch();

  stopwatch4.Start();*@
@if (!isExpired && !isWithdrawn && isAccessAllowed && assessments.Count > 0)
{
  <div class="card-header bg-white header-elements-inline p-1 pl-0 ml-2 mr-2">
    <h4 class="card-title font-weight-semibold">
      @uiTerms["lblAssessments"]
    </h4>
    <div class="header-elements">
      <div class="list-icons">
      </div>
    </div>
  </div>
  if (assessments.Count > 0)
  {

    <div class="row">
      <div class="col-lg-6 m-2">
        <select id="assessments" class="form-control" style="width:100%"></select>
        <script>
          var $assessments = $("#assessments");
          var id_name = [];
          var c = 1;
          @foreach (var assessment in assessments)
          {
            <text>
          id_name.push({
            id: '@assessment.apasAssessmentId',
            name: '@assessment.apasAssessmentName' == '' ? "@uiTerms["lblAssessment"] " + c : '@assessment.apasAssessmentName',
            embedUrl: '@assessment.apasEmbedUrl'
          });
          c++;
            </text>
          }
          //console.log(id_name)
          @*var ids = [];
          @foreach (var assessment in assessments)
          {
            <text>
              ids.push('@assessment.apasAssessmentId');
            </text>
          }*@

          //GetAssessments(function() {

          //  $assessments.select2({ minimumResultsForSearch: Infinity });
          //  $assessments.off("select2:selecting").on("select2:selecting", function (e) {

          //    var data = e.params.args.data;
          //    //console.log(data);
          //    ShowAssessmentResults(data.id);
          //  });

          //  ShowAssessmentResults($assessments.select2("val"));

          //}, $assessments, ids, true);

          assessmentEmbedUrls = {};
          $assessments.select2({
            data: $.map(id_name,
              function (e) {
                var obj = {};
                obj.text = e.name; // replace name with the property used for the text
                obj.id = e.id;
                if (typeof e.embedUrl != 'undefined') {
                  obj.embedUrl = e.embedUrl;
                  assessmentEmbedUrls[obj.id] = { id: obj.id, embedUrl: obj.embedUrl };
                }

                return obj;
              }),
            placeholder: "",
            allowClear: false,
            minimumResultsForSearch: Infinity
          }).off("select2:selecting").on("select2:selecting", function (e) {
            if (typeof e != 'undefined' && e.params != null && e.params.args != null) {
              if (e.params != null && e.params.args != null) {
                var data = e.params.args.data;
                $("input[name='assessmentName']").val(data.text);
              }
            }

          });

          $assessments.trigger("select2:selecting");
          $("input[name='assessmentName']").val($assessments.select2("data")[0].text);
          //window.setTimeout(function (c) { if (typeof c != 'undefined') c(); }(callback), 100);

          $assessments.select2({ minimumResultsForSearch: Infinity });
            $assessments.off("select2:selecting").on("select2:selecting", function (e) {
              if (e.params != null && e.params.args != null) {
                var data = e.params.args.data;
                //console.log(data);
                ShowAssessmentResults(data.id);
              }
            });

            ShowAssessmentResults($assessments.select2("val"));

          function ShowAssessmentResults(id) {

            if (typeof assessmentEmbedUrls[id] != 'undefined') {
              window.setTimeout(function () { $("#assessmentsIframe").attr("src", assessmentEmbedUrls[id].embedUrl); }, 10);
              //$("#assessmentsIframe").show();
            }

            //$(".evaluation-user-details").addClass("d-none");
            //$(".evaluation-user-details[data-userid='" + id + "']").removeClass("d-none");
          }

          $assessments.trigger('select2:selecting');
        </script>
      </div>
    </div>
  }
  <div class="row">
    <div class="col-lg-12 m-2">
      @*@if (assessments.Count > 1)
        {*@
      <iframe onload="window.setTimeout(function () { $('#assessmentsIframe').removeClass('d-none');}, 1000)" width="100%" class="d-none" id="assessmentsIframe" frameBorder="0" style="height: 500px; border: 0;" src="about:blank"></iframe>

      @*}
        else
        {
          <iframe width="100%" frameBorder="0" style="height: 500px; border: 0;" src="@assessments[0].apasEmbedUrl"></iframe>
        }*@
    </div>
  </div>

}
<!-- #endregion assessments -->
<!--#region structured evaluations statistics-->
@if (isAccessAllowed && !isWithdrawn && !isExpired)
{
  if (evaluationForms != null && applicationEvaluationAnswersAllUsers != null && applicationEvaluationAnswersAllUsers.Count() > 0)
  {
    <div class="card-header bg-white header-elements-inline p-1 pl-0 ml-2 mr-2 " id="application_evaluations_forms_view_head">
      <h4 class="card-title font-weight-semibold">
        @uiTerms["lblStructuredEvaluation"]
      </h4>
      <div class="header-elements">
        <div class="list-icons">
        </div>
      </div>
    </div>

    <div class="card-body pt-0 border-0 p-0">
      @{
        #region structured evaluations fill rows
        //int applicationFormAllId = 0;
        var evaluationFormUsers = new List<dynamic>();
        var rows = new List<List<string>>();
        var rowsDetails = new Dictionary<string, List<List<string>>>();
        var column = -1;
        string answersJson = string.Empty;
        IEnumerable<dynamic> answersPerUser = null;
        var avgList = new List<string>();
        var mandatoryHtml = "<span class=\"text-danger\">&nbsp;*</span>";
        if (applicationEvaluationAnswersAllUsers != null)
        {
          var count = applicationEvaluationAnswersAllUsers.Select(x => x.ecId).Distinct().Count();
          foreach (var item in applicationEvaluationAnswersAllUsers.Select((value, i) => new { i, value }))
          {
            var user = new { id = item.value.lId, firstname = item.value.lFirstName, lastname = item.value.lLastName };
            if (evaluationFormUsers.IndexOf(user) == -1)
            {
              evaluationFormUsers.Add(user);
              column++;
              answersJson = Azure.DownloadString("evaluation-answers-details", item.value.aefGuid.ToString() + ".json");
              answersPerUser = (IEnumerable<dynamic>)JsonConvert.DeserializeObject(answersJson);
            }
            if (column == 0)
            {
              rows.Add(new List<string>(new string[]{ //(item.i+1).ToString(),
                                            item.value.ecIsMandatory == 0 ? item.value.ecCaption : item.value.ecCaption + mandatoryHtml,
                                            item.value.aeaRating.ToString() }));

              if (item.i == 0)
              {
                avgList.Add(item.value.aefAverageRating.ToString());

                rowsDetails.Add(user.id.ToString(), new List<List<string>>(){new List<string>(new string[] {
                                                //(item.i + 1).ToString(),
                                                item.value.ecIsMandatory == 0 ? item.value.ecCaption : item.value.ecCaption + mandatoryHtml,
                                                item.value.aeaRating.ToString(),
                                           answersPerUser.ToList().Any(x=>x.criterionId == item.value.ecId) ? answersPerUser.ToList().First(x=>x.criterionId == item.value.ecId).comment.ToString() : string.Empty})});
              }
              else
              {
                rowsDetails[user.id.ToString()].Add(new List<string>(new string[] {
                                                //(item.i + 1).ToString(),
                                                item.value.ecIsMandatory == 0 ? item.value.ecCaption : item.value.ecCaption + mandatoryHtml,
                                                item.value.aeaRating.ToString(),
                                           answersPerUser.ToList().Any(x=>x.criterionId == item.value.ecId)?answersPerUser.ToList().First(x=>x.criterionId == item.value.ecId).comment.ToString():string.Empty}));
              }
            }
            else
            {
              rows.ElementAt(item.i % count).Add(item.value.aeaRating.ToString());
              if (item.i % count == 0)
              {
                avgList.Add(item.value.aefAverageRating.ToString());

                rowsDetails.Add(user.id.ToString(),
                                new List<List<string>>(){new List<string>(new string[] {
                                                //((item.i % count) + 1).ToString(),
                                                item.value.ecIsMandatory == 0 ? item.value.ecCaption : item.value.ecCaption + mandatoryHtml,
                                                item.value.aeaRating.ToString(),
                                           answersPerUser.ToList().Any(x=>x.criterionId == item.value.ecId)? answersPerUser.ToList().First(x=>x.criterionId == item.value.ecId).comment.ToString():string.Empty})});
              }
              else
              {
                rowsDetails[user.id.ToString()].Add(new List<string>(new string[] {
                                                //((item.i % count) + 1).ToString(),
                                                item.value.ecIsMandatory == 0 ? item.value.ecCaption : item.value.ecCaption + mandatoryHtml,
                                                item.value.aeaRating.ToString(),
                                            answersPerUser.ToList().Any(x=>x.criterionId == item.value.ecId)?answersPerUser.ToList().First(x=>x.criterionId == item.value.ecId).comment.ToString():string.Empty}));
              }

            }
          }
          var lastRow = new List<string>(new string[] { //string.Empty,
                                                                    string.Empty });
          lastRow.AddRange(avgList);
          rows.Add(lastRow);
        }
        var average = avgList.Count > 0 ? Math.Round(avgList.Average(x => Decimal.Parse(x)), 1) : 0;
        var averageStr = $"{average.ToString()}/5";//.ToString(new CultureInfo("en-US")).Replace(".0","").Replace(",0","");
        #endregion structured evaluations fill rows
      }
      <div id="application_evaluations_forms_view_area" class="m-2 font-size-lg">
        <div class="row mb-3">
          <div class="col-lg-12">
            <ul class="nav nav-tabs nav-tabs-highlight mb-0">
              <li class="nav-item">
                <a href="#evaluation-forms-tab1" class="nav-link active"
                   data-toggle="tab">@uiTerms["lblGrading"]<span class="badge badge-success badge-pill ml-2">@averageStr</span></a>
                </li>
                <li class="nav-item">
                  <a href="#evaluation-forms-tab2" class="nav-link"
                     data-toggle="tab">@uiTerms["lblGradingPerUser"]</a>
                  </li>
                </ul>
                <div class="tab-content">
                  <div class="tab-pane fade show active" id="evaluation-forms-tab1">
                    <div class="table-responsive table-scrollable">
                      <table class="table table-bordered table-striped table-hover">
                        <thead>
                          <tr>
                            @*<th>#</th>*@
                            <th>@uiTerms["lblEvaluationCriterion"]</th>
                            @foreach (var item in evaluationFormUsers)
                            {
                              <th>
                                <abbr title="@item.firstname @item.lastname" data-toggle="tooltip"
                                      class="initialism">@Utils.FullNameInitials(item.firstname, item.lastname).ToUpper()</abbr>
                                    </th>
                                  }
                          </tr>
                        </thead>
                        <tbody>
                          @foreach (var row in rows)
                          {
                            <tr>
                              @foreach (var col in row.Select((value, i) => new { i, value }))
                              {
                                <td@(col.i>0?" class=score":"")>
                                  @Html.Raw(col.value.ToString())
                                  </td>
                                }
                          </tr>
                        }
                        </tbody>
                      </table>
                    </div>
                  </div>
                  <div class="tab-pane fade" id="evaluation-forms-tab2">
                    <div class="row">
                      <div class="col-lg-6 m-2">
                        <select id="evaluation-form-details-per-user" class="form-control" style="width:100%">
                          @foreach (var user in evaluationFormUsers.Select((value, i) => new { i, value }))
                          {

                            <option value="@user.value.id">@user.value.firstname @user.value.lastname&nbsp;(@avgList.ElementAt(user.i).ToString()/5)</option>
                          }
                        </select>
                        <script>
                          $("#evaluation-form-details-per-user").select2({ minimumResultsForSearch: Infinity });
                          $("#evaluation-form-details-per-user").on("select2:selecting", function (e) {
                            if (e.params != null && e.params.args != null) {
                              var data = e.params.args.data;
                              //console.log(data);
                              ShowEvaluationUserDetails(data.id);
                            }

                          });
                          function ShowEvaluationUserDetails(id) {
                            $(".evaluation-user-details").addClass("d-none");
                            $(".evaluation-user-details[data-userid='" + id + "']").removeClass("d-none");
                          }
                          ShowEvaluationUserDetails($("#evaluation-form-details-per-user").select2("val"));
                          //$("#evaluation-form-details-per-user").trigger('select2:selecting');
                        </script>
                      </div>
                    </div>
                    <div class="table-responsive table-scrollable">
                      <table class="table table-bordered table-striped table-hover">
                        <thead>
                          <tr>
                            @*<th>#</th>*@
                            <th>@uiTerms["lblEvaluationCriterion"]</th>
                            <th>@uiTerms["lblGrading"]</th>
                            <th>@uiTerms["lblCommentText"]</th>
                          </tr>
                        </thead>
                        <tbody>
                          @foreach (KeyValuePair<string, List<List<string>>> entry in rowsDetails)
                          {
                            foreach (var row in entry.Value)
                            {
                              <tr class="d-none evaluation-user-details" data-userid="@entry.Key">
                                @foreach (var col in row.Select((value, i) => new { i, value }))
                                {
                                  <td@(col.i==1?" class=score":"")>
                                    @Html.Raw(col.value.ToString())
                                    </td>
                                  }
                            </tr>
                          }
                        }
                        </tbody>
                      </table>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      }

      if (otherEvaluations_latestItem != null)
      {
        <div class="card-header bg-white header-elements-inline p-1 pl-0 ml-2 mr-2 " id="other_application_evaluations_forms_view_head">
          <h4 class="card-title font-weight-semibold">
            @uiTerms["lblStructuredEvaluationsInOtherJobs"]
          </h4>
          <div class="header-elements">
            <div class="list-icons">
            </div>
          </div>
        </div>
        <div class="card-body pt-0 border-0 p-0">
          <div id="other_application_evaluations_forms_view_area" class="m-2">
            <div class="row mb-3">
              <div class="col-lg-12">
                <div class="tab-content">
                  <div class="tab-pane fade show active" id="old-evaluation-forms-tab2">
                    <div class="row">
                      <div class="col-lg-6 m-2">
                        <select id="old-evaluation-form-details-per-user" class="form-control" style="width:100%">
                        </select>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
        <script>
          var initOtherEvaluations = function () {
            $.get("/data/evaluations-json?aid=@applicationId&cdId=@aCandidateId&m=0", function (r) {

              var $s = $("#old-evaluation-form-details-per-user");
              if (typeof r.data != 'undefined' && r.data.length) {
                $.map(r.data, function (e) {
                  $s.append("<option data-uid='"+e.lid+"' value='" + e.applicationid + "'>" + e.lfirstname + " " + e.llastname + "&nbsp;(" + e.avgrating + "/5)&nbsp;|&nbsp;" + unescape(e.jtitle) + "</option>");
                });

                $("#old-evaluation-form-details-per-user").select2({ minimumResultsForSearch: Infinity });
                $("#old-evaluation-form-details-per-user").on("select2:selecting", function (e) {
                  if (e.params != null && e.params.args != null) {
                    var data = e.params.args.data;
                    loadOtherEvaluations(data.id, $(data.element).attr("data-uid"));
                  }
                });
              }
            });
          }();

          function loadOtherEvaluations(dataId, uid) {
            if (typeof dataId == 'undefined') { dataId =@otherEvaluations_latestItem.applicationid; }
            if (typeof uid == 'undefined') { uid = @otherEvaluations_latestItem.lid; }

            $.get("/data/evaluations-json?aid=@applicationId&cdId=@aCandidateId&m=1&uid=" + uid +"&showid=" + dataId,
              function (r) {
                $("#oldEvaluationDetails").remove();
                $("#old-evaluation-forms-tab2").after(r);
              });
          };
          loadOtherEvaluations();
        </script>
      }
    }
<!--#endregion structured evaluations statistics-->

@if (videoInterviews.Count > 0 & !isExpired & !isWithdrawn & isAccessAllowed & !isBlindHiringEnabled)
{
  // var recentInterview = videoInterviews.Cast<dynamic>().First();
  var recentInterview = videoInterviews[0];

  <div id="video_answers"></div>
  <div class="card-header bg-white p-1 pl-0 ml-2 mr-2 ">
    <h4 class="card-title font-weight-semibold">
      @uiTerms["lblVideoInterview"]
    </h4>
  </div>

  <div class="card-body pb-2">

    @if (videoInterviews.Count > 1)
    {
      <div class="col-4">
        <a href="#" class="navbar-nav-link dropdown-toggle font-size-lg font-weight-bold pt-0 pl-0" data-toggle="dropdown">@uiTerms["lblSelectVideoInterview"]</a>
        <div class="dropdown-menu dropdown-menu-left">
          @foreach (var videoInterview in videoInterviews)
          {
            <a href="javascript:showVideoInterview('@videoInterview.aviGuid', 550, 460)" class="dropdown-item">@videoInterview.viName (@Utils.LocalDateTime(videoInterview.aviAnsweredDateTime, userPrefs.timeZoneId, userPrefs.uiLanguage).asMidDate)</a>
          }
        </div>
      </div>

    }

    <div class="row mb-2">
      <div class="col-12 alert alert-info border-0 mb-2">
        <span class="font-weight-semibold font-size-lg" id="video_interview_interviewName"></span>
        · απαντήθηκε στις <span class="font-weight-semibold" id="video_interview_answeredDateTime"></span>
      </div>
    </div>

    <div class="row">
      <div id="video_interview_sidebar" class="col-4">
      </div>
      <div id="video_interview_main" class="col-8">
        <div id="video_interview_video_player">
        </div>

        <div id="video_interview_notes">
        </div>
      </div>
    </div>

    <script>
showVideoInterview("@recentInterview.aviGuid", 550, 460);
    </script>
  </div>
}

@if (answers.Count > 0 & !isExpired & !isWithdrawn & isAccessAllowed)
{
  var answerTag = "";
  <div id="answers"></div>
  <div class="card-header bg-white p-1 pl-0 ml-2 mr-2 ">
    <h4 class="card-title font-weight-semibold">
      @uiTerms["lblAnswers"]
    </h4>
  </div>

  <div class="card-body font-size-lg pb-2">
    @{ var prevJobId = 0;}
    @foreach (var answer in answers)
    {
      if (prevJobId == 0 || prevJobId != @answer.jId)
      {
        <legend class="mt-1 pb-1">

          <div class="font-weight-bold font-size-lg">
            @answer.jTitle <span class="text-grey-400 pl-1 d-inline-block">@Utils.LocalDateTime(@answer.aCreatedDateTime, userPrefs.timeZoneId, language).asMidDateShortTime24</span>
          </div>
        </legend>

      }

      <div class="font-weight-semibold font-size-lg">
        @answer.qstCaption
      </div>

      <div class="mb-2 font-size-lg">
        @if (answer.qstType == 4 || answer.qstType == 5)
        {
          if (!String.IsNullOrEmpty(answer.aaText))
          {
            @Html.Raw(Utils.Linkify(Utils.RenderPlainText(answer.aaText)))
          }
          else
          {
            <div class="text-grey-600">@uiTerms["lblDidNotAnswer"]</div>
          }

        }
        else
        if (answer.qstType == 2)
        {
          if (string.IsNullOrEmpty(answer.aaText))
          {
            <div class="text-grey-600">@uiTerms["lblDidNotAnswer"]</div>
          }
          else
          {
            foreach (var option in answer.qstAnswers.Split(','))
            {

              if (answer.aaText.Contains(option.Trim()))
              {
                if (!String.IsNullOrEmpty(answer.qstSearchLabel))
                {
                  answerTag = answer.qstSearchLabel + ": " + option.Trim();
                }

                if (!String.IsNullOrEmpty(answerTag))
                {
                  <a href="~/filtered-applications?JobId=@result._source.jobId&answerTags=@HttpUtility.UrlEncode(answerTag)" class="mr-1 text-grey-800 border-bottom-1 border-grey-300">@option</a>
                }
                else
                {
                  <span class="mr-1">@option</span>
                }
              }
            }

          }

        }
        else if (answer.qstType == 3)
        {
          if (!String.IsNullOrEmpty(answer.qstSearchLabel))
          {
            answerTag = answer.qstSearchLabel + ": " + answer.aaText.Trim();
          }
          else
          {
            answerTag = "";
          }

          if (!string.IsNullOrEmpty(answerTag))
          {
            if (string.IsNullOrEmpty(answer.aaText))
            {
              <div class="text-grey-600">@uiTerms["lblDidNotAnswer"]</div>
            }
            else
            {
              <a href="~/filtered-applications?JobId=@result._source.jobId&answerTags=@HttpUtility.UrlEncode(answerTag)" class="text-grey-800 border-bottom-1 border-grey-300">@answer.aaText</a>
            }
          }
          else
          {
            if (string.IsNullOrEmpty(answer.aaText))
            {
              <div class="text-grey-600">@uiTerms["lblDidNotAnswer"]</div>
            }
            else
            {
              @answer.aaText
            }
          }

        }
        else if (answer.qstType == 1)
        {
          if (!String.IsNullOrEmpty(answer.qstSearchLabel))
          {
            if (answer.aaIsPositive == 1)
            {
              answerTag = answer.qstSearchLabel;
            }
            else
            {
              answerTag = "";
            }
          }

          if (!String.IsNullOrEmpty(answerTag))
          {
            <a href="~/filtered-applications?JobId=@result._source.jobId&answerTags=@HttpUtility.UrlEncode(answerTag)" class="text-grey-800 border-bottom-1 border-grey-300">@(answer.aaIsPositive == 1 ? uiTerms["lblYes"] : uiTerms["lblNo"])</a>
          }
          else
          {
            @(answer.aaIsPositive == 1 ? uiTerms["lblYes"] : uiTerms["lblNo"])
          }

        }
      </div>

      prevJobId = answer.jId;
    }
  </div>
}

<div id="profile"></div>
@if (!String.IsNullOrEmpty(result._source.executiveSummary) & !isExpired & !isWithdrawn & isAccessAllowed)
{
  <div class="card-header bg-white p-1 pl-0 ml-2 mr-2 ">
    <h4 class="card-title font-weight-semibold">
      @uiTerms["lblSummary"]
    </h4>
  </div>

  <div class="card-body font-size-lg">
    @result._source.executiveSummary
  </div>
}

@if (result._source.employers.Length > 0 & !isExpired & !isWithdrawn & isAccessAllowed)
{
  <div class="card-header bg-white p-1 pl-0  ml-2 mr-2">
    <h4 class="card-title font-weight-semibold">
      @uiTerms["lblWorkExperience"]
    </h4>
  </div>

  if (result._source != null && result._source.workHistory != null)
  {
    <div class="card-body font-size-base">
      @foreach (var position in result._source.workHistory)
      {

        <div class="row">
          <div class="col-2 font-size-lg">
            @if ((!isBlindHiringEnabled) | (isBlindHiringEnabled & customerPrefs.blindHiringHideDates == 0))
            {
              <span>
                @position.startDate.Split('-')[0] - @(!String.IsNullOrEmpty(position.EndDate) ? position.EndDate.Split('-')[0] : "" )
              </span>
            }
          </div>
          <div class="col-10 font-size-lg">
            <span class="font-weight-semibold font-size-lg">@position.title</span>
            @(!String.IsNullOrEmpty(position.title) & !String.IsNullOrEmpty(position.employer) ? "@" : "")
            @if (!String.IsNullOrEmpty(position.employer))
            {
              <span class="font-weight-semibold font-size-lg"><a class="text-grey-800 border-bottom-1 border-grey-300" href="~/filtered-applications?JobId=@result._source.jobId&employersTxt=@Utils.UrlEncode(position.employer.Replace("&"," "))">@position.employer</a></span>
            }

            @if (showHistoryJobPositionDescription == 1)
            {
              <div class="font-size-lg mb-2">
                @if (isBlindHiringEnabled & customerPrefs.blindHiringHideDates == 1)
                {
                  @Html.Raw(Utils.RenderPlainText(Utils.RemoveYears(position.description)))

                }
                else
                {
                  @Html.Raw(Utils.RenderPlainText(position.description))
                }
              </div>
            }
          </div>
        </div>

      }
      <div class="row">
        <div class="col-12">
          <a href="~/filtered-applications?JobId=@result._source.jobId&jobExperienceType=@Utils.UrlEncode(result._source.jobExperienceType)"><span class="font-size-base badge badge-primary bg-cerulean">@Utils.GetExtTerm(result._source.jobExperienceType, uiTerms)</span></a>
          @if (!String.IsNullOrEmpty(result._source.currentManagementLevel))
          {
            <a href="~/filtered-applications?JobId=@result._source.jobId&currentManagementLevel=@Utils.UrlEncode(result._source.currentManagementLevel)"><span class="font-size-base badge badge-primary bg-cerulean">@Utils.GetExtTerm(result._source.currentManagementLevel + "_long", uiTerms)</span></a>
          }

          @if (result._source.executiveType != "none" && result._source.executiveType != "general")
          {
            <a href="~/filtered-applications?JobId=@result._source.jobId&executiveType=@Utils.UrlEncode(result._source.executiveType)"><span class="font-size-base badge badge-primary bg-cerulean">@Utils.GetExtTerm(result._source.executiveType, uiTerms)</span></a>
          }
        </div>
      </div>
    </div>
  }
}

@if (result._source.schoolTypes.Length > 0 & !isExpired & !isWithdrawn & isAccessAllowed)
{

  <div class="card-header bg-white p-1 pl-0 ml-2 mr-2 ">
    <h4 class="card-title font-weight-semibold">
      @uiTerms["lblEducation"]
    </h4>
  </div>

  <div class="card-body font-size-lg">

    @if (result._source.educationHistory != null)
    {
      foreach (var item in result._source.educationHistory)
      {

        <div class="row mb-2">
          <div class="col-2 font-size-lg">
            @if ((!isBlindHiringEnabled) | (isBlindHiringEnabled & customerPrefs.blindHiringHideDates == 0))
            {
              <span>
                @(!String.IsNullOrEmpty(item.startDate) ? item.startDate.Split('-')[0] : " " )
                @(!String.IsNullOrEmpty(item.startDate) & !String.IsNullOrEmpty(item.endDate) ? "-" : "")
                @(!String.IsNullOrEmpty(item.startDate) ? item.endDate.Split('-')[0] : " ")
              </span>
            }
          </div>
          <div class="col-10 font-size-lg">
            <span class="font-weight-semibold font-size-lg">@item.degreeName</span>
            @(!String.IsNullOrEmpty(item.degreeName) & !String.IsNullOrEmpty(item.schoolName) ? "@" : "")

            @if ((!isBlindHiringEnabled) | (isBlindHiringEnabled & customerPrefs.blindHiringHideSchoolNames == 0))
            {
              <span class="font-weight-semibold font-size-lg">@item.schoolName</span>
            }
          </div>
        </div>

      }
    }

    @if (result._source.degreeTypes != null)
    {
      foreach (var degreeType in result._source.degreeTypes)
      {
        <a href="~/filtered-applications?JobId=@result._source.jobId&degreeTypes=@Utils.UrlEncode(degreeType)"><span class="font-size-base badge badge-cerulean bg-cerulean">@Utils.GetExtTerm(degreeType, uiTerms)</span></a>
      }
    }

    @foreach (var schoolType in result._source.schoolTypes)
    {
      if (schoolType != "UNSPECIFIED")
      {
        <a href="~/filtered-applications?JobId=@result._source.jobId&schoolTypes=@Utils.UrlEncode(schoolType)"><span class="font-size-base badge badge-cerulean bg-cerulean">@Utils.GetExtTerm(schoolType, uiTerms)</span></a>
      }

    }
  </div>
}

@if (result._source.trainingHistory != null && result._source.trainingHistory.Length > 0 & !isExpired & !isWithdrawn & isAccessAllowed)
{
  <div class="card-header bg-white p-1 pl-0  ml-2 mr-2">
    <h4 class="card-title font-weight-semibold">
      @uiTerms["lblTrainingHistory"]
    </h4>
  </div>

  <div class="card-body font-size-base">
    @foreach (var item in result._source.trainingHistory)
    {
      <div class="row">
        <div class="col-2 font-size-lg">
          @if ((!isBlindHiringEnabled) | (isBlindHiringEnabled & customerPrefs.blindHiringHideDates == 0))
          {
            <span>
              @(!String.IsNullOrEmpty(item.endDate) ? item.endDate.Split('-')[0] : " " )
            </span>
          }
        </div>
        <div class="col-10 font-size-lg">
          <ul class="pl-2 m-0">
            <li class="l-0 m-0">
              <span class="font-weight-semibold">@item.entity</span>
              <span class="font-size-lg mb-2">
                @if (isBlindHiringEnabled & customerPrefs.blindHiringHideDates == 1)
                {
                  @Utils.RemoveYears(item.description)
                }
                else
                {
                  @item.description
                }
              </span>
            </li>
          </ul>
        </div>
      </div>
    }
  </div>
}

@if (result._source.licencesAndCertifications != null && result._source.licencesAndCertifications.Length > 0 & !isExpired & !isWithdrawn & isAccessAllowed)
{
  <div class="card-header bg-white p-1 pl-0  ml-2 mr-2">
    <h4 class="card-title font-weight-semibold">
      @uiTerms["lblLicencesAndCertifications"]
    </h4>
  </div>

  <div class="card-body font-size-base">
    @foreach (var item in result._source.licencesAndCertifications)
    {
      <div class="row">
        <div class="col-2 font-size-lg">
          @if ((!isBlindHiringEnabled) | (isBlindHiringEnabled & customerPrefs.blindHiringHideDates == 0))
          {
            <span>
              @(!String.IsNullOrEmpty(item.validFrom) ? item.validFrom.Split('-')[0] : " " )
              @(!String.IsNullOrEmpty(item.validFrom) & !String.IsNullOrEmpty(item.validTo) ? "-" : "")
              @(!String.IsNullOrEmpty(item.validTo) ? item.validTo.Split('-')[0] : " " )
            </span>
          }
        </div>
        <div class="col-10">
          <span class="font-weight-semibold font-size-lg">@item.name</span>
        </div>
      </div>
    }
  </div>
}

@if (result._source.languages != null && result._source.languages.Length > 0 & !isExpired & !isWithdrawn & isAccessAllowed)
{
  <div class="card-header bg-white p-1 pl-0  ml-2 mr-2">
    <h4 class="card-title font-weight-semibold">
      @uiTerms["lblLanguages"]
    </h4>
  </div>

  <div class="card-body font-size-base">

    @foreach (var lang in result._source.languageDetails)
    {
      <div class="row mb-1">
        <div class="col-2 font-size-lg">
          <a href="~/filtered-applications?JobId=@result._source.jobId&languages=@lang.languageCode"><span class="font-size-base badge badge-primary bg-cerulean">@Utils.GetExtTerm(lang.languageCode, uiTerms)</span></a>
        </div>
        @if (lang.languageCode != "el")
        {
          <div class="col-10 font-size-lg">
            @lang.comments
          </div>
        }
      </div>

    }
  </div>
}

@if (result._source.skills != null && result._source.skills.Length > 0 & !isExpired & !isWithdrawn & isAccessAllowed)
{
  <div class="card-header bg-white p-1 pl-0  ml-2 mr-2">
    <h4 class="card-title font-weight-semibold">
      @uiTerms["lblSkills"]
    </h4>
  </div>

  <div class="card-body">
    @if (!String.IsNullOrEmpty(result._source.qualificationsSummary))
    {
      <div class="mb-2 font-size-lg">
        @foreach (var line in result._source.qualificationsSummary.Split("\r\n".ToCharArray()))
        {
          <div>
            @if (!isBlindHiringEnabled)
            {
              @line
            }
            else
            {
              @Utils.RemoveYears(line)
            }
          </div>
        }
      </div>

    }

    <div class="font-size-sm" style="line-height:230%">
      @foreach (var skill in result._source.skills)
      {
        <a href="~/filtered-applications?JobId=@result._source.jobId&skills=@skill"><span class="font-size-sm badge badge-light">@skill</span></a>
      }
    </div>
  </div>

}

@if (result._source.achievements != null && result._source.achievements.Length > 0 & !isExpired & !isWithdrawn & isAccessAllowed)
{
  <div class="card-header bg-white p-1 pl-0  ml-2 mr-2">
    <h4 class="card-title font-weight-semibold">
      @uiTerms["lblAchievements"]
    </h4>
  </div>

  <div class="card-body font-size-lg">
    <ul class="font-size-lg">
      @foreach (var item in result._source.achievements)
      {
        if (isBlindHiringEnabled & customerPrefs.blindHiringHideDates == 1)
        {
          <li>@Utils.RemoveYears(item.description)</li>
        }
        else
        {
          <li>@item.description</li>
        }
      }
    </ul>
  </div>
}

@if (!String.IsNullOrEmpty(result._source.coverLetter) & !isExpired & !isWithdrawn & isAccessAllowed & !isBlindHiringEnabled)
{
  <div id="coverletter"></div>
  <div class="card-header bg-white p-1 pl-0  ml-2 mr-2">
    <h4 class="card-title font-weight-semibold">
      @uiTerms["lblCoverLetter"]
    </h4>
  </div>

  <div class="card-body">
    <div class="font-size-lg" style="overflow-y:auto;overflow-x: hidden;max-height: 350px;">
      @foreach (var paragraph in result._source.coverLetter.Split("\r\n".ToCharArray()))
      {
        <div>@paragraph</div>
      }
    </div>
  </div>
}

@if (result._source.hasEmailBody != null && result._source.hasEmailBody == 1 & !isExpired & !isWithdrawn & isAccessAllowed & !isBlindHiringEnabled)
{
  <div class="card-header bg-white p-1 pl-0  ml-2 mr-2 ">
    <h4 class="card-title font-weight-semibold">
      @uiTerms["lblEmailBody"]
    </h4>
  </div>
  <div class="card-body">
    <div id="email_body" class="font-size-lg" style="overflow-y: auto;overflow-x: hidden;max-height: 350px;">
      <script>
  function resizeIframeEmailBody(obj) {
    var iframe = obj, iframedoc = iframe.contentDocument || iframe.contentWindow.document;
    $.get("/data/email-body?applicationId=" + "@result._id", function (data) {
      iframedoc.body.innerHTML = data;
      obj.style.height = (obj.contentDocument.body.scrollHeight + 30) + 'px';
    });
  }
      </script>
      <iframe style="width:100%;" id="email_body_frame" class="col-lg-12 border-0" marginwidth="0" marginheight="0" scrolling="no"
              src="about:blank" data-onload="resizeIframeEmailBody(this);"></iframe>
      <script>
        window.setTimeout(function () {
          var $iframe = $("#email_body_frame");
          $iframe.attr("onload", $iframe.attr("data-onload")).trigger('load');
          $iframe.removeAttr("data-onload");
        }, 33);
      </script>
    </div>
  </div>
}

@if (!isExpired & !isWithdrawn & isAccessAllowed & !isBlindHiringEnabled)//applicationFileAttachments != null && applicationFileAttachments.Count > 0 &&
{
  <div id="application_file_attachments_view" class="@(applicationFileAttachments != null && applicationFileAttachments.Count > 0 ? "" : "d-none")">
    <div class="card-header bg-white p-1 pl-0  ml-2 mr-2 mb-2">
      <h4 class="card-title font-weight-semibold">
        @uiTerms["lblApplicationAttachments"] (<span data-id="upload_files_view_count">@applicationFileAttachments.Count</span>)
      </h4>
    </div>

    <div class="card-body pl-2 pr-2 pt-0" id="upload_files_view">
      @*<div class="table-responsive table-scrollable">
        <table class="table table-bordered table-striped table-hover">
            <tbody>*@
      <ul class="font-size-lg">
        @foreach (var attachment in applicationFileAttachments)
        {
          @PageHelpers.ApplicationFileAttachmentViewRow(attachment, language)
        }
      </ul>
      @*</tbody>
            </table>
        </div>*@
    </div>
  </div>
}

@if (!isExpired & !isWithdrawn & isAccessAllowed & !isBlindHiringEnabled)
{
  <div id="resume">
  </div>

  <div class="card-header bg-white header-elements-inline p-1 pl-0  ml-2 mr-2">
    <h4 class="card-title font-weight-semibold">
      @uiTerms["lblResume"]
    </h4>
    @if (canDownloadResume)
    {
    <div class="header-elements">
      <div class="btn-group">
        @if (result._source.parsedCvMimeType == "application/pdf")
        {
          <a class="btn btn-labeled border-blue-800 font-weight-semibold text-blue-800" role="button" href="~/data/application-cv-download?uid=@result._source.applicationGuid&format=original">@uiTerms["btnDownloadResume"] (pdf)</a>
        }
        else
        {
          <a class="btn btn-labeled border-blue-800 text-blue-800" role="button" href="~/data/application-cv-download?uid=@result._source.applicationGuid&format=pdf">@uiTerms["btnDownloadResume"] (pdf)</a>
        }

        @if (result._source.parsedCvMimeType != "application/pdf")
        {
          <button type="button" class="btn  text-blue-700 dropdown-toggle border-blue-800 " data-toggle="dropdown"></button>
          <div class="dropdown-menu dropdown-menu-right">
            <div><a href="~/data/application-cv-download?uid=@result._source.applicationGuid&format=original" class="dropdown-item">@uiTerms["btnDownloadResume"] (@Path.GetExtension(result._source.parsedCvFileName))</a></div>
          </div>
        }
      </div>
    </div>
    }
  </div>
  <div class="card-body p-0 ">
    <iframe style="width:100%;" id="cv_pane" class="col-lg-12 border-0" marginwidth="0" marginheight="0" scrolling="no" src="~/data/application-cv-preview?uid=@result._source.applicationGuid&vo=@simplifiedResumeView" onload="resizeIframe(this);"></iframe>
  </div>

}

@if (consents != null && consents.Count > 0 & !isExpired & !isWithdrawn & isAccessAllowed)
{
  <div class="card-header bg-white p-1 pl-0 ml-2 mr-2 ">
    <h4 class="card-title font-weight-semibold">
      @uiTerms["lblConsents"]
    </h4>
  </div>

  <div class="card-body font-size-base">
    @foreach (var item in consents)
    {
      <div class="row mb-2">
        <div class="col-1">
          <span class="@(item.acnsIsAccepted ==  1 ? "text-teal icon-checkmark3" : "text-danger icon-cross2")"></span>
        </div>
        <div class="col-11">
          <span class="font-weight-semibold font-size-lg">@Html.Raw(item.cnsText)</span>
        </div>
      </div>
    }
  </div>
}

@if (isExpired | isWithdrawn | isAccessAllowed == false)
{
  <div style="height:800px">
  </div>
}

@*
  <div class="modal fade" id="confirm-delete" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
          <h4 class="modal-title" id="myModalLabel">Confirm Delete</h4>
        </div>
        <div class="modal-body">
          <p>Πρόκειται να διαγράψετε αυτό το σχόλιο, η ενέργεια δεν μπορεί να αναιρεθεί.</p>
          <p>Επιθυμείτε σίγουρα να προχωρήσετε;</p>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-default" data-dismiss="modal">Άκυρο</button>
          <button type="button" class="btn btn-danger btn-ok">Διαγραφή</button>
        </div>
      </div>
    </div>
  </div>

  <script>
      $('#confirm-delete').on('click', '.btn-ok', function (e) {
          var $modalDiv = $(e.delegateTarget);
          var id = $(this).data('recordId');
          $.ajax({ url: '/delete-comment?uid=' + id, type: 'POST' });
          // $.post('/api/record/' + id).then()
          new PNotify({
              title: 'Η αξιολόγηση διαγράφτηκε με επιτυχία',
              icon: 'icon-checkmark3',
              type: 'success'
          });

          $modalDiv.addClass('loading');
          setTimeout(function () {
              $modalDiv.modal('hide').removeClass('loading');
          }, 1000);

      });
      $('#confirm-delete').on('show.bs.modal', function (e) {
          var data = $(e.relatedTarget).data();
          $('.title', this).text(data.recordTitle);
          $('.btn-ok', this).data('recordId', data.recordId);
          var commentDeleted = false;
      });

      $("#confirm-delete").on("hidden.bs.modal", function () { // any time a modal is hidden
          var urlReplace = window.location.toString().split('#', 1)[0];
          history.pushState(null, null, urlReplace); // push url without the hash as new history item
          showApplication(@applicationId);

      });
  </script>
*@
<div>
  <ul class="fab-menu fab-menu-bottom-right fab-menu-fixed">
    <li>
      <a href="#" class="fab-menu-btn btn bg-blue btn-float rounded-round btn-icon">
        <i class="fab-icon-open icon-move-up"></i>
        <i class="fab-icon-close icon-cross2"></i>
      </a>
    </li>
  </ul>
</div>

<!-- Modal -->
<div class="modal fade" id="deleteApplicationModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">@uiTerms["lblDeleteApplication"]</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        @uiTerms["msgConfirmDeleteApplication"]
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-light border-0 font-weight-semibold" data-dismiss="modal">@uiTerms["btnCancel"]</button>
        <button type="button" class="btn btn-danger font-weight-semibold">@uiTerms["lblDelete"]</button>
      </div>
    </div>
  </div>
</div>

<script>
    $('#deleteApplicationModal').on('show.bs.modal', function (e) {
      applicationUid = $(e.relatedTarget).data('uid');
      applicationFullName = $(e.relatedTarget).data('fullName');
      jobTitle = $(e.relatedTarget).data('jobTitle');
      $('#deleteApplicationModal .modal-body').html('@uiTerms["msgConfirmDeleteApplication"]');
      $('#deleteApplicationModal .modal-body').html($('#deleteApplicationModal .modal-body').html().replace('{0}', '<strong>@result._source.fullName</strong>').replace('{1}', '<strong>@result._source.jobTitle</strong>'))

    });

    $('#deleteApplicationModal .btn-danger').click(function () {
      $('#deleteApplicationModal').modal('hide');
      $.post("/data/delete-application?uid=@result._source.applicationGuid&lang=@userPrefs.uiLanguage", function (data) {
        PNotify.removeAll();
        var result = data.result;
        if (result == "Success") {
          window.location = "/applications?jobId=@result._source.jobId&pipelineStageId=@result._source.pipelineStageId";
        }
        else {
          new PNotify({
            title: data.errorText,
            type: 'error'
          });
        }
      });

      new PNotify({
        title: '@uiTerms["msgUpdating"]',
        icon: 'icon-info',
        type: 'info'
      });
    });
</script>

@if (isAccessAllowed){
<script>
    $.post("/data/event-view-application?loginUid=@loginGuid&applicationUid=@result._source.applicationGuid", function (data) {});
</script>
}

@*#region delete comment*@
<div class="modal fade" id="deleteCommentModal" tabindex="-1" role="dialog" aria-labelledby="deleteCommentModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="deleteCommentModalLabel">@uiTerms["lblDeleteComment"]</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        @uiTerms["msgConfirmDeleteComment"]
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-light border-0 font-weight-semibold" data-dismiss="modal">@uiTerms["btnCancel"]</button>
        <button type="button" class="btn btn-danger font-weight-semibold">@uiTerms["lblDelete"]</button>
      </div>
    </div>
  </div>
</div>
<script>
    var commentUid, createdBy;
    $(function () {
      var $deleteCommentModal =  $('#deleteCommentModal');
      $deleteCommentModal.on('show.bs.modal', function (e) {
        commentUid = $(e.relatedTarget).data('uid');
        createdBy = $(e.relatedTarget).data('createdby');
        $deleteCommentModal.find('.modal-body').html('@uiTerms["msgConfirmDeleteComment"]');
        //$deleteCommentModal.find('.modal-body').html($deleteCommentModal.find('.modal-body').html().replace('{0}','<strong>' + jobTitle + '</strong>'))

      });

      $deleteCommentModal.find('.btn-danger').click(function () {
        $deleteCommentModal.modal('hide');
        $.post("/data/delete-comment?createdby=" + createdBy+"&uid=" + commentUid + "&lang=@userPrefs.uiLanguage", function (data) {
          PNotify.removeAll();
          var result = data.result;
          if (result == "Success") {

            showApplication(@applicationId);
            new PNotify({
              title: '@uiTerms["msgCommentDeleted"]',
              icon: 'icon-checkmark3',
              type: 'success'
            });

          } else {
            new PNotify({
              title: data.errorText,//.replace("{0}", "<strong>" + data.errorText + "</strong>"),
              type: 'error'
            });
          }
        });

        new PNotify({
          title: '@uiTerms["msgUpdating"]',
          icon: 'icon-info3',
          type: 'info'

        });
      });
    });
</script>
@*#endregion delete comment*@

@*#region delete evaluation*@
<div class="modal fade" id="deleteEvaluationModal" tabindex="-1" role="dialog" aria-labelledby="deleteEvaluationModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="deleteEvaluationModalLabel">@uiTerms["lblDeleteEvaluation"]</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        @uiTerms["msgConfirmDeleteEvaluation"]
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-light border-0 font-weight-semibold" data-dismiss="modal">@uiTerms["btnCancel"]</button>
        <button type="button" class="btn btn-danger font-weight-semibold">@uiTerms["lblDelete"]</button>
      </div>
    </div>
  </div>
</div>
<script>
    var evaluationUid, createdBy, applicationId, candidateId;
    $(function () {
      var $deleteEvaluationModal =  $('#deleteEvaluationModal');
      $deleteEvaluationModal.on('show.bs.modal', function (e) {
        evaluationUid = $(e.relatedTarget).data('uid');
        createdBy = $(e.relatedTarget).data('createdby');
        applicationId = $(e.relatedTarget).data('applicationid');
        candidateId = $(e.relatedTarget).data('candidateid');
        $deleteEvaluationModal.find('.modal-body').html('@uiTerms["msgConfirmDeleteEvaluation"]');
        //$deleteEvaluationModal.find('.modal-body').html($deleteEvaluationModal.find('.modal-body').html().replace('{0}','<strong>' + jobTitle + '</strong>'))

      });

      $deleteEvaluationModal.find('.btn-danger').click(function () {
        $deleteEvaluationModal.modal('hide');
        $.post("/data/delete-evaluation",
          { createdby: createdBy, uid : evaluationUid, lang:'@userPrefs.uiLanguage', candidateId: candidateId, applicationId: applicationId },
          function (data) {
          PNotify.removeAll();
          var result = data.result;
          if (result == "Success") {

            showApplication(@applicationId);
            new PNotify({
              title: '@uiTerms["msgEvaluationDeleted"]',
              icon: 'icon-checkmark3',
              type: 'success'
            });

          } else {
            new PNotify({
              title: data.errorText,//.replace("{0}", "<strong>" + data.errorText + "</strong>"),
              type: 'error'
            });
          }
        });

        new PNotify({
          title: '@uiTerms["msgUpdating"]',
          icon: 'icon-info3',
          type: 'info'

        });
      });
    });
</script>
@*#endregion delete evaluation*@

<script>
  var defaultCommentText = "";
  var defaultEvaluationText = "";

    function SaveInlineEdit(elName) {
      var $el = $(document.getElementById(elName));
      var textAreaValue = $el.next("textarea").val();
      if (textAreaValue == "") return false;
      var text = "<div>" + $.trim(textAreaValue).split("\n").join("</div><div>") + "</div>";
      if (text === $.trim(defaultCommentText)) {

        new PNotify({
          title: '@uiTerms["msgCommentHasNotBeenModifiedYet"]',
          icon: 'icon-info3',
          type: 'info'
        });

        return false;
      }
      var Uid = $el.data("uid");

      $("#edit_comment_form_submit").prop('disabled', true);
      $('#edit_comment_form_submit').html("<i class='fa fa-spinner fa-spin'></i>  @uiTerms["lblProcessing"]");

      $.post("/data/edit-comment", { applicationId: '@applicationId', candidateId: '@aCandidateId', comment: $.trim(textAreaValue), Uid: Uid },
        function (data) {
          PNotify.removeAll();
          var result = data.result;
          if (result == "Success") {
            //showApplication(applicationId);

            var $caller = $(document.getElementById(elName + "Caller"));
            if ($caller.attr("opened") == 1) {
              $el.html("<div>" + $el.next("textarea").val().split("\n").join("</div><div>") + "</div>");
              defaultCommentText = "";
              CloseInlineEdit($el, $caller);
            }
            new PNotify({
              title: '@uiTerms["msgCommentEdited"]',
              icon: 'icon-checkmark3',
              type: 'success'
            });

          } else {
            $("#edit_comment_form_submit").prop('disabled', false);
            $('#edit_comment_form_submit').html('@uiTerms["btnSave"]');
            new PNotify({
              title: data.errorText,
              type: 'error'
            });
          }
        });

      new PNotify({
        title: '@uiTerms["msgUpdating"]',
        icon: 'icon-info',
        type: 'info'
      });
    }

    function CancelInlineEdit(elName) {
      var $el = $(document.getElementById(elName));
      if ($.trim(defaultCommentText) != "" && typeof $el.attr("comment") !== 'undefined') { $el.html(defaultCommentText); }
      if ($.trim(defaultEvaluationText) != "" && typeof $el.attr("evaluation") !== 'undefined') { $el.html(defaultEvaluationText); }
      CloseInlineEdit($el, $(document.getElementById(elName + "Caller")));
    }

  function CloseInlineEdit($el, $caller) {
    //console.log("CloseInlineEdit" + $el.attr("id") + " Caller: " + $caller.attr("id"))
    $el.parent().find("[editcomment]").remove();
    $el.parent().find("[editevaluation]").remove();
    $caller.removeAttr("opened");
    $el.off("click");
    $el.next("textarea").fadeOut("fast", function () {
      $el.next("textarea").remove();
      $el.next("textarea[copied]").remove();
      defaultCommentText = "";
      defaultEvaluationText = "";
      $el.show();
    });
  }

  function EditCommentInline(elName) {

      var $el = $(document.getElementById(elName));
      $("[data-edit]").not($el).each(function (i, e) { CancelInlineEdit(e.id) });
      var $caller = $(document.getElementById(elName + "Caller"));
      if ($caller.attr("opened") == 1) return false;
      $(".event_item[data-edit]:hidden").show();
      $el.inlineEdit({
        onKeyDown: function () {},
        onFocus: function (val) {
          defaultCommentText = "";
          if ($caller.attr("opened")=="1") return false;

          $("textarea[copied]").remove();
          $('[cancelcommentedit]').each(function (i, e) { $(e).click(); });

          $caller.attr("opened","1");
          $el.parent().find("[editcomment]").remove();

          if (!$el.next("textarea [copied]").length) {
            defaultCommentText = $.trim($el.html());
            $el.next("textarea").val(defaultCommentText.toString().replace(/<div>/g, '').replace(/<\/div>/g, '\r\n'));
            $el.next("textarea").attr("copied", 1);
          }
          $el.next("textarea").after(
            '<div class="form-group row mt-2" editcomment>' +
            '<div class="col-12 text-right">' +
            ' <button cancelcommentedit type="button" onclick="CancelInlineEdit(\'' + elName + '\');return false;" class="btn btn-light border-0">@uiTerms["btnCancel"]</button>' +
            ' <button id="edit_comment_form_submit" onclick="return SaveInlineEdit(\'' + elName + '\');"  class="btn bg-teal-400 ml-1 font-weight-semibold">@uiTerms["btnSave"]</button>' +
            ' </div>' +
            '</div>');

        },
        onUpdate: function (val) {

          if ($caller.attr("opened") == 1) {
            $el.html("<div>" + val.split("\n").join("</div><div>") + "</div>");
          } else {
            $el.html(defaultCommentText);
          }
        },
        maxLength: 10000,
        inputType: 'textarea'
      });

      window.setTimeout(function () {
        $el.prop({tabindex:1}).click();
        $el.trigger("focus");
      }, 10);
  }

  function EditEvaluationInline(elName) {

    var $el = $(document.getElementById(elName));
    $("[data-edit]").not($el).each(function (i, e) { CancelInlineEdit(e.id) });
    var $caller = $(document.getElementById(elName + "Caller"));
    //console.log("EditEvaluationInline(" + elName + ") $caller.attr(\"opened\")=" + $caller.attr("opened"))
    if ($caller.attr("opened") == "1") return false;
      $(".event_item[data-edit][evaluation]:hidden").show();
      $el.inlineEdit({
        onKeyDown: function () {},
        onFocus: function (val) {
          defaultEvaluationText = "";
          if ($caller.attr("opened")=="1") return false;

          $("textarea[copied]").remove();
          $('[cancelevaluationedit]').each(function (i, e) { $(e).click(); });

          $caller.attr("opened","1");
          $el.parent().find("[editevaluation]").remove();

          if (!$el.next("textarea [copied]").length) {
            defaultEvaluationText = $.trim($el.html());
            $el.next("textarea").val(defaultEvaluationText.toString().replace(/<div>/g, '').replace(/<\/div>/g, '\r\n'));
            $el.next("textarea").attr("copied", 1);
          }

          $el.next("textarea[copied='1']").after(
            '<div class="form-group row mt-2" editevaluation>' +
            '<div class="col-12 text-right">' +
            ' <button cancelevaluationedit type="button" onclick="CancelInlineEdit(\'' + elName + '\');return false;" class="btn btn-light border-0">@uiTerms["btnCancel"]</button>' +
            ' <button id="edit_evaluation_form_submit" onclick="return SaveInlineEvaluation(\'' + elName + '\');"  class="btn bg-teal-400 ml-1 font-weight-semibold">@uiTerms["btnSave"]</button>' +
            ' </div>' +
          '</div>');

          $el.next("textarea[copied='1']").after("<div class=\"form-group row mt-2\" editevaluation> " +
               " <label class=\"col-form-label col-2 text-grey-800 font-weight-semibold\">@uiTerms["lblEvaluation"]</label>" +
               " <div class=\"col-10\">" +
               "   <div edit-rating class=\"rating\"></div>" +
               " </div>" +
               " </div>"
          );

          $("[edit-rating]").starRating({
            initialRating: $el.data("rating"),
            minRating: 0.5,
            disableAfterRate: false,
            starSize: 25,
            callback: function (currentRating, $el) {}
          });
        },
        onUpdate: function (val) {

          if ($caller.attr("opened") == 1) {
            $el.html("<div>" + val.split("\n").join("</div><div>") + "</div>");
          } else {
            $el.html(defaultEvaluationText);
          }
        },
        maxLength: 10000,
        inputType: 'textarea'
      });

      window.setTimeout(function () {
        $el.prop({tabindex:1}).click();
        $el.trigger("focus");
      }, 10);
  }

   function SaveInlineEvaluation(elName) {
     var $el = $(document.getElementById(elName));
     var textAreaValue = $el.next("textarea").val();
     //if (textAreaValue == "") return false;
     var text = "<div>" + $.trim(textAreaValue).split("\n").join("</div><div>") + "</div>";
     var newRating = $el.parent().find("[edit-rating]").starRating("getRating");
     var Uid = $el.data("uid");
     var oldRating = $("[data-field='textmetadata1'][data-uid='" + Uid +"']").text().replace("/5", "");
     if (text != "" && text === $.trim(defaultEvaluationText) && newRating == oldRating) {

        new PNotify({
          title: '@uiTerms["msgCommentHasNotBeenModifiedYet"]',
          icon: 'icon-info3',
          type: 'info'
        });

        return false;
      }

      $("#edit_evaluation_form_submit").prop('disabled', true);
      $('#edit_evaluation_form_submit').html("<i class='fa fa-spinner fa-spin'></i>  @uiTerms["lblProcessing"]");

     $.post("/data/edit-evaluation", {
       applicationId: '@applicationId', candidateId: '@aCandidateId',
       comment: $.trim(textAreaValue), Uid: Uid, ratingValue: newRating
     },
        function (data) {
          PNotify.removeAll();
          var result = data.result;
          if (result == "Success") {

            if ($.trim(textAreaValue) != "") { $el.removeClass("invisible-details").addClass("p-1 mt-1 bg-light"); }
            else { $el.removeClass("p-1 mt-1 bg-light").addClass("invisible-details"); }

            var $caller = $(document.getElementById(elName + "Caller"));
            if ($caller.attr("opened") == 1) {
              $el.html("<div>" + $el.next("textarea").val().split("\n").join("</div><div>") + "</div>");
              defaultEvaluationText = "";
              CloseInlineEdit($el, $caller);
              var t = (newRating + "/5").replace(".0/5", "/5");
              $("[data-field='textmetadata1'][data-uid='" + Uid + "']").text(t);
            }

            new PNotify({
              title: '@uiTerms["msgEvaluationEdited"]',
              icon: 'icon-checkmark3',
              type: 'success'
            });

          } else {
            $("#edit_evaluation_form_submit").prop('disabled', false);
            $('#edit_evaluation_form_submit').html('@uiTerms["btnSave"]');
            new PNotify({
              title: data.errorText,
              type: 'error'
            });
          }
        });

      new PNotify({
        title: '@uiTerms["msgUpdating"]',
        icon: 'icon-info',
        type: 'info'
      });
    }
</script>

<script>
  $("#expDateValue").text('@Utils.LocalDateTime(Convert.ToDateTime(result._source.expiryDate), userPrefs.timeZoneId, language).asMidDate');
  $("#expDate").removeClass("d-none");

  function CopyToClipboard(containerid, message) {
    if (document.selection) {
      var range = document.body.createTextRange();
      range.moveToElementText(document.getElementById(containerid));
      range.select().createTextRange();
      document.execCommand("copy");

    } else if (window.getSelection) {
      var range = document.createRange();
      range.selectNode(document.getElementById(containerid));
      window.getSelection().addRange(range);
      document.execCommand("copy");
      window.getSelection().empty();
      new PNotify({
        title: message,
        icon: 'icon-checkmark3',
        type: 'success'
      });
      // alert("text copied, copy in the text-area")
    }
  }

  clearInterval(HeartbeatInterval)
  HeartbeatInterval = setInterval(Heartbeat, 30000);
  clearInterval(LogoutInterval)
  LogoutInterval = setInterval(Logout, @userPrefs.userInactivityTimeout * 60000);
</script>
@*@{ stopwatch4.Stop();
  stopwatch.Stop();
}*@

@*<script>
  console.log("@stopwatch1.ElapsedMilliseconds");
  console.log("@stopwatch2.ElapsedMilliseconds");
  console.log("@stopwatch3.ElapsedMilliseconds");
  console.log("@stopwatch31.ElapsedMilliseconds");
  console.log("@stopwatch32.ElapsedMilliseconds");
  console.log("@stopwatch33.ElapsedMilliseconds");
  console.log("@stopwatch4.ElapsedMilliseconds");
  console.log("@stopwatch.ElapsedMilliseconds");
</script>*@